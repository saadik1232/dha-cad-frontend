[{"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\index.js":"1","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\App.js":"2","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\serviceWorker.js":"3","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\reducers\\index.js":"4","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\configs\\index.js":"5","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\WebRtc\\WebRtc.jsx":"6","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Test\\Test.jsx":"7","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Project.jsx":"8","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\containers\\Modal\\Modal.jsx":"9","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\private notifications\\AddPrivateNotification.jsx":"10","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\private notifications\\GetAllNotifications.jsx":"11","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\Public Notification\\AddNotifiaction.jsx":"12","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\UserNotification\\GetUserNotification.jsx":"13","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\Public Notification\\GetPublicNotification.jsx":"14","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\actions\\index.js":"15","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Dashboard.jsx":"16","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Login\\Login.jsx":"17","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Supervisor.jsx":"18","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Admin.jsx":"19","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\SuperAdmin.jsx":"20","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Supervisor.jsx":"21","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Operator.jsx":"22","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Mainscreen.jsx":"23","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\containers\\Panel\\Panel.jsx":"24","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\containers\\PageCenter\\PageCenter.jsx":"25","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Supervisor\\Supervisor.jsx":"26","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Users\\Users.jsx":"27","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\TopBar\\TopBar.jsx":"28","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Services\\Services.jsx":"29","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Operator\\Operator.jsx":"30","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Geofence\\Geofence.jsx":"31","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Natures\\Natures.jsx":"32","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Wall\\Wall.jsx":"33","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Subscriptions\\Subscriptions.jsx":"34","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Groups\\Groups.jsx":"35","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Panics\\Panics.jsx":"36","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Responders\\Responders.jsx":"37","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Priorities\\Priorities.jsx":"38","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Logs\\Logs.jsx":"39","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Applications\\Applications.jsx":"40","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\GeoView\\GeoView.jsx":"41","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Geo\\Geo.jsx":"42","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Profile\\Profile.jsx":"43","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\ResponderView\\ResponderView.jsx":"44","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Chatbox\\Chatbox.jsx":"45","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Customers\\Customers.jsx":"46","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Supervisor\\Supervisor.jsx":"47","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\TopBar\\TopBar.jsx":"48","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Users\\Users.jsx":"49","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Wall\\Wall.jsx":"50","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Operator\\Operator.jsx":"51","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Geofence\\Geofence.jsx":"52","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Natures\\Natures.jsx":"53","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Priorities\\Priorities.jsx":"54","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Subscriptions\\Subscriptions.jsx":"55","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Groups\\Groups.jsx":"56","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Responders\\Responders.jsx":"57","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Services\\Services.jsx":"58","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Panics\\Panics.jsx":"59","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Logs\\Logs.jsx":"60","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Supervisor\\Supervisor.jsx":"61","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Applications\\Applications.jsx":"62","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Customers\\Customers.jsx":"63","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\GeoView\\GeoView.jsx":"64","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Profile\\Profile.jsx":"65","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\ResponderView\\ResponderView.jsx":"66","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Geo\\Geo.jsx":"67","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\NotificationLogs\\NotificationLogs.jsx":"68","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\ChatLogs\\ChatLogs.jsx":"69","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Users\\Users.jsx":"70","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Operator\\Operator.jsx":"71","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Geofence\\Geofence.jsx":"72","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Supervisor\\Supervisor.jsx":"73","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Wall\\Wall.jsx":"74","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\TopBar\\TopBar.jsx":"75","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Priorities\\Priorities.jsx":"76","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Natures\\Natures.jsx":"77","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Subscriptions\\Subscriptions.jsx":"78","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Responders\\Responders.jsx":"79","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Groups\\Groups.jsx":"80","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Logs\\Logs.jsx":"81","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Applications\\Applications.jsx":"82","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Customers\\Customers.jsx":"83","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Panics\\Panics.jsx":"84","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Geo\\Geo.jsx":"85","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\GeoView\\GeoView.jsx":"86","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Profile\\Profile.jsx":"87","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Services\\Services.jsx":"88","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\ResponderView\\ResponderView.jsx":"89","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\TopBar\\TopBar.jsx":"90","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Wall\\Wall.jsx":"91","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Users\\Users.jsx":"92","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Operator\\Operator.jsx":"93","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Geofence\\Geofence.jsx":"94","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Chatbox\\Chatbox.jsx":"95","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\ResponderView\\ResponderView.jsx":"96","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Services\\Services.jsx":"97","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Natures\\Natures.jsx":"98","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\GeoView\\GeoView.jsx":"99","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Profile\\Profile.jsx":"100","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Geo\\Geo.jsx":"101","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Customers\\Customers.jsx":"102","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Applications\\Applications.jsx":"103","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Logs\\Logs.jsx":"104","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Panics\\Panics.jsx":"105","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Responders\\Responders.jsx":"106","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Groups\\Groups.jsx":"107","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Subscriptions\\Subscriptions.jsx":"108","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Priorities\\Priorities.jsx":"109","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Natures\\Natures.jsx":"110","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Services\\Services.jsx":"111","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\Beeper\\Beeper.js":"112","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Chatbox\\Msg.jsx":"113","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\containers\\TobMenu\\TopMenu.jsx":"114","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Chatbox\\Msg.jsx":"115","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Caller\\Caller.jsx":"116","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\ResponderView\\Create\\Create.jsx":"117","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Supervisor\\Create\\Create.jsx":"118","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Supervisor\\List\\List.jsx":"119","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\containers\\TobMenu\\TopMenu2.jsx":"120","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Natures\\Create\\Create.jsx":"121","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Caller\\Caller.jsx":"122","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Natures\\List\\List.jsx":"123","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Services\\List\\List.jsx":"124","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Services\\Create\\Create.jsx":"125","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Operator\\Create\\Create.jsx":"126","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Operator\\List\\List.jsx":"127","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\ResponderView\\Create\\Create.jsx":"128","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Geofence\\Map\\Map.jsx":"129","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Users\\Create\\Create.jsx":"130","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Groups\\Create\\Create.jsx":"131","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Groups\\List\\List.jsx":"132","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Subscriptions\\Create\\Create.jsx":"133","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\StatusBar\\StatusBar.jsx":"134","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Subscriptions\\List\\List.jsx":"135","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Users\\List\\List.jsx":"136","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Reports\\Reports.jsx":"137","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Map\\Map1.jsx":"138","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\ResponderView\\Create\\Create.jsx":"139","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Services\\Create\\Create.jsx":"140","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Services\\List\\List.jsx":"141","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Natures\\Create\\Create.jsx":"142","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Services\\Create\\Create.jsx":"143","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Services\\List\\List.jsx":"144","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Natures\\List\\List.jsx":"145","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Priorities\\Create\\Create.jsx":"146","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Priorities\\List\\List.jsx":"147","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Groups\\List\\List.jsx":"148","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Groups\\Create\\Create.jsx":"149","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Reports\\Reports.jsx":"150","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Subscriptions\\Create\\Create.jsx":"151","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Subscriptions\\List\\List.jsx":"152","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Natures\\Create\\Create.jsx":"153","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Natures\\List\\List.jsx":"154","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Priorities\\List\\List.jsx":"155","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Priorities\\Create\\Create.jsx":"156","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\StatusBar\\StatusBar.jsx":"157","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Map\\Map1.jsx":"158","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Supervisor\\Create\\Create.jsx":"159","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Supervisor\\List\\List.jsx":"160","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Geofence\\Map\\Map.jsx":"161","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Operator\\Create\\Create.jsx":"162","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Users\\Create\\Create.jsx":"163","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Operator\\List\\List.jsx":"164","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Users\\List\\List.jsx":"165","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\Helpers\\utils.js":"166","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Supervisor\\Create\\Create.jsx":"167","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\ResponderView\\Create\\Create.jsx":"168","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Supervisor\\List\\List.jsx":"169","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Services\\List\\List.jsx":"170","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Services\\Create\\Create.jsx":"171","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Reports\\Reports.jsx":"172","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Groups\\Create\\Create.jsx":"173","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Map\\Spot.jsx":"174","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\private notifications\\Notification.jsx":"175","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Reports\\Reports.jsx":"176","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Groups\\List\\List.jsx":"177","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Subscriptions\\Create\\Create.jsx":"178","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Subscriptions\\List\\List.jsx":"179","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Priorities\\Create\\Create.jsx":"180","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Priorities\\List\\List.jsx":"181","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Natures\\Create\\Create.jsx":"182","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Geofence\\Map\\Map.jsx":"183","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Operator\\List\\List.jsx":"184","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\StatusBar\\StatusBar.jsx":"185","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Map\\Map1.jsx":"186","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Users\\Create\\Create.jsx":"187","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Operator\\Create\\Create.jsx":"188","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Natures\\List\\List.jsx":"189","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Users\\List\\List.jsx":"190","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Priorities\\List\\List.jsx":"191","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Priorities\\Create\\Create.jsx":"192","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Reports\\Reports.jsx":"193","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Subscriptions\\Create\\Create.jsx":"194","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Groups\\List\\List.jsx":"195","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Groups\\Create\\Create.jsx":"196","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Subscriptions\\List\\List.jsx":"197","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\StatusBar\\StatusBar.jsx":"198","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Map\\Map1.jsx":"199","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Natures\\List\\List.jsx":"200","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Natures\\Create\\Create.jsx":"201","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Geofence\\Map\\Map.jsx":"202","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Operator\\Create\\Create.jsx":"203","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Operator\\List\\List.jsx":"204","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Services\\Create\\Create.jsx":"205","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Map\\Spot.jsx":"206","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Services\\List\\List.jsx":"207","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Users\\Create\\Create.jsx":"208","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Supervisor\\Create\\Create.jsx":"209","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Users\\List\\List.jsx":"210","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Geofence\\Geofence.jsx":"211","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Supervisor\\List\\List.jsx":"212","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Operator\\Operator.jsx":"213","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Supervisor\\Supervisor.jsx":"214","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Wall\\Wall.jsx":"215","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Map\\Pin.jsx":"216","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\TopBar\\TopBar.jsx":"217","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Users\\Users.jsx":"218","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\ResponderView\\ResponderView.jsx":"219","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Geo\\Geo.jsx":"220","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\GeoView\\GeoView.jsx":"221","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Customers\\Customers.jsx":"222","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Panics\\Panics.jsx":"223","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Applications\\Applications.jsx":"224","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Profile\\Profile.jsx":"225","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Logs\\Logs.jsx":"226","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Responders\\Responders.jsx":"227","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Groups\\Groups.jsx":"228","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Subscriptions\\Subscriptions.jsx":"229","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Map\\Spot.jsx":"230","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Operator\\Operator.jsx":"231","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Priorities\\Priorities.jsx":"232","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Geofence\\Geofence.jsx":"233","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Supervisor\\Supervisor.jsx":"234","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Natures\\Natures.jsx":"235","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Services\\Services.jsx":"236","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Wall\\Wall.jsx":"237","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Users\\Users.jsx":"238","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\TopBar\\TopBar.jsx":"239","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\ResponderView\\ResponderView.jsx":"240","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Profile\\Profile.jsx":"241","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\GeoView\\GeoView.jsx":"242","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Customers\\Customers.jsx":"243","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Geo\\Geo.jsx":"244","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Applications\\Applications.jsx":"245","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Panics\\Panics.jsx":"246","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Responders\\Responders.jsx":"247","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Logs\\Logs.jsx":"248","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Groups\\Groups.jsx":"249","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Subscriptions\\Subscriptions.jsx":"250","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Priorities\\Priorities.jsx":"251","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Map\\Spot.jsx":"252","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Map\\Pin.jsx":"253","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\StatusBar\\StatusBar.jsx":"254","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Map\\Map1.jsx":"255","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Supervisor\\Create\\Create.jsx":"256","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Supervisor\\List\\List.jsx":"257","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Operator\\Create\\Create.jsx":"258","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Operator\\List\\List.jsx":"259","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Geofence\\Map\\Map.jsx":"260","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Map\\Pin.jsx":"261","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Subscriptions\\Create\\Create.jsx":"262","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Subscriptions\\List\\List.jsx":"263","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Groups\\Create\\Create.jsx":"264","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Groups\\List\\List.jsx":"265","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Reports\\Reports.jsx":"266","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Users\\Create\\Create.jsx":"267","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Users\\List\\List.jsx":"268","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Operator\\Create\\Create.jsx":"269","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Supervisor\\Create\\Create.jsx":"270","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\ResponderView\\Create\\Create.jsx":"271","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Users\\Create\\Create.jsx":"272","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Users\\List\\List.jsx":"273","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\StatusBar\\StatusBar.jsx":"274","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Map\\Map1.jsx":"275","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Services\\Create\\Create.jsx":"276","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Services\\List\\List.jsx":"277","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Natures\\Create\\Create.jsx":"278","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Natures\\List\\List.jsx":"279","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Supervisor\\List\\List.jsx":"280","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Geofence\\Map\\Map.jsx":"281","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Priorities\\List\\List.jsx":"282","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Priorities\\Create\\Create.jsx":"283","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Operator\\List\\List.jsx":"284","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Notifications\\private notifications\\Notification.jsx":"285","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Groups\\Create\\Create.jsx":"286","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Groups\\List\\List.jsx":"287","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Subscriptions\\Create\\Create.jsx":"288","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Subscriptions\\List\\List.jsx":"289","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Map\\Pin.jsx":"290","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Map\\Spot.jsx":"291","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Map\\Spot.jsx":"292","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Priorities\\List\\List.jsx":"293","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Priorities\\Create\\Create.jsx":"294","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Map\\Pin.jsx":"295","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Map\\Pin.jsx":"296"},{"size":784,"mtime":1607675859780,"results":"297","hashOfConfig":"298"},{"size":2246,"mtime":1610792953257,"results":"299","hashOfConfig":"298"},{"size":5227,"mtime":1607675859795,"results":"300","hashOfConfig":"298"},{"size":8312,"mtime":1607675859791,"results":"301","hashOfConfig":"298"},{"size":2978,"mtime":1625487048222,"results":"302","hashOfConfig":"298"},{"size":1299,"mtime":1607675859767,"results":"303","hashOfConfig":"298"},{"size":5922,"mtime":1607675859766,"results":"304","hashOfConfig":"298"},{"size":595,"mtime":1607675859766,"results":"305","hashOfConfig":"298"},{"size":2230,"mtime":1610094228431,"results":"306","hashOfConfig":"298"},{"size":5362,"mtime":1610795621901,"results":"307","hashOfConfig":"298"},{"size":2765,"mtime":1610798188245,"results":"308","hashOfConfig":"298"},{"size":5173,"mtime":1610795462739,"results":"309","hashOfConfig":"298"},{"size":1761,"mtime":1610795393103,"results":"310","hashOfConfig":"298"},{"size":2743,"mtime":1610795513718,"results":"311","hashOfConfig":"298"},{"size":47722,"mtime":1610598733946,"results":"312","hashOfConfig":"298"},{"size":2536,"mtime":1610951350702,"results":"313","hashOfConfig":"298"},{"size":1979,"mtime":1610085533950,"results":"314","hashOfConfig":"298"},{"size":5799,"mtime":1607675859763,"results":"315","hashOfConfig":"298"},{"size":5808,"mtime":1607675859658,"results":"316","hashOfConfig":"298"},{"size":5788,"mtime":1607675859741,"results":"317","hashOfConfig":"298"},{"size":5803,"mtime":1611036833976,"results":"318","hashOfConfig":"298"},{"size":5392,"mtime":1607675859717,"results":"319","hashOfConfig":"298"},{"size":5786,"mtime":1607675859681,"results":"320","hashOfConfig":"298"},{"size":520,"mtime":1607675859779,"results":"321","hashOfConfig":"298"},{"size":537,"mtime":1607675859779,"results":"322","hashOfConfig":"298"},{"size":1967,"mtime":1607675859764,"results":"323","hashOfConfig":"298"},{"size":1721,"mtime":1607675859765,"results":"324","hashOfConfig":"298"},{"size":7049,"mtime":1610009907806,"results":"325","hashOfConfig":"298"},{"size":1728,"mtime":1607675859762,"results":"326","hashOfConfig":"298"},{"size":1954,"mtime":1607675859759,"results":"327","hashOfConfig":"298"},{"size":900,"mtime":1607675859751,"results":"328","hashOfConfig":"298"},{"size":1713,"mtime":1607675859758,"results":"329","hashOfConfig":"298"},{"size":606,"mtime":1607675859765,"results":"330","hashOfConfig":"298"},{"size":1778,"mtime":1607675859763,"results":"331","hashOfConfig":"298"},{"size":1886,"mtime":1607675859752,"results":"332","hashOfConfig":"298"},{"size":21808,"mtime":1611049350400,"results":"333","hashOfConfig":"298"},{"size":18302,"mtime":1613022271840,"results":"334","hashOfConfig":"298"},{"size":1754,"mtime":1607675859760,"results":"335","hashOfConfig":"298"},{"size":12959,"mtime":1611551881504,"results":"336","hashOfConfig":"298"},{"size":5283,"mtime":1607675859747,"results":"337","hashOfConfig":"298"},{"size":5943,"mtime":1607675859750,"results":"338","hashOfConfig":"298"},{"size":6524,"mtime":1607675859750,"results":"339","hashOfConfig":"298"},{"size":4301,"mtime":1607675859760,"results":"340","hashOfConfig":"298"},{"size":7327,"mtime":1607675859761,"results":"341","hashOfConfig":"298"},{"size":15889,"mtime":1607675859748,"results":"342","hashOfConfig":"298"},{"size":3314,"mtime":1607675859749,"results":"343","hashOfConfig":"298"},{"size":1967,"mtime":1607675859764,"results":"344","hashOfConfig":"298"},{"size":10826,"mtime":1607675859675,"results":"345","hashOfConfig":"298"},{"size":1721,"mtime":1607675859676,"results":"346","hashOfConfig":"298"},{"size":606,"mtime":1607675859676,"results":"347","hashOfConfig":"298"},{"size":1954,"mtime":1607675859668,"results":"348","hashOfConfig":"298"},{"size":900,"mtime":1607675859661,"results":"349","hashOfConfig":"298"},{"size":1713,"mtime":1607675859667,"results":"350","hashOfConfig":"298"},{"size":1754,"mtime":1607675859669,"results":"351","hashOfConfig":"298"},{"size":1778,"mtime":1607675859674,"results":"352","hashOfConfig":"298"},{"size":1834,"mtime":1607675859663,"results":"353","hashOfConfig":"298"},{"size":15680,"mtime":1607675859672,"results":"354","hashOfConfig":"298"},{"size":1728,"mtime":1607675859673,"results":"355","hashOfConfig":"298"},{"size":21600,"mtime":1607675859668,"results":"356","hashOfConfig":"298"},{"size":12959,"mtime":1607675859663,"results":"357","hashOfConfig":"298"},{"size":1967,"mtime":1607675859675,"results":"358","hashOfConfig":"298"},{"size":5283,"mtime":1607675859658,"results":"359","hashOfConfig":"298"},{"size":3314,"mtime":1607675859658,"results":"360","hashOfConfig":"298"},{"size":5943,"mtime":1607675859661,"results":"361","hashOfConfig":"298"},{"size":4301,"mtime":1607675859669,"results":"362","hashOfConfig":"298"},{"size":8149,"mtime":1607675859670,"results":"363","hashOfConfig":"298"},{"size":6524,"mtime":1607675859659,"results":"364","hashOfConfig":"298"},{"size":5279,"mtime":1607675859667,"results":"365","hashOfConfig":"298"},{"size":5743,"mtime":1607675859658,"results":"366","hashOfConfig":"298"},{"size":1721,"mtime":1607675859743,"results":"367","hashOfConfig":"298"},{"size":1954,"mtime":1607675859737,"results":"368","hashOfConfig":"298"},{"size":900,"mtime":1607675859731,"results":"369","hashOfConfig":"298"},{"size":1967,"mtime":1607675859742,"results":"370","hashOfConfig":"298"},{"size":606,"mtime":1607675859743,"results":"371","hashOfConfig":"298"},{"size":4900,"mtime":1607675859742,"results":"372","hashOfConfig":"298"},{"size":1754,"mtime":1607675859738,"results":"373","hashOfConfig":"298"},{"size":1713,"mtime":1607675859736,"results":"374","hashOfConfig":"298"},{"size":1778,"mtime":1607675859741,"results":"375","hashOfConfig":"298"},{"size":13067,"mtime":1607675859739,"results":"376","hashOfConfig":"298"},{"size":1834,"mtime":1607675859732,"results":"377","hashOfConfig":"298"},{"size":12959,"mtime":1607675859733,"results":"378","hashOfConfig":"298"},{"size":5283,"mtime":1607675859729,"results":"379","hashOfConfig":"298"},{"size":3314,"mtime":1607675859729,"results":"380","hashOfConfig":"298"},{"size":21600,"mtime":1607675859737,"results":"381","hashOfConfig":"298"},{"size":6524,"mtime":1607675859730,"results":"382","hashOfConfig":"298"},{"size":5943,"mtime":1607675859730,"results":"383","hashOfConfig":"298"},{"size":4301,"mtime":1607675859738,"results":"384","hashOfConfig":"298"},{"size":1728,"mtime":1607675859740,"results":"385","hashOfConfig":"298"},{"size":7327,"mtime":1607675859739,"results":"386","hashOfConfig":"298"},{"size":7133,"mtime":1611038968801,"results":"387","hashOfConfig":"298"},{"size":606,"mtime":1607675859765,"results":"388","hashOfConfig":"298"},{"size":1721,"mtime":1607675859765,"results":"389","hashOfConfig":"298"},{"size":1954,"mtime":1607675859759,"results":"390","hashOfConfig":"298"},{"size":900,"mtime":1607675859751,"results":"391","hashOfConfig":"298"},{"size":15907,"mtime":1611038008398,"results":"392","hashOfConfig":"298"},{"size":8149,"mtime":1607675859688,"results":"393","hashOfConfig":"298"},{"size":1728,"mtime":1607675859762,"results":"394","hashOfConfig":"298"},{"size":1713,"mtime":1607675859758,"results":"395","hashOfConfig":"298"},{"size":5943,"mtime":1607675859678,"results":"396","hashOfConfig":"298"},{"size":4301,"mtime":1607675859687,"results":"397","hashOfConfig":"298"},{"size":6524,"mtime":1607675859677,"results":"398","hashOfConfig":"298"},{"size":3314,"mtime":1607675859677,"results":"399","hashOfConfig":"298"},{"size":5283,"mtime":1607675859676,"results":"400","hashOfConfig":"298"},{"size":12959,"mtime":1607675859681,"results":"401","hashOfConfig":"298"},{"size":21600,"mtime":1607675859686,"results":"402","hashOfConfig":"298"},{"size":13067,"mtime":1607675859688,"results":"403","hashOfConfig":"298"},{"size":1834,"mtime":1607675859680,"results":"404","hashOfConfig":"298"},{"size":1778,"mtime":1607675859690,"results":"405","hashOfConfig":"298"},{"size":1754,"mtime":1607675859687,"results":"406","hashOfConfig":"298"},{"size":1713,"mtime":1607675859685,"results":"407","hashOfConfig":"298"},{"size":1728,"mtime":1607675859689,"results":"408","hashOfConfig":"298"},{"size":970,"mtime":1607675859562,"results":"409","hashOfConfig":"298"},{"size":472,"mtime":1607675859748,"results":"410","hashOfConfig":"298"},{"size":1453,"mtime":1607675859780,"results":"411","hashOfConfig":"298"},{"size":475,"mtime":1611038039475,"results":"412","hashOfConfig":"298"},{"size":7215,"mtime":1607675859748,"results":"413","hashOfConfig":"298"},{"size":5323,"mtime":1607675859761,"results":"414","hashOfConfig":"298"},{"size":4076,"mtime":1607675859764,"results":"415","hashOfConfig":"298"},{"size":2571,"mtime":1607675859764,"results":"416","hashOfConfig":"298"},{"size":1454,"mtime":1611038608965,"results":"417","hashOfConfig":"298"},{"size":2893,"mtime":1607675859758,"results":"418","hashOfConfig":"298"},{"size":7215,"mtime":1607675859748,"results":"419","hashOfConfig":"298"},{"size":2224,"mtime":1607675859758,"results":"420","hashOfConfig":"298"},{"size":2236,"mtime":1607675859762,"results":"421","hashOfConfig":"298"},{"size":2859,"mtime":1607675859762,"results":"422","hashOfConfig":"298"},{"size":4043,"mtime":1607675859758,"results":"423","hashOfConfig":"298"},{"size":3138,"mtime":1607675859759,"results":"424","hashOfConfig":"298"},{"size":6858,"mtime":1607675859688,"results":"425","hashOfConfig":"298"},{"size":5930,"mtime":1607675859751,"results":"426","hashOfConfig":"298"},{"size":4013,"mtime":1607675859765,"results":"427","hashOfConfig":"298"},{"size":3064,"mtime":1607675859680,"results":"428","hashOfConfig":"298"},{"size":2443,"mtime":1607675859681,"results":"429","hashOfConfig":"298"},{"size":5060,"mtime":1607675859690,"results":"430","hashOfConfig":"298"},{"size":4981,"mtime":1611036953056,"results":"431","hashOfConfig":"298"},{"size":2777,"mtime":1607675859690,"results":"432","hashOfConfig":"298"},{"size":2554,"mtime":1607675859765,"results":"433","hashOfConfig":"298"},{"size":1088,"mtime":1607675859687,"results":"434","hashOfConfig":"298"},{"size":41009,"mtime":1611059286991,"results":"435","hashOfConfig":"298"},{"size":5323,"mtime":1607675859739,"results":"436","hashOfConfig":"298"},{"size":2859,"mtime":1607675859740,"results":"437","hashOfConfig":"298"},{"size":2236,"mtime":1607675859740,"results":"438","hashOfConfig":"298"},{"size":2893,"mtime":1607675859684,"results":"439","hashOfConfig":"298"},{"size":2859,"mtime":1607675859689,"results":"440","hashOfConfig":"298"},{"size":2236,"mtime":1607675859689,"results":"441","hashOfConfig":"298"},{"size":2224,"mtime":1607675859685,"results":"442","hashOfConfig":"298"},{"size":2896,"mtime":1607675859686,"results":"443","hashOfConfig":"298"},{"size":2274,"mtime":1607675859687,"results":"444","hashOfConfig":"298"},{"size":2443,"mtime":1607675859733,"results":"445","hashOfConfig":"298"},{"size":2651,"mtime":1607675859732,"results":"446","hashOfConfig":"298"},{"size":1088,"mtime":1607675859738,"results":"447","hashOfConfig":"298"},{"size":5060,"mtime":1607675859741,"results":"448","hashOfConfig":"298"},{"size":2777,"mtime":1607675859741,"results":"449","hashOfConfig":"298"},{"size":2893,"mtime":1607675859736,"results":"450","hashOfConfig":"298"},{"size":2224,"mtime":1607675859736,"results":"451","hashOfConfig":"298"},{"size":2274,"mtime":1607675859738,"results":"452","hashOfConfig":"298"},{"size":2896,"mtime":1607675859737,"results":"453","hashOfConfig":"298"},{"size":4900,"mtime":1607675859740,"results":"454","hashOfConfig":"298"},{"size":31791,"mtime":1607675859734,"results":"455","hashOfConfig":"298"},{"size":4076,"mtime":1607675859742,"results":"456","hashOfConfig":"298"},{"size":2571,"mtime":1607675859742,"results":"457","hashOfConfig":"298"},{"size":5930,"mtime":1607675859732,"results":"458","hashOfConfig":"298"},{"size":4043,"mtime":1607675859736,"results":"459","hashOfConfig":"298"},{"size":4172,"mtime":1607675859743,"results":"460","hashOfConfig":"298"},{"size":2662,"mtime":1607675859737,"results":"461","hashOfConfig":"298"},{"size":2848,"mtime":1607675859743,"results":"462","hashOfConfig":"298"},{"size":244,"mtime":1610346421116,"results":"463","hashOfConfig":"298"},{"size":4076,"mtime":1607675859674,"results":"464","hashOfConfig":"298"},{"size":6858,"mtime":1607675859670,"results":"465","hashOfConfig":"298"},{"size":2571,"mtime":1607675859674,"results":"466","hashOfConfig":"298"},{"size":2236,"mtime":1607675859673,"results":"467","hashOfConfig":"298"},{"size":2859,"mtime":1607675859672,"results":"468","hashOfConfig":"298"},{"size":1088,"mtime":1607675859670,"results":"469","hashOfConfig":"298"},{"size":3064,"mtime":1607675859662,"results":"470","hashOfConfig":"298"},{"size":1678,"mtime":1610340765791,"results":"471","hashOfConfig":"298"},{"size":3233,"mtime":1610598746372,"results":"472","hashOfConfig":"298"},{"size":1088,"mtime":1607675859760,"results":"473","hashOfConfig":"298"},{"size":2443,"mtime":1607675859663,"results":"474","hashOfConfig":"298"},{"size":5060,"mtime":1607675859673,"results":"475","hashOfConfig":"298"},{"size":2777,"mtime":1607675859674,"results":"476","hashOfConfig":"298"},{"size":2896,"mtime":1607675859669,"results":"477","hashOfConfig":"298"},{"size":2274,"mtime":1607675859669,"results":"478","hashOfConfig":"298"},{"size":2893,"mtime":1607675859666,"results":"479","hashOfConfig":"298"},{"size":5930,"mtime":1607675859662,"results":"480","hashOfConfig":"298"},{"size":2662,"mtime":1607675859668,"results":"481","hashOfConfig":"298"},{"size":4900,"mtime":1607675859673,"results":"482","hashOfConfig":"298"},{"size":33645,"mtime":1607675859664,"results":"483","hashOfConfig":"298"},{"size":4013,"mtime":1607675859675,"results":"484","hashOfConfig":"298"},{"size":4043,"mtime":1607675859668,"results":"485","hashOfConfig":"298"},{"size":2224,"mtime":1607675859667,"results":"486","hashOfConfig":"298"},{"size":2554,"mtime":1607675859675,"results":"487","hashOfConfig":"298"},{"size":2274,"mtime":1607675859760,"results":"488","hashOfConfig":"298"},{"size":2896,"mtime":1607675859759,"results":"489","hashOfConfig":"298"},{"size":1088,"mtime":1607675859760,"results":"490","hashOfConfig":"298"},{"size":5060,"mtime":1607675859763,"results":"491","hashOfConfig":"298"},{"size":2443,"mtime":1607675859752,"results":"492","hashOfConfig":"298"},{"size":2711,"mtime":1607675859752,"results":"493","hashOfConfig":"298"},{"size":2777,"mtime":1607675859763,"results":"494","hashOfConfig":"298"},{"size":4900,"mtime":1607675859762,"results":"495","hashOfConfig":"298"},{"size":41026,"mtime":1611059980658,"results":"496","hashOfConfig":"298"},{"size":2224,"mtime":1607675859758,"results":"497","hashOfConfig":"298"},{"size":2893,"mtime":1607675859758,"results":"498","hashOfConfig":"298"},{"size":5930,"mtime":1607675859751,"results":"499","hashOfConfig":"298"},{"size":4043,"mtime":1607675859758,"results":"500","hashOfConfig":"298"},{"size":3138,"mtime":1607675859759,"results":"501","hashOfConfig":"298"},{"size":2859,"mtime":1607675859762,"results":"502","hashOfConfig":"298"},{"size":1630,"mtime":1607675859735,"results":"503","hashOfConfig":"298"},{"size":2236,"mtime":1607675859762,"results":"504","hashOfConfig":"298"},{"size":4013,"mtime":1607675859765,"results":"505","hashOfConfig":"298"},{"size":4076,"mtime":1607675859764,"results":"506","hashOfConfig":"298"},{"size":2554,"mtime":1607675859765,"results":"507","hashOfConfig":"298"},{"size":900,"mtime":1607675859678,"results":"508","hashOfConfig":"298"},{"size":2571,"mtime":1607675859764,"results":"509","hashOfConfig":"298"},{"size":1954,"mtime":1607675859686,"results":"510","hashOfConfig":"298"},{"size":1967,"mtime":1607675859691,"results":"511","hashOfConfig":"298"},{"size":606,"mtime":1607675859692,"results":"512","hashOfConfig":"298"},{"size":3780,"mtime":1610342139154,"results":"513","hashOfConfig":"298"},{"size":5951,"mtime":1607675859691,"results":"514","hashOfConfig":"298"},{"size":1721,"mtime":1607675859692,"results":"515","hashOfConfig":"298"},{"size":3951,"mtime":1607675859720,"results":"516","hashOfConfig":"298"},{"size":6422,"mtime":1607675859708,"results":"517","hashOfConfig":"298"},{"size":5943,"mtime":1607675859709,"results":"518","hashOfConfig":"298"},{"size":3314,"mtime":1607675859708,"results":"519","hashOfConfig":"298"},{"size":13727,"mtime":1607675859718,"results":"520","hashOfConfig":"298"},{"size":5238,"mtime":1607675859708,"results":"521","hashOfConfig":"298"},{"size":4299,"mtime":1607675859719,"results":"522","hashOfConfig":"298"},{"size":12842,"mtime":1607675859712,"results":"523","hashOfConfig":"298"},{"size":13517,"mtime":1607675859720,"results":"524","hashOfConfig":"298"},{"size":1834,"mtime":1607675859712,"results":"525","hashOfConfig":"298"},{"size":1778,"mtime":1607675859722,"results":"526","hashOfConfig":"298"},{"size":1630,"mtime":1607675859666,"results":"527","hashOfConfig":"298"},{"size":1954,"mtime":1607675859718,"results":"528","hashOfConfig":"298"},{"size":1754,"mtime":1607675859719,"results":"529","hashOfConfig":"298"},{"size":898,"mtime":1607675859710,"results":"530","hashOfConfig":"298"},{"size":1967,"mtime":1607675859723,"results":"531","hashOfConfig":"298"},{"size":1713,"mtime":1607675859717,"results":"532","hashOfConfig":"298"},{"size":1728,"mtime":1607675859721,"results":"533","hashOfConfig":"298"},{"size":604,"mtime":1607675859724,"results":"534","hashOfConfig":"298"},{"size":1721,"mtime":1607675859724,"results":"535","hashOfConfig":"298"},{"size":2931,"mtime":1607675859723,"results":"536","hashOfConfig":"298"},{"size":7327,"mtime":1607675859761,"results":"537","hashOfConfig":"298"},{"size":4301,"mtime":1607675859760,"results":"538","hashOfConfig":"298"},{"size":5943,"mtime":1607675859750,"results":"539","hashOfConfig":"298"},{"size":3314,"mtime":1607675859749,"results":"540","hashOfConfig":"298"},{"size":6524,"mtime":1607675859750,"results":"541","hashOfConfig":"298"},{"size":5283,"mtime":1607675859747,"results":"542","hashOfConfig":"298"},{"size":21941,"mtime":1611048965127,"results":"543","hashOfConfig":"298"},{"size":17500,"mtime":1611038080454,"results":"544","hashOfConfig":"298"},{"size":12959,"mtime":1607675859755,"results":"545","hashOfConfig":"298"},{"size":1886,"mtime":1607675859752,"results":"546","hashOfConfig":"298"},{"size":1778,"mtime":1607675859763,"results":"547","hashOfConfig":"298"},{"size":1754,"mtime":1607675859760,"results":"548","hashOfConfig":"298"},{"size":1678,"mtime":1610340765791,"results":"549","hashOfConfig":"298"},{"size":3643,"mtime":1607675859734,"results":"550","hashOfConfig":"298"},{"size":4900,"mtime":1607675859689,"results":"551","hashOfConfig":"298"},{"size":31815,"mtime":1607675859682,"results":"552","hashOfConfig":"298"},{"size":4076,"mtime":1607675859691,"results":"553","hashOfConfig":"298"},{"size":2571,"mtime":1607675859691,"results":"554","hashOfConfig":"298"},{"size":4043,"mtime":1607675859685,"results":"555","hashOfConfig":"298"},{"size":2662,"mtime":1607675859685,"results":"556","hashOfConfig":"298"},{"size":5930,"mtime":1607675859680,"results":"557","hashOfConfig":"298"},{"size":3643,"mtime":1607675859665,"results":"558","hashOfConfig":"298"},{"size":5060,"mtime":1607675859722,"results":"559","hashOfConfig":"298"},{"size":2777,"mtime":1607675859722,"results":"560","hashOfConfig":"298"},{"size":2523,"mtime":1607675859711,"results":"561","hashOfConfig":"298"},{"size":2388,"mtime":1607675859712,"results":"562","hashOfConfig":"298"},{"size":1088,"mtime":1607675859720,"results":"563","hashOfConfig":"298"},{"size":4013,"mtime":1607675859692,"results":"564","hashOfConfig":"298"},{"size":2554,"mtime":1607675859692,"results":"565","hashOfConfig":"298"},{"size":4043,"mtime":1607675859718,"results":"566","hashOfConfig":"298"},{"size":4076,"mtime":1607675859722,"results":"567","hashOfConfig":"298"},{"size":5323,"mtime":1607675859761,"results":"568","hashOfConfig":"298"},{"size":4013,"mtime":1607675859723,"results":"569","hashOfConfig":"298"},{"size":2554,"mtime":1607675859724,"results":"570","hashOfConfig":"298"},{"size":5558,"mtime":1607675859721,"results":"571","hashOfConfig":"298"},{"size":29435,"mtime":1607675859715,"results":"572","hashOfConfig":"298"},{"size":2859,"mtime":1607675859720,"results":"573","hashOfConfig":"298"},{"size":2236,"mtime":1607675859721,"results":"574","hashOfConfig":"298"},{"size":2893,"mtime":1607675859717,"results":"575","hashOfConfig":"298"},{"size":2224,"mtime":1607675859717,"results":"576","hashOfConfig":"298"},{"size":2571,"mtime":1607675859723,"results":"577","hashOfConfig":"298"},{"size":5926,"mtime":1607675859710,"results":"578","hashOfConfig":"298"},{"size":2274,"mtime":1607675859719,"results":"579","hashOfConfig":"298"},{"size":2896,"mtime":1607675859719,"results":"580","hashOfConfig":"298"},{"size":2662,"mtime":1607675859718,"results":"581","hashOfConfig":"298"},{"size":3233,"mtime":1610598746372,"results":"582","hashOfConfig":"298"},{"size":2711,"mtime":1607675859752,"results":"583","hashOfConfig":"298"},{"size":2443,"mtime":1607675859752,"results":"584","hashOfConfig":"298"},{"size":5060,"mtime":1607675859763,"results":"585","hashOfConfig":"298"},{"size":2777,"mtime":1607675859763,"results":"586","hashOfConfig":"298"},{"size":3780,"mtime":1610342139154,"results":"587","hashOfConfig":"298"},{"size":1630,"mtime":1607675859684,"results":"588","hashOfConfig":"298"},{"size":1630,"mtime":1607675859716,"results":"589","hashOfConfig":"298"},{"size":2274,"mtime":1607675859760,"results":"590","hashOfConfig":"298"},{"size":2896,"mtime":1607675859759,"results":"591","hashOfConfig":"298"},{"size":3643,"mtime":1607675859683,"results":"592","hashOfConfig":"298"},{"size":3643,"mtime":1607675859715,"results":"593","hashOfConfig":"298"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},"1eieucc",{"filePath":"597","messages":"598","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"596"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"596"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"607","messages":"608","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"596"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"596"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":137,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"596"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"596"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"596"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"596"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"596"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"596"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"596"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"596"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"596"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"596"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"596"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"596"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"596"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"596"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"596"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"596"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"596"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"596"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"596"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"596"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"596"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"596"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"596"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"596"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"596"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"596"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"596"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"596"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"596"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"596"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"596"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"596"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"596"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"596"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"596"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"596"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"596"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"596"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"596"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"596"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"596"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"596"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"596"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"596"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762","usedDeprecatedRules":"596"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"596"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"596"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"596"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"596"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"596"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"596"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"596"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783","usedDeprecatedRules":"596"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"596"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"596"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"596"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"596"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"596"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"596"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"596"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"596"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"596"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"596"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"596"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"596"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"596"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"596"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"596"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"596"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"596"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"826","usedDeprecatedRules":"596"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762","usedDeprecatedRules":"596"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"596"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"596"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"596"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"596"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"596"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"596"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"596"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"596"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"596"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"596"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"596"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"596"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"596"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"596"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"596"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"596"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871","usedDeprecatedRules":"596"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"874","usedDeprecatedRules":"596"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"596"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"596"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883","usedDeprecatedRules":"596"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"886","usedDeprecatedRules":"596"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871","usedDeprecatedRules":"596"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891","usedDeprecatedRules":"596"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"596"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"596"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"596"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"596"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"596"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"596"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"596"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"596"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"596"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"596"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924","usedDeprecatedRules":"596"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"596"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"596"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":65,"fixableErrorCount":0,"fixableWarningCount":0,"source":"935","usedDeprecatedRules":"596"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"874","usedDeprecatedRules":"596"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"596"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"596"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"886","usedDeprecatedRules":"596"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"596"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"596"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891","usedDeprecatedRules":"596"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"596"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"596"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"596"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960","usedDeprecatedRules":"596"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"596"},{"filePath":"965","messages":"966","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"596"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"886","usedDeprecatedRules":"596"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891","usedDeprecatedRules":"596"},{"filePath":"971","messages":"972","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"596"},{"filePath":"973","messages":"974","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"596"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"977","usedDeprecatedRules":"596"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"980","usedDeprecatedRules":"596"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"596"},{"filePath":"983","messages":"984","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"596"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"596"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"596"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"991","usedDeprecatedRules":"596"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"596"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"997","usedDeprecatedRules":"596"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1000","usedDeprecatedRules":"596"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"596"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"596"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"596"},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"596"},{"filePath":"1009","messages":"1010","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"596"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"596"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"596"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"596"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"596"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"596"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"596"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"596"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"886","usedDeprecatedRules":"596"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"596"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"596"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"977","usedDeprecatedRules":"596"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1042","usedDeprecatedRules":"596"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"596"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"596"},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891","usedDeprecatedRules":"596"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"596"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"596"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"596"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"596"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"596"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1063","usedDeprecatedRules":"596"},{"filePath":"1064","messages":"1065","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"596"},{"filePath":"1066","messages":"1067","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"977","usedDeprecatedRules":"596"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":64,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1070","usedDeprecatedRules":"596"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891","usedDeprecatedRules":"596"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"886","usedDeprecatedRules":"596"},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"596"},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"596"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"596"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"596"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1085","usedDeprecatedRules":"596"},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"596"},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"596"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"596"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"596"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"596"},{"filePath":"1096","messages":"1097","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"596"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"596"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"596"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1106","usedDeprecatedRules":"596"},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1109","usedDeprecatedRules":"596"},{"filePath":"1110","messages":"1111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"596"},{"filePath":"1112","messages":"1113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1114","usedDeprecatedRules":"596"},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1117","usedDeprecatedRules":"596"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"596"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1124","usedDeprecatedRules":"596"},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1127","usedDeprecatedRules":"596"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1130","usedDeprecatedRules":"596"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1133","usedDeprecatedRules":"596"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136","usedDeprecatedRules":"596"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"596"},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"596"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1085","usedDeprecatedRules":"596"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"596"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"596"},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1149","usedDeprecatedRules":"596"},{"filePath":"1150","messages":"1151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"596"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"596"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"596"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"596"},{"filePath":"1160","messages":"1161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162","usedDeprecatedRules":"596"},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"596"},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"596"},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"596"},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"596"},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"596"},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1177","usedDeprecatedRules":"596"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180","usedDeprecatedRules":"596"},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"596"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"596"},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"596"},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"596"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"596"},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1193","usedDeprecatedRules":"596"},{"filePath":"1194","messages":"1195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"977","usedDeprecatedRules":"596"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1198","usedDeprecatedRules":"596"},{"filePath":"1199","messages":"1200","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"596"},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"596"},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"596"},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"596"},{"filePath":"1207","messages":"1208","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"596"},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1193","usedDeprecatedRules":"596"},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"596"},{"filePath":"1213","messages":"1214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"596"},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1217","usedDeprecatedRules":"596"},{"filePath":"1218","messages":"1219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1220","usedDeprecatedRules":"596"},{"filePath":"1221","messages":"1222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"596"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"596"},{"filePath":"1227","messages":"1228","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"596"},{"filePath":"1229","messages":"1230","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"596"},{"filePath":"1231","messages":"1232","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"874","usedDeprecatedRules":"596"},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"596"},{"filePath":"1235","messages":"1236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"596"},{"filePath":"1237","messages":"1238","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1239","usedDeprecatedRules":"596"},{"filePath":"1240","messages":"1241","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1242","usedDeprecatedRules":"596"},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"596"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"596"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"886","usedDeprecatedRules":"596"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891","usedDeprecatedRules":"596"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"596"},{"filePath":"1253","messages":"1254","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1255","usedDeprecatedRules":"596"},{"filePath":"1256","messages":"1257","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"596"},{"filePath":"1258","messages":"1259","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"596"},{"filePath":"1260","messages":"1261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"596"},{"filePath":"1262","messages":"1263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"596"},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1063","usedDeprecatedRules":"596"},{"filePath":"1266","messages":"1267","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"596"},{"filePath":"1268","messages":"1269","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"596"},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"596"},{"filePath":"1272","messages":"1273","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1106","usedDeprecatedRules":"596"},{"filePath":"1274","messages":"1275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1085","usedDeprecatedRules":"596"},{"filePath":"1276","messages":"1277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1085","usedDeprecatedRules":"596"},{"filePath":"1278","messages":"1279","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"596"},{"filePath":"1280","messages":"1281","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"596"},{"filePath":"1282","messages":"1283","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1193","usedDeprecatedRules":"596"},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1193","usedDeprecatedRules":"596"},"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\index.js",[],["1286","1287"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\App.js",["1288"],"import React from \"react\";\r\nimport Test from \"./components/Test/Test\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Modal from \"./containers/Modal/Modal\";\r\nimport Project from \"./components/Project/Project\";\r\nimport { ToastsStore, ToastsContainer } from \"react-toasts\";\r\nimport WebRtc from \"./components/WebRtc/WebRtc\";\r\nimport GetPrivateNotification from \"./components/Project/Dashboard/Supervisor/Notifications/private notifications/GetAllNotifications\";\r\nimport AddPrivateNotification from \"./components/Project/Dashboard/Supervisor/Notifications/private notifications/AddPrivateNotification\";\r\nimport GetPublicNotification from \"./components/Project/Dashboard/Supervisor/Notifications/Public Notification/GetPublicNotification\";\r\nimport AddNotification from \"./components/Project/Dashboard/Supervisor/Notifications/Public Notification/AddNotifiaction\";\r\nimport GetUserNotification from \"./components/Project/Dashboard/Supervisor/Notifications/UserNotification/GetUserNotification\";\r\n//import GetNOtification from \"./components/Project/Dashboard/Supervisor/Notifications/private notifications/GetAllNotifications\";\r\n\r\nfunction App(props) {\r\n  console.log(\"App Component\");\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/webrtc\" exact>\r\n          <WebRtc />\r\n        </Route>\r\n        <Route path=\"/test\" exact>\r\n          <div\r\n            className=\"container\"\r\n            style={{ height: \"800px\", overflow: \"auto\" }}\r\n          >\r\n            <br />\r\n            <Test />\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/\" exact>\r\n          <Project />\r\n        </Route>\r\n        <Route path=\"/privatenotification\" exact>\r\n          <GetPrivateNotification />\r\n        </Route>\r\n        <Route path=\"/addprivatenotification\" exact>\r\n          <AddPrivateNotification />\r\n        </Route>\r\n        <Route path=\"/addpublicnotifications\" exact>\r\n          <AddNotification />\r\n        </Route>\r\n        <Route path=\"/publicnotification\" exact>\r\n          <GetPublicNotification />\r\n        </Route>\r\n        <Route path=\"/usernotification\" exact>\r\n          <GetUserNotification />\r\n        </Route>\r\n      </Switch>\r\n      <ToastsContainer store={ToastsStore} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\serviceWorker.js",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\reducers\\index.js",["1289"],"import { Actions } from \"./../configs/index\";\r\nimport { isPointInPolygon } from \"geolib\";\r\n\r\nconst initialState = {\r\n  cities: [],\r\n  towns: [],\r\n  roles: [],\r\n  users: [],\r\n  priorities: [],\r\n  natures: [],\r\n  statuses: [],\r\n  subscriptions: [],\r\n  panics: [],\r\n  services: [],\r\n  thirdParty: [],\r\n  customers: [],\r\n  responders: [],\r\n  operators: [],\r\n  supervisors: [],\r\n  superAdmin: [],\r\n  admin: [],\r\n  customerFamily: [],\r\n  mainScreen: [],\r\n  gsm: [],\r\n  freeResponders: [],\r\n  buzyResponders: [],\r\n  onlineResponders: [],\r\n  offlineResponders: [],\r\n  unknownResponders: [],\r\n  outBoundResponders: [],\r\n  distanceSortedResponders: [],\r\n  geofences: [],\r\n  traccarGeofences: [],\r\n  inQueryPanics: [],\r\n  confirmedByOperatorPanics: [],\r\n  assignedToResponderPanics: [],\r\n  confirmedByResponderPanics: [],\r\n  resolvedByResponderPanics: [],\r\n  resolvedByOperatorPanics: [],\r\n  closedBySupervisorPanics: [],\r\n  closedByCustomerPanics: [],\r\n  cancelledPanics: [],\r\n  closedPanics: [],\r\n  resolvedPanics: [],\r\n  logger: localStorage.getItem(\"user\")\r\n    ? JSON.parse(localStorage.getItem(\"user\"))\r\n    : null,\r\n  groups: [],\r\n  traccarUsers: [],\r\n  zoomLevel: 10, // Number(localStorage.getItem(\"zoom\")) || 10,\r\n  latitude: 31,\r\n  longitude: 74,\r\n  geoLng: 74.42696711164534,\r\n  geoLat: 31.521113782075002,\r\n  eventLogs: [],\r\n  notificationLogs: [],\r\n  chatLogs: [],\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Actions.GET_CITIES:\r\n      return { ...state, cities: action.payload };\r\n    case Actions.GET_TOWNS:\r\n      return { ...state, towns: action.payload };\r\n    case Actions.GET_ROLES:\r\n      return { ...state, roles: action.payload };\r\n    case Actions.GET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload.all,\r\n        customers: action.payload.customers,\r\n        responders: action.payload.responders,\r\n        operators: action.payload.operators,\r\n        supervisors: action.payload.supervisors,\r\n        mainScreen: action.payload.mainScreen,\r\n        gsm: action.payload.gsm,\r\n        admin: action.payload.admin,\r\n        superAdmin: action.payload.superAdmin,\r\n      };\r\n    case Actions.GET_PRIORITIES:\r\n      return { ...state, priorities: action.payload };\r\n    case Actions.GET_NATURES:\r\n      return { ...state, natures: action.payload };\r\n    case Actions.GET_STATUSES:\r\n      return { ...state, statuses: action.payload };\r\n    case Actions.GET_SUBSCRIPTIONS:\r\n      return { ...state, subscriptions: action.payload };\r\n    case Actions.GET_PANICS:\r\n      return {\r\n        ...state,\r\n        panics: [...action.payload.data],\r\n        inQueryPanics: [...action.payload.inQuery],\r\n        confirmedByOperatorPanics: [...action.payload.ConfirmedByOperator],\r\n        assignedToResponderPanics: [...action.payload.AssignedToResponder],\r\n        confirmedByResponderPanics: [...action.payload.ConfirmedByResponder],\r\n        resolvedByResponderPanics: [...action.payload.ResolvedByResponder],\r\n        resolvedByOperatorPanics: [...action.payload.ResolvedByOperator],\r\n        closedBySupervisorPanics: [...action.payload.ClosedBySupervisor],\r\n        closedByCustomerPanics: [...action.payload.ClosedByCustomer],\r\n        cancelledPanics: [...action.payload.cancelled],\r\n        closedPanics: [...action.payload.closed],\r\n      };\r\n    case Actions.GET_SERVICES:\r\n      return { ...state, services: action.payload };\r\n    case Actions.GET_THIRD_PARTY:\r\n      return { ...state, thirdParty: action.payload };\r\n    case Actions.GET_ALL_RESPONDERS:\r\n      let G = [...state.traccarGeofences];\r\n      let geo = G.map((item) => {\r\n        return item.geometry.coordinates[0];\r\n      });\r\n      let outBound = [];\r\n      for (let i = 0; i < geo.length; i++) {\r\n        let ele = geo[i];\r\n        for (let j = 0; j < action.payload.online.length; j++) {\r\n          let ele2 = action.payload.online[j];\r\n          let result = isPointInPolygon(\r\n            { latitude: ele2.lat, longitude: ele2.lng },\r\n            ele\r\n          );\r\n          if (!result) {\r\n            outBound.push(ele2);\r\n          }\r\n        }\r\n      }\r\n      let outBound2 = outBound.filter((item) => {\r\n        let flag = 0;\r\n        for (let i = 0; i < outBound.length; i++) {\r\n          let ele = outBound[i];\r\n          if (ele.id == item.id) {\r\n            flag = flag + 1;\r\n          }\r\n        }\r\n        if (flag > 1) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n      // let data3 = [\r\n      //   ...action.payload.offline,\r\n      //   ...action.payload.unknown,\r\n      //   ...action.payload.online,\r\n      // ];\r\n      // data3.filter((item) => {\r\n      //   if (item.db != null) {\r\n      //     for (let i = 0; i < state.groups.length; i++) {\r\n      //       let ele = state.groups[i];\r\n      //     }\r\n      //   } else {\r\n      //     return false;\r\n      //   }\r\n      // });\r\n      return {\r\n        ...state,\r\n        offlineResponders: action.payload.offline,\r\n        unknownResponders: action.payload.unknown,\r\n        onlineResponders: action.payload.online,\r\n        buzyResponders: action.payload.buzy,\r\n        freeResponders: action.payload.free,\r\n        outBoundResponders: outBound2,\r\n      };\r\n    case Actions.GET_GEOFENCES:\r\n      return { ...state, geofences: action.payload };\r\n    case Actions.USER_AUTH_LOGIN:\r\n      return { ...state, logger: action.payload };\r\n    case Actions.GET_TRACCAR_GROUPS:\r\n      return { ...state, groups: action.payload };\r\n    case Actions.USER_LOGOUT:\r\n      return {\r\n        ...state,\r\n        logger: localStorage.getItem(\"user\")\r\n          ? JSON.parse(localStorage.getItem(\"user\"))\r\n          : null,\r\n      };\r\n    case Actions.CREATE_TRACCAR_GROUPS:\r\n      return state;\r\n    case Actions.EDIT_TRACCAR_GROUPS:\r\n      return state;\r\n    case Actions.DEL_TRACCAR_GROUPS:\r\n      return state;\r\n    case Actions.CREATE_ADMIN:\r\n      return state;\r\n    case Actions.EDIT_USERS:\r\n      // console.log(action.payload);\r\n      if (action.payload) {\r\n        return { ...state, logger: action.payload };\r\n      } else {\r\n        return state;\r\n      }\r\n    case Actions.DEL_USERS:\r\n      return state;\r\n    case Actions.CREATE_NATURES:\r\n      return state;\r\n    case Actions.EDIT_NATURES:\r\n      return state;\r\n    case Actions.DEL_NATURES:\r\n      return state;\r\n    case Actions.CREATE_PRIORITIES:\r\n      return state;\r\n    case Actions.EDIT_PRIORITIES:\r\n      return state;\r\n    case Actions.DEL_PRIORITIES:\r\n      return state;\r\n    case Actions.CREATE_STATUSES:\r\n      return state;\r\n    case Actions.EDIT_STATUSES:\r\n      return state;\r\n    case Actions.DEL_STATUSES:\r\n      return state;\r\n    case Actions.CREATE_PANICS:\r\n      return state;\r\n    case Actions.EDIT_PANICS:\r\n      return state;\r\n    case Actions.DEL_PANICS:\r\n      return state;\r\n    case Actions.CREATE_SERVICES:\r\n      return state;\r\n    case Actions.EDIT_SERVICES:\r\n      return state;\r\n    case Actions.DEL_SERVICES:\r\n      return state;\r\n    case Actions.CREATE_SUBSCRIPTIONS:\r\n      return state;\r\n    case Actions.EDIT_SUBSCRIPTIONS:\r\n      return state;\r\n    case Actions.DEL_SUBSCRIPTIONS:\r\n      return state;\r\n    case Actions.GET_TRACCAR_GEOFENCES:\r\n      return { ...state, traccarGeofences: action.payload };\r\n    case Actions.CHANGE_ZOOM_LEVEL:\r\n      return { ...state, zoomLevel: action.payload };\r\n    case Actions.GET_CENTER:\r\n      return {\r\n        ...state,\r\n        latitude: action.payload.latitude,\r\n        longitude: action.payload.longitude,\r\n      };\r\n    case Actions.CHANGE_GEO_LAT_LNG:\r\n      return {\r\n        ...state,\r\n        geoLat: action.payload.lat,\r\n        geoLng: action.payload.lng,\r\n      };\r\n    case Actions.UPDATE_TRACCAR_GEOGENCES:\r\n      return state;\r\n    case Actions.DEL_TRACCAR_GEOFENCES:\r\n      return state;\r\n    case Actions.GET_GEO_DISTANCES:\r\n      return { ...state, distanceSortedResponders: action.payload };\r\n    case Actions.CREATE_RESPONDERS:\r\n      return state;\r\n    case Actions.GET_EVENT_LOGS:\r\n      return { ...state, eventLogs: action.payload };\r\n    case Actions.GET_CHAT_LOGS:\r\n      return { ...state, chatLogs: action.payload };\r\n    case Actions.GET_NOTIFICATION_LOGS:\r\n      return { ...state, notificationLogs: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\configs\\index.js",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\WebRtc\\WebRtc.jsx",["1290"],"import React from \"react\";\r\nimport { SipProvider } from \"react-sip\";\r\n\r\nconst WebRtc = () => {\r\n  return (\r\n    <>\r\n      {/* <SipProvider\r\n        host=\"sip.example.com\"\r\n        port={7443}\r\n        pathname=\"/ws\" // Path in socket URI (e.g. wss://sip.example.com:7443/ws); \"\" by default\r\n        user=\"alice\"\r\n        password={sipPassword} // usually required (e.g. from ENV or props)\r\n        autoRegister={true} // true by default, see jssip.UA option register\r\n        autoAnswer={false} // automatically answer incoming calls; false by default\r\n        iceRestart={false} // force ICE session to restart on every WebRTC call; false by default\r\n        sessionTimersExpires={120} // value for Session-Expires header; 120 by default\r\n        extraHeaders={{\r\n          // optional sip headers to send\r\n          register: [\"X-Foo: foo\", \"X-Bar: bar\"],\r\n          invite: [\"X-Foo: foo2\", \"X-Bar: bar2\"],\r\n        }}\r\n        iceServers={[\r\n          // optional\r\n          { urls: [\"stun:a.example.com\", \"stun:b.example.com\"] },\r\n          { urls: \"turn:example.com\", username: \"foo\", credential: \"1234\" },\r\n        ]}\r\n        debug={false} // whether to output events to console; false by default\r\n      >\r\n        Okay\r\n      </SipProvider> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WebRtc;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Test\\Test.jsx",["1291"],"import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetCities,\r\n  GetTowns,\r\n  GetNatures,\r\n  GetPanics,\r\n  GetPriorities,\r\n  GetStatuses,\r\n  GetUsers,\r\n  GetRoles,\r\n  GetSubscriptions,\r\n  GetThirdParty,\r\n  GetServices,\r\n  GetAllResponder,\r\n  GetGeofences,\r\n  GetTraccarGroups,\r\n  FetchAllGeofences,\r\n  GetNotificationLogs,\r\n} from \"./../../actions/index\";\r\n\r\nconst Test = (props) => {\r\n  let renders = useRef(1);\r\n  console.log(\"Test Component: \", renders.current);\r\n  renders.current++;\r\n\r\n  const loadData = async () => {\r\n    props.getCities();\r\n    props.getTowns();\r\n    props.getRoles();\r\n    props.getServices();\r\n    props.getSubscriptions();\r\n    props.getUsers();\r\n    props.getPriorities();\r\n    props.getNatures();\r\n    props.getStatuses();\r\n    props.getThirdParty();\r\n    props.getAllResponder();\r\n    props.getPanics();\r\n    props.getGeofences();\r\n    props.getTraccarGroups();\r\n    props.fetchAllGeofences();\r\n    props.getNotificationLogs();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    return;\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1> Testing Data ... </h1>\r\n      <pre>\r\n        <b> Notification Logs: </b>{\" \"}\r\n        {JSON.stringify(props.notificationLogs, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Traccar Geofences: </b>{\" \"}\r\n        {JSON.stringify(props.traccarGeofences, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Groups: </b> {JSON.stringify(props.groups, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Geofences: </b> {JSON.stringify(props.geofences, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Online Responders: </b>{\" \"}\r\n        {JSON.stringify(props.onlineResponders, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Unknown Responders: </b>{\" \"}\r\n        {JSON.stringify(props.unknownResponders, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Offline Responders: </b>{\" \"}\r\n        {JSON.stringify(props.offlineResponders, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Buzy Responders: </b>{\" \"}\r\n        {JSON.stringify(props.buzyResponders, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Free Responders: </b>{\" \"}\r\n        {JSON.stringify(props.freeResponders, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> GSM: </b> {JSON.stringify(props.gsm, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Main Screen: </b> {JSON.stringify(props.mainScreen, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Operator: </b> {JSON.stringify(props.operators, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Supervisor: </b> {JSON.stringify(props.supervisors, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Admin: </b> {JSON.stringify(props.admin, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Super Admin: </b> {JSON.stringify(props.superAdmin, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Responders: </b> {JSON.stringify(props.responders, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Customers: </b> {JSON.stringify(props.customers, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Third Party: </b> {JSON.stringify(props.thirdParty, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Services: </b> {JSON.stringify(props.services, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Panics: </b> {JSON.stringify(props.panics, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Subscriptions: </b> {JSON.stringify(props.subscriptions, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Statuses: </b> {JSON.stringify(props.statuses, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Natures: </b> {JSON.stringify(props.natures, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Priorities: </b> {JSON.stringify(props.priorities, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Users: </b> {JSON.stringify(props.users, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Roles: </b> {JSON.stringify(props.roles, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Towns: </b> {JSON.stringify(props.towns, null, 2)}\r\n      </pre>\r\n      <pre>\r\n        <b> Cities: </b> {JSON.stringify(props.cities, null, 2)}\r\n      </pre>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cities: state.cities,\r\n  towns: state.towns,\r\n  roles: state.roles,\r\n  users: state.users,\r\n  priorities: state.priorities,\r\n  natures: state.natures,\r\n  statuses: state.statuses,\r\n  subscriptions: state.subscriptions,\r\n  panics: state.panics,\r\n  services: state.services,\r\n  thirdParty: state.thirdParty,\r\n  customers: state.customers,\r\n  responders: state.responders,\r\n  operators: state.operators,\r\n  supervisors: state.supervisors,\r\n  mainScreen: state.mainScreen,\r\n  gsm: state.gsm,\r\n  admin: state.admin,\r\n  superAdmin: state.superAdmin,\r\n  freeResponders: state.freeResponders,\r\n  buzyResponders: state.buzyResponders,\r\n  onlineResponders: state.onlineResponders,\r\n  offlineResponders: state.offlineResponders,\r\n  unknownResponders: state.unknownResponders,\r\n  geofences: state.geofences,\r\n  groups: state.groups,\r\n  traccarGeofences: state.traccarGeofences,\r\n  notificationLogs: state.notificationLogs,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCities: () => GetCities(dispatch),\r\n  getTowns: () => GetTowns(dispatch),\r\n  getRoles: () => GetRoles(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  getPriorities: () => GetPriorities(dispatch),\r\n  getNatures: () => GetNatures(dispatch),\r\n  getStatuses: () => GetStatuses(dispatch),\r\n  getSubscriptions: () => GetSubscriptions(dispatch),\r\n  getPanics: () => GetPanics(dispatch),\r\n  getServices: () => GetServices(dispatch),\r\n  getThirdParty: () => GetThirdParty(dispatch),\r\n  getAllResponder: () => GetAllResponder(dispatch),\r\n  getGeofences: () => GetGeofences(dispatch),\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n  fetchAllGeofences: () => FetchAllGeofences(dispatch),\r\n  getNotificationLogs: () => GetNotificationLogs(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Test);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Project.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\containers\\Modal\\Modal.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\private notifications\\AddPrivateNotification.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\private notifications\\GetAllNotifications.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\Public Notification\\AddNotifiaction.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\UserNotification\\GetUserNotification.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\Public Notification\\GetPublicNotification.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\actions\\index.js",["1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428"],"import { Actions } from \"./../configs/index\";\r\nimport axios from \"axios\";\r\nimport {\r\n  URL,\r\n  JWT,\r\n  TRACCAR,\r\n  TRAC_ACCOUNT,\r\n  TRAC_ACCOUNT_ENCODED,\r\n} from \"./../configs/index\";\r\nimport Jwt from \"jsonwebtoken\";\r\n\r\nexport const GetCities = (dispatch) => {\r\n  const url = URL + \"city\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_CITIES,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Cities Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Cities Expections\");\r\n    });\r\n};\r\n\r\nexport const GetTowns = (dispatch) => {\r\n  const url = URL + \"town\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_TOWNS,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Towns Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Towns Expections\");\r\n    });\r\n};\r\n\r\nexport const GetRoles = (dispatch) => {\r\n  const url = URL + \"role\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_ROLES,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Roles Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Roles Expections\");\r\n    });\r\n};\r\n\r\nexport const GetUsers = (dispatch) => {\r\n  const url = URL + \"user/all\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        //   All Users\r\n        let customers = data.filter((user) => user.roleId == 5);\r\n        let responders = data.filter((user) => user.roleId == 4);\r\n        let operators = data.filter((user) => user.roleId == 3);\r\n        let supervisors = data.filter((user) => user.roleId == 2);\r\n        let mainScreen = data.filter((user) => user.roleId == 7);\r\n        let gsm = data.filter((user) => user.roleId == 9);\r\n        let admin = data.filter((user) => user.roleId == 1);\r\n        let superAdmin = data.filter((user) => user.roleId == 10);\r\n        dispatch({\r\n          type: Actions.GET_USERS,\r\n          payload: {\r\n            all: data,\r\n            customers,\r\n            responders,\r\n            operators,\r\n            supervisors,\r\n            mainScreen,\r\n            gsm,\r\n            admin,\r\n            superAdmin,\r\n          },\r\n        });\r\n      } else {\r\n        console.log(\"GET Users Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Users Expections\");\r\n    });\r\n};\r\n\r\nexport const CreateAdmin = (dispatch, props) => {\r\n  console.log(props);\r\n  const url = URL + \"user/admin-register\";\r\n  axios\r\n    .post(url, props)\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.CREATE_ADMIN,\r\n        });\r\n      } else {\r\n        console.log(\"Create Users Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(e);\r\n    });\r\n};\r\n\r\nexport const CreateSupervisor = (dispatch, props) => {\r\n  // console.log(props);\r\n  const url = URL + \"user/supervisor-register\";\r\n  axios\r\n    .post(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.CREATE_SUPERVISOR,\r\n        });\r\n      } else {\r\n        console.log(\"Create Supervisor Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(e);\r\n    });\r\n};\r\n\r\nexport const CreateOperator = (dispatch, props) => {\r\n  // console.log(props);\r\n  const url = URL + \"user/operator-register\";\r\n  axios\r\n    .post(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.CREATE_OPERATOR,\r\n        });\r\n      } else {\r\n        console.log(\"Create Operator Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(e);\r\n    });\r\n};\r\n\r\nexport const UpdateUsers = (dispatch, id, props, auth = true) => {\r\n  const url = URL + \"user/update\";\r\n  props.userId = id;\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        // console.log(\"Props: \", { props, url, data, code });\r\n        if (auth) {\r\n          localStorage.setItem(\"user\", JSON.stringify(data));\r\n          dispatch({\r\n            type: Actions.EDIT_USERS,\r\n            payload: data,\r\n          });\r\n        } else {\r\n          // console.error(\"Done\");\r\n          dispatch({\r\n            type: Actions.EDIT_USERS,\r\n          });\r\n        }\r\n      } else {\r\n        console.log(\"Update Users Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(e);\r\n    });\r\n};\r\n\r\nexport const DelUsers = (dispatch, id) => {\r\n  const url = URL + \"user/del/\" + id;\r\n  // console.log(url, id);\r\n  axios\r\n    .post(url, { id })\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.DEL_USERS,\r\n        });\r\n      } else {\r\n        console.log(\"Delete Users Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(e);\r\n    });\r\n};\r\n\r\nexport const GetPriorities = (dispatch) => {\r\n  const url = URL + \"priority\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_PRIORITIES,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Priorities Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Priorities Expections\");\r\n    });\r\n};\r\n\r\nexport const GetNatures = (dispatch) => {\r\n  const url = URL + \"nature\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_NATURES,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Natures Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Natures Expections\");\r\n    });\r\n};\r\n\r\nexport const GetStatuses = (dispatch) => {\r\n  const url = URL + \"status\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_STATUSES,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Status Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Status Expections\");\r\n    });\r\n};\r\n\r\nexport const GetPanics = (dispatch) => {\r\n  const url = URL + \"panic\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      //console.log(\"response from get panic api call\", data);\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        let cancelled = data.filter((item) => item.isCancelled == 1);\r\n        let closed = data.filter(\r\n          (item) => item.isClose == 1 || item.isResolved == 1\r\n        );\r\n        data = data.filter(\r\n          (item) => item.isCancelled != 1 && item.isClose != 1\r\n        );\r\n        let inQuery = data.filter(\r\n          (item) =>\r\n            item.statusId == 1 && item.isCancelled != 1 && item.isClose != 1\r\n          // &&\r\n          // item.operatorInvolved != 0 &&\r\n          // item.operatorInvolved != null &&\r\n          // item.supervisorInvolved != 0 &&\r\n          // item.supervisorInvolved != null\r\n        );\r\n        let ConfirmedByOperator = data.filter(\r\n          (item) =>\r\n            item.statusId == 2 && item.isCancelled != 1 && item.isClose != 1\r\n        );\r\n        let AssignedToResponder = data.filter(\r\n          (item) =>\r\n            item.statusId == 3 && item.isCancelled != 1 && item.isClose != 1\r\n        );\r\n        let ResolvedByResponder = data.filter(\r\n          (item) =>\r\n            item.statusId == 4 && item.isCancelled != 1 && item.isClose != 1\r\n        );\r\n        let ResolvedByOperator = data.filter(\r\n          (item) =>\r\n            item.statusId == 5 && item.isCancelled != 1 && item.isClose != 1\r\n        );\r\n        let ClosedBySupervisor = data.filter(\r\n          (item) =>\r\n            item.statusId == 6 && item.isCancelled != 1 && item.isClose != 1\r\n        );\r\n        let ConfirmedByResponder = data.filter(\r\n          (item) =>\r\n            item.statusId == 7 && item.isCancelled != 1 && item.isClose != 1\r\n        );\r\n        let ClosedByCustomer = data.filter(\r\n          (item) =>\r\n            item.statusId == 8 && item.isCancelled != 1 && item.isClose != 1\r\n        );\r\n        dispatch({\r\n          type: Actions.GET_PANICS,\r\n          payload: {\r\n            data,\r\n            inQuery,\r\n            ConfirmedByOperator,\r\n            AssignedToResponder,\r\n            ConfirmedByResponder,\r\n            ResolvedByResponder,\r\n            ResolvedByOperator,\r\n            ClosedBySupervisor,\r\n            ClosedByCustomer,\r\n            cancelled,\r\n            closed,\r\n          },\r\n        });\r\n      } else {\r\n        console.log(\"GET Panics Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Panics Exceptions\", e);\r\n    });\r\n};\r\n\r\nexport const GetSubscriptions = (dispatch) => {\r\n  const url = URL + \"subscription\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_SUBSCRIPTIONS,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Subscriptions Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Subscriptions Expections\");\r\n    });\r\n};\r\n\r\nexport const GetServices = (dispatch) => {\r\n  const url = URL + \"service\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_SERVICES,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Services Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Services Expections\");\r\n    });\r\n};\r\n\r\nexport const GetThirdParty = (dispatch) => {\r\n  const url = URL + \"third-party\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_THIRD_PARTY,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Third Party Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Third Party Expections\");\r\n    });\r\n};\r\n\r\nexport const GetAllResponder = (dispatch) => {\r\n  const url = URL + \"responder/all\";\r\n  axios\r\n    .post(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        // console.error(\"1: \", data);\r\n        data = data.map((item) => {\r\n          item.lat = item.position.latitude;\r\n          item.lng = item.position.longitude;\r\n          return item;\r\n        });\r\n        let offline = data.filter((responder) => {\r\n          if (responder.status == \"offline\") {\r\n            return true;\r\n          } else if (\r\n            responder.db != null &&\r\n            responder.db.userActivation == false\r\n          ) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n        let unknown = data.filter((responder) => responder.status == \"unknown\");\r\n        let online = data.filter((responder) => {\r\n          if (\r\n            responder.status == \"online\" &&\r\n            responder.db != null &&\r\n            responder.db.userActivation == true\r\n          ) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n\r\n        // Panic Start\r\n        const url2 = URL + \"panic\";\r\n        axios\r\n          .get(url2)\r\n          .then((response2) => {\r\n            //   console.log(response.data);\r\n            let data2 = response2.data.result.data;\r\n            let code2 = response2.data.result.status;\r\n            if (code2 == 200) {\r\n              let activePanics = [];\r\n              for (let i = 0; i < data2.length; i++) {\r\n                let element = data2[i];\r\n                if (\r\n                  element.responderInvolved != 0 &&\r\n                  element.responderInvolved != null\r\n                ) {\r\n                  if (\r\n                    (element.isClose == false || element.isClose == null) &&\r\n                    (element.statusId == 3 ||\r\n                      element.statusId == 7 ||\r\n                      element.statusId == 4)\r\n                  ) {\r\n                    activePanics.push(element.responderInvolved);\r\n                    console.error(\"active\");\r\n                  }\r\n                }\r\n              }\r\n              //   console.log(activePanics);\r\n              let buzy = [];\r\n              let free = [];\r\n              if (activePanics.length > 0) {\r\n                for (let i = 0; i < online.length; i++) {\r\n                  let element = online[i];\r\n                  if (element.db != null) {\r\n                    if (activePanics.includes(element.db.id)) {\r\n                      buzy.push(element);\r\n                    } else {\r\n                      free.push(element);\r\n                      console.error(\"free\");\r\n                    }\r\n                  } else {\r\n                    free.push(element);\r\n                    console.error(\"free\");\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (buzy.length < 1) {\r\n                free = online;\r\n              }\r\n\r\n              dispatch({\r\n                type: Actions.GET_ALL_RESPONDERS,\r\n                payload: {\r\n                  offline,\r\n                  unknown,\r\n                  online,\r\n                  buzy,\r\n                  free,\r\n                },\r\n              });\r\n            } else {\r\n              console.log(\"GET Panics Invalid Response\");\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            console.error(\"Get Panics Exceptions\", e);\r\n          });\r\n        // Panic End\r\n      } else {\r\n        console.log(\"GET All Responders Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get All Responders Expections\");\r\n    });\r\n};\r\n\r\nconst polygonStringToCoords = (data) => {\r\n  var part1 = data.split(\"POLYGON((\");\r\n  var part2 = part1[1].split(\"))\");\r\n  var part3 = part2[0];\r\n  var part4 = part3.split(\", \");\r\n  var part5 = [];\r\n  for (let index = 0; index < part4.length; index++) {\r\n    const element = part4[index];\r\n    var part6 = element.split(\" \");\r\n    part5.push([Number(part6[0]), Number(part6[1])]);\r\n  }\r\n  return part5;\r\n};\r\n\r\nexport const GetGeofences = (dispatch) => {\r\n  //   console.log(TRAC_ACCOUNT_ENCODED);\r\n  const url = URL + \"geofence\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        const url2 = TRACCAR + \"geofences\";\r\n        const headers2 = {\r\n          headers: {\r\n            Authorization: \"Basic \" + TRAC_ACCOUNT_ENCODED,\r\n          },\r\n        };\r\n        axios\r\n          .get(url2, headers2)\r\n          .then((response2) => {\r\n            if (response2.data) {\r\n              let data2 = response2.data;\r\n              //   console.log(data2);\r\n              let info = [];\r\n              for (let i = 0; i < data.length; i++) {\r\n                let element = data[i];\r\n                for (let j = 0; j < data2.length; j++) {\r\n                  let element2 = data2[j];\r\n                  if (element2.id == element.geofenceId) {\r\n                    element.traccar = element2;\r\n                    element.traccar.coords = polygonStringToCoords(\r\n                      element.traccar.area\r\n                    );\r\n                    info.push(element);\r\n                  }\r\n                }\r\n              }\r\n              //   console.log(info);\r\n            }\r\n          })\r\n          .catch((e2) => {\r\n            console.log(\"GET Live Traccar Geofences Fetching Error \", e2);\r\n          });\r\n        dispatch({\r\n          type: Actions.GET_GEOFENCES,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Geofences Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Geofences Expections\");\r\n    });\r\n};\r\n\r\nexport const UserLogin = (dispatch, props) => {\r\n  // Update Section\r\n\r\n  // Update Section\r\n  var url = URL + \"auth/login\";\r\n  console.log(\"URL\", url);\r\n  var data = {\r\n    contact: props.contact,\r\n    password: props.password,\r\n    deviceId: props.deviceId,\r\n  };\r\n  axios\r\n    .post(url, data)\r\n    .then((res) => {\r\n      if (res.data && res.data.result.status == 200) {\r\n        let data = res.data;\r\n        console.error(\"Data: \", data);\r\n        Jwt.verify(data.result.data, JWT.KEY, (err, decoded) => {\r\n          if (err) {\r\n            console.log(\"Token Decocding Error\");\r\n          } else {\r\n            // console.error(\"Decoded: \", decoded.user);\r\n            localStorage.setItem(\"user\", JSON.stringify(decoded.user));\r\n            dispatch({\r\n              type: Actions.USER_AUTH_LOGIN,\r\n              payload: decoded.user,\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        console.log(\"Login Response Error: \", res.data);\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nexport const UserLogout = (dispatch) => {\r\n  let a = JSON.parse(localStorage.getItem(\"user\"));\r\n  const url = URL + \"user/update\";\r\n  axios\r\n    .put(url, { userActivation: false, userId: a.id })\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        // console.log(\"Props: \", { props, url, data, code });\r\n        localStorage.removeItem(\"user\");\r\n        dispatch({\r\n          type: Actions.USER_LOGOUT,\r\n        });\r\n      } else {\r\n        console.log(\"Update Users Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(e);\r\n    });\r\n};\r\n\r\nexport const GetTraccarGroups = (dispatch) => {\r\n  const url2 = TRACCAR + \"groups\";\r\n  const headers = {\r\n    headers: {\r\n      Authorization: \"Basic \" + TRAC_ACCOUNT_ENCODED,\r\n    },\r\n  };\r\n  axios\r\n    .get(url2, headers)\r\n    .then((response) => {\r\n      if (response.data) {\r\n        let data = response.data;\r\n        // console.log(data);\r\n        dispatch({\r\n          type: Actions.GET_TRACCAR_GROUPS,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Traccar Groups Response Error\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nexport const CreateTraccarGroups = (dispatch, props) => {\r\n  const url2 = TRACCAR + \"groups\";\r\n  const headers = {\r\n    headers: {\r\n      Authorization: \"Basic \" + TRAC_ACCOUNT_ENCODED,\r\n    },\r\n  };\r\n  axios\r\n    .post(url2, props, headers)\r\n    .then((response) => {\r\n      if (response.data) {\r\n        let data = response.data;\r\n        // console.log(data);\r\n        dispatch({\r\n          type: Actions.CREATE_TRACCAR_GROUPS,\r\n        });\r\n      } else {\r\n        console.log(\"Create Traccar Groups Response Error\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nexport const UpdateTraccarGroups = (dispatch, id, props) => {\r\n  console.log(\"Data: \", { id, props });\r\n  props.id = id;\r\n  const url2 = TRACCAR + \"groups/\" + id;\r\n  const headers = {\r\n    headers: {\r\n      Authorization: \"Basic \" + TRAC_ACCOUNT_ENCODED,\r\n    },\r\n  };\r\n  axios\r\n    .put(url2, props, headers)\r\n    .then((response) => {\r\n      if (response.data) {\r\n        let data = response.data;\r\n        // console.log(data);\r\n        dispatch({\r\n          type: Actions.EDIT_TRACCAR_GROUPS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Traccar Groups Response Error\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nexport const DelTraccarGroups = (dispatch, id) => {\r\n  const url2 = TRACCAR + \"groups/\" + id;\r\n  const headers = {\r\n    headers: {\r\n      Authorization: \"Basic \" + TRAC_ACCOUNT_ENCODED,\r\n    },\r\n  };\r\n  axios\r\n    .delete(url2, headers)\r\n    .then((response) => {\r\n      if (response.data) {\r\n        let data = response.data;\r\n        // console.log(data);\r\n        dispatch({\r\n          type: Actions.DEL_TRACCAR_GROUPS,\r\n        });\r\n      } else {\r\n        console.log(\"Delete Traccar Groups Response Error\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nconst polygonString = (data) => {\r\n  var part1 = data.split(\"POLYGON((\");\r\n  var part2 = part1[1].split(\"))\");\r\n  var part3 = part2[0];\r\n  var part4 = part3.split(\", \");\r\n  var part5 = [];\r\n  for (let index = 0; index < part4.length; index++) {\r\n    const element = part4[index];\r\n    var part6 = element.split(\" \");\r\n    part5.push([Number(part6[0]), Number(part6[1])]);\r\n  }\r\n  return part5;\r\n};\r\n\r\nconst fetchPolygon = (data) => {\r\n  var info = [];\r\n  for (let index = 0; index < data.length; index++) {\r\n    const element = data[index];\r\n    var detail = {\r\n      id: element.id,\r\n      type: \"Feature\",\r\n      properties: {},\r\n      geometry: {\r\n        coordinates: [polygonStringToCoords(element.area)],\r\n        type: \"Polygon\",\r\n      },\r\n    };\r\n    info.push(detail);\r\n  }\r\n  return info;\r\n};\r\n\r\nconst makePolygonString = (coords) => {\r\n  var line = \"\";\r\n  for (let index = 0; index < coords.length; index++) {\r\n    const element = coords[index];\r\n    var piece = element[0] + \" \" + element[1];\r\n    if (index != 0) {\r\n      line += \", \";\r\n    }\r\n    line += piece;\r\n  }\r\n  var mainLine = \"POLYGON((\" + line + \"))\";\r\n  return mainLine;\r\n};\r\n\r\nconst addGeofenceInDB = (dispatch, geofenceId, serviceId) => {\r\n  var url = URL + \"geofence/add\";\r\n  var data = { geofenceId, serviceId };\r\n  axios\r\n    .post(url, data)\r\n    .then((result) => {\r\n      if (result.data) {\r\n        console.log(\"Geofence Added in the Database Successfully !\");\r\n        dispatch({\r\n          type: Actions.CREATE_TRACCAR_GEOFENCES,\r\n        });\r\n      } else {\r\n        console.log(\"Result not found\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(\"Error\");\r\n    });\r\n};\r\n\r\nexport const AddGeofences = (dispatch, id, name, coords = []) => {\r\n  var url = TRACCAR + \"geofences\";\r\n  const headers = {\r\n    headers: {\r\n      Authorization: \"Basic \" + TRAC_ACCOUNT_ENCODED,\r\n    },\r\n  };\r\n  if (id != 0) {\r\n    var area = makePolygonString(coords);\r\n    var data = {\r\n      name: name,\r\n      description: \"Using CAD\",\r\n      area: area,\r\n      calendarId: 0,\r\n      attributes: {},\r\n    };\r\n    axios\r\n      .post(url, data, headers)\r\n      .then(async (result) => {\r\n        if (result.data) {\r\n          addGeofenceInDB(dispatch, result.data.id, id);\r\n        } else {\r\n          console.log(\"Result not found\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"Error\");\r\n      });\r\n  } else {\r\n    // ToastsStore.error(\"Service is Not Yet Selected !\");\r\n    console.log(\"Service is Not Yet Selected !\");\r\n  }\r\n};\r\n\r\nexport const UpdateGeofences = (dispatch, id, serviceId, name, coords = []) => {\r\n  if (true) {\r\n    var url = TRACCAR + \"geofences/\" + id;\r\n    const headers = {\r\n      headers: {\r\n        Authorization: \"Basic \" + TRAC_ACCOUNT_ENCODED,\r\n      },\r\n    };\r\n    var area = makePolygonString(coords);\r\n    var data = {\r\n      id,\r\n      name: name,\r\n      description: \"Cad Used\",\r\n      area: area,\r\n      calendarId: 0,\r\n      attributes: {},\r\n    };\r\n    axios\r\n      .put(url, data, headers)\r\n      .then((result) => {\r\n        if (result.data) {\r\n          // cb(result.data);\r\n          dispatch({\r\n            type: Actions.UPDATE_TRACCAR_GEOGENCES,\r\n          });\r\n        } else {\r\n          console.log(\"Geofence Update Results not Found\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"Geofence Update API Error\");\r\n      });\r\n  } else {\r\n    // ToastsStore.error(\"Service is Not Yet Selected !\");\r\n    console.error(\"Service Not Selected\");\r\n  }\r\n};\r\n\r\nexport const DelGeofences = (dispatch, id = 0) => {\r\n  var url = TRACCAR + \"geofences/\" + id;\r\n  // console.log(url);\r\n  const headers = {\r\n    headers: {\r\n      Authorization: \"Basic \" + TRAC_ACCOUNT_ENCODED,\r\n    },\r\n  };\r\n  axios\r\n    .delete(url, headers)\r\n    .then((result) => {\r\n      if (true) {\r\n        // cb(true);\r\n        // console.log(\"Result Deleted\");\r\n        dispatch({\r\n          type: Actions.DEL_TRACCAR_GEOFENCES,\r\n        });\r\n      } else {\r\n        console.log(\"Result Not Deleted\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(\"Error\");\r\n    });\r\n};\r\n\r\nexport const FetchAllGeofences = (dispatch) => {\r\n  var url = TRACCAR + \"geofences\";\r\n  const headers = {\r\n    headers: {\r\n      Authorization: \"Basic \" + TRAC_ACCOUNT_ENCODED,\r\n    },\r\n  };\r\n  axios\r\n    .get(url, headers)\r\n    .then((result) => {\r\n      if (result.data) {\r\n        // console.error(\"DATA: \", result.data);\r\n        // let data = result.data.map((item) => {\r\n        //   item.coords = fetchPolygon(item);\r\n        //   return item;\r\n        // });\r\n        let data = fetchPolygon(result.data);\r\n        dispatch({\r\n          type: Actions.GET_TRACCAR_GEOFENCES,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"REsult not Found\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(\"Error\");\r\n    });\r\n};\r\n\r\nexport const CreateServices = (dispatch, props) => {\r\n  const url = URL + \"service\";\r\n  console.log(url, props);\r\n  axios\r\n    .post(url, props)\r\n    .then((response) => {\r\n      //   console.log(\"Logs: \");\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.CREATE_SERVICES,\r\n        });\r\n      } else {\r\n        console.log(\"CREATE Services Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Create Services Expections\");\r\n    });\r\n};\r\nexport const UpdateServices = (dispatch, id, props) => {\r\n  const url = URL + \"service/\" + id;\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_SERVICES,\r\n        });\r\n      } else {\r\n        console.log(\"Update Services Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Services Expections\");\r\n    });\r\n};\r\nexport const DelServices = (dispatch, id) => {\r\n  const url = URL + \"service/\" + id;\r\n  axios\r\n    .delete(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.DEL_SERVICES,\r\n        });\r\n      } else {\r\n        console.log(\"DEL Services Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"DEL Services Expections\");\r\n    });\r\n};\r\n\r\nexport const CreateSubscriptions = (dispatch, props) => {\r\n  const url = URL + \"subscription\";\r\n  axios\r\n    .post(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.CREATE_SUBSCRIPTIONS,\r\n        });\r\n      } else {\r\n        console.log(\"CREATE Subscripton Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Create Subscription Expections\");\r\n    });\r\n};\r\nexport const UpdateSubscriptions = (dispatch, id, props) => {\r\n  const url = URL + \"subscription/\" + id;\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_SUBSCRIPTIONS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Subscriptions Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Subscriptions Expections\");\r\n    });\r\n};\r\nexport const DelSubcriptions = (dispatch, id) => {\r\n  const url = URL + \"subscription/\" + id;\r\n  axios\r\n    .delete(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.DEL_SUBSCRIPTIONS,\r\n        });\r\n      } else {\r\n        console.log(\"DEL Subscriptions Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"DEL Services Expections\");\r\n    });\r\n};\r\n\r\nexport const CreateNatures = (dispatch, props) => {\r\n  const url = URL + \"nature\";\r\n  axios\r\n    .post(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.CREATE_NATURES,\r\n        });\r\n      } else {\r\n        console.log(\"CREATE Natures Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Create Natures Expections\");\r\n    });\r\n};\r\nexport const UpdateNatures = (dispatch, id, props) => {\r\n  const url = URL + \"nature/\" + id;\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_NATURES,\r\n        });\r\n      } else {\r\n        console.log(\"Update Natures Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Natures Expections\");\r\n    });\r\n};\r\nexport const DelNatures = (dispatch, id) => {\r\n  const url = URL + \"nature/\" + id;\r\n  axios\r\n    .delete(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.DEL_NATURES,\r\n        });\r\n      } else {\r\n        console.log(\"DEL Natures Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"DEL Natures Expections\");\r\n    });\r\n};\r\n\r\nexport const CreatePanics = (dispatch, props) => {\r\n  const url = URL + \"panic\";\r\n  axios\r\n    .post(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.CREATE_PANICS,\r\n        });\r\n      } else {\r\n        console.log(\"CREATE Panic Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Create Panic Expections\");\r\n    });\r\n};\r\nexport const UpdatePanics = (dispatch, id, props) => {\r\n  const url = URL + \"panic/\" + id;\r\n  props.id = id;\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_PANICS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Panic Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Panic Expections\");\r\n    });\r\n};\r\nexport const SupervisorAcceptPanic_UpdatePanics = (dispatch, id, props) => {\r\n  const url = URL + \"panic/supervisorAcceptPanic\";\r\n  props.id = id;\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_PANICS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Panic Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Panic Expections\");\r\n    });\r\n};\r\nexport const OperatorAcceptPanic_UpdatePanics = (dispatch, id, props) => {\r\n  const url = URL + \"panic/operatorAcceptPanic\";\r\n  props.id = id;\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_PANICS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Panic Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Panic Expections\");\r\n    });\r\n};\r\nexport const SupervisorAssignPanicToRes_UpdatePanics = (\r\n  dispatch,\r\n  id,\r\n  props\r\n) => {\r\n  const url = URL + \"panic/supervisorAssignPanicToRes\";\r\n  props.id = id;\r\n  // alert(url);\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_PANICS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Panic Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Panic Expections\");\r\n    });\r\n};\r\nexport const OperatorAssignPanicToRes_UpdatePanics = (dispatch, id, props) => {\r\n  const url = URL + \"panic/operatorAssignPanicToRes\";\r\n  props.id = id;\r\n  // alert(url);\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_PANICS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Panic Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Panic Expections\");\r\n    });\r\n};\r\nexport const SupervisorResolvePanic_UpdatePanics = (\r\n  dispatch,\r\n  id,\r\n  props = {}\r\n) => {\r\n  const url = URL + \"panic/supervisorResolvePanic\";\r\n  props.id = id;\r\n  // alert(url);\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_PANICS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Panic Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Panic Expections\");\r\n    });\r\n};\r\nexport const OperatorResolvePanic_UpdatePanics = (dispatch, id, props = {}) => {\r\n  const url = URL + \"panic/operatorResolvePanic\";\r\n  props.id = id;\r\n  // alert(url);\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_PANICS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Panic Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Panic Expections\");\r\n    });\r\n};\r\nexport const ClosePanic_UpdatePanics = (dispatch, id, props = {}) => {\r\n  const url = URL + \"panic/closePanic\";\r\n  props.id = id;\r\n  // alert(url);\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_PANICS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Panic Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Panic Expections\");\r\n    });\r\n};\r\nexport const SolvePanic_UpdatePanics = (dispatch, id, props = {}) => {\r\n  const url = URL + \"panic/solvePanic\";\r\n  props.id = id;\r\n  // alert(url);\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_PANICS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Panic Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Panic Expections\");\r\n    });\r\n};\r\nexport const DelPanics = (dispatch, id) => {\r\n  const url = URL + \"panic/\" + id;\r\n  axios\r\n    .delete(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.DEL_PANICS,\r\n        });\r\n      } else {\r\n        console.log(\"DEL Panic Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"DEL Panic Expections\");\r\n    });\r\n};\r\n\r\nexport const CreatePriorities = (dispatch, props) => {\r\n  const url = URL + \"priority\";\r\n  axios\r\n    .post(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.CREATE_PRIORITIES,\r\n        });\r\n      } else {\r\n        console.log(\"CREATE Priorities Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Create Priorities Expections\");\r\n    });\r\n};\r\nexport const UpdatePriorities = (dispatch, id, props) => {\r\n  const url = URL + \"priority/\" + id;\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_PRIORITIES,\r\n        });\r\n      } else {\r\n        console.log(\"Update Priorities Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Priorities Expections\");\r\n    });\r\n};\r\nexport const DelPriorities = (dispatch, id) => {\r\n  const url = URL + \"priority/\" + id;\r\n  axios\r\n    .delete(url)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.DEL_PRIORITIES,\r\n        });\r\n      } else {\r\n        console.log(\"DEL Priorities Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"DEL Priorities Expections\");\r\n    });\r\n};\r\n\r\nexport const changeZoom = (dispatch, data) => {\r\n  let zoom = localStorage.getItem(\"zoom\");\r\n  if (zoom && zoom > 0) {\r\n    dispatch({\r\n      type: Actions.CHANGE_ZOOM_LEVEL,\r\n      payload: data,\r\n    });\r\n  } else {\r\n    // localStorage.setItem(\"zoom\", data);\r\n    dispatch({\r\n      type: Actions.CHANGE_ZOOM_LEVEL,\r\n      payload: data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const GetCenter = (dispatch, data) => {\r\n  var url = URL + \"geo/find-center\";\r\n  axios\r\n    .post(url, { data })\r\n    .then(async (response) => {\r\n      var info = response.data.result.data;\r\n      console.log(\"Access2: \", info);\r\n      dispatch({\r\n        type: Actions.GET_CENTER,\r\n        payload: {\r\n          latitude: info.latitude,\r\n          longitude: info.longitude,\r\n        },\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nexport const ChangeGeoLatLng = (dispatch, data) => {\r\n  dispatch({\r\n    type: Actions.CHANGE_GEO_LAT_LNG,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nconst CreateResponders = (dispatch, props) => {\r\n  const url = URL + \"user/responder-register\";\r\n  console.error(\"Props: \", props);\r\n  axios\r\n    .post(url, props)\r\n    .then((response) => {\r\n      console.error(\"Db: \", response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.CREATE_RESPONDERS,\r\n        });\r\n      } else {\r\n        console.log(\"CREATE Responder Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Create Responders Expections\");\r\n    });\r\n};\r\nexport const CreateTraccarResponders = (dispatch, props, pass) => {\r\n  const url = TRACCAR + \"devices\";\r\n  const headers = {\r\n    headers: {\r\n      Authorization: \"Basic \" + TRAC_ACCOUNT_ENCODED,\r\n    },\r\n  };\r\n  console.error({ url, headers, props });\r\n  axios\r\n    .post(url, props, headers)\r\n    .then(async (response) => {\r\n      console.error(response.data);\r\n      let data = response.data;\r\n      // let code = response.data.result.status;\r\n      console.error(\"Data: \", data);\r\n      if (data != null) {\r\n        await CreateResponders(dispatch, {\r\n          firstname: data.name,\r\n          lastname: data.name,\r\n          contact: data.phone,\r\n          password: pass,\r\n          lat: 0,\r\n          lng: 0,\r\n          trackingId: Number(data.id) || 0,\r\n          uniqueId: data.uniqueId,\r\n        });\r\n        // dispatch({\r\n        //   type: Actions.CREATE_TRACCAR_RESPONDERS,\r\n        // });\r\n      } else {\r\n        console.log(\"CREATE Traccar Responder Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Create Traccar Responders Expections\");\r\n    });\r\n};\r\nexport const UpdateTraccarResponders = (dispatch, id, props) => {\r\n  const url = URL + \"devices/\" + id;\r\n  props.id = id;\r\n  axios\r\n    .put(url, props)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.EDIT_TRACCAR_RESPONDERS,\r\n        });\r\n      } else {\r\n        console.log(\"Update Traccar Responders Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Update Traccar Responders Expections\");\r\n    });\r\n};\r\nexport const DelTraccarResponders = (dispatch, id) => {\r\n  const url = TRACCAR + \"devices/\" + id;\r\n  const headers = {\r\n    headers: {\r\n      Authorization: \"Basic \" + TRAC_ACCOUNT_ENCODED,\r\n    },\r\n  };\r\n  axios\r\n    .delete(url, headers)\r\n    .then((response) => {\r\n      console.error(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.DEL_TRACCAR_RESPONDERS,\r\n        });\r\n      } else {\r\n        console.log(\"DEL Traccar Responders Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"DEL Traccar Responders Expections\");\r\n    });\r\n};\r\n\r\nexport const GetGeoDistances = (dispatch, single, list) => {\r\n  const url = URL + \"geo/find-distance\";\r\n  const data = {\r\n    data: {\r\n      latitude: single.latitude,\r\n      longitude: single.longitude,\r\n      list: [...list],\r\n    },\r\n  };\r\n  axios\r\n    .post(url, data)\r\n    .then((response) => {\r\n      //   console.log(response.data);\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_GEO_DISTANCES,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"Geo Distances Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Geo Distances Expections\");\r\n    });\r\n};\r\n\r\nexport const GetNotificationLogs = (dispatch) => {\r\n  const url = URL + \"notification-logs\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_NOTIFICATION_LOGS,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Notification Logs Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Notification Logs Expections\");\r\n    });\r\n};\r\n\r\nexport const GetChatLogs = (dispatch) => {\r\n  const url = URL + \"chat-logs\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_CHAT_LOGS,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Chat Logs Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Chat Logs Expections\");\r\n    });\r\n};\r\n\r\nexport const GetEventLogs = (dispatch) => {\r\n  const url = URL + \"event-logs\";\r\n  axios\r\n    .get(url)\r\n    .then((response) => {\r\n      let data = response.data.result.data;\r\n      let code = response.data.result.status;\r\n      if (code == 200) {\r\n        dispatch({\r\n          type: Actions.GET_EVENT_LOGS,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        console.log(\"GET Event Logs Invalid Response\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(\"Get Event Logs Expections\");\r\n    });\r\n};\r\n//new fuction\r\nexport const postNotification = (data) => {\r\n  const url = URL + \"privatenotification/add\";\r\n  axios\r\n    .post(url, data)\r\n    .then((res) => {\r\n      window.alert(\"Notification is posted\");\r\n    })\r\n    .catch((err) => {\r\n      window.alert(\"Error in notification posting\");\r\n    });\r\n};\r\nexport const GetNotification = async () => {\r\n  const url = URL + \"privatenotification/getall\";\r\n  await axios\r\n    .get(url)\r\n    .then((res) => {\r\n      var result = res.result.data;\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      window.alert(\"Error in notification posting\");\r\n    });\r\n};\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Dashboard.jsx",["1429","1430","1431","1432","1433","1434","1435","1436"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SuperAdmin from \"./SuperAdmin2/SuperAdmin\";\r\nimport Admin from \"./Admin/Admin\";\r\nimport {\r\n  FetchAllGeofences,\r\n  GetTraccarGroups,\r\n  GetUsers,\r\n  GetServices,\r\n  GetNatures,\r\n  GetPriorities,\r\n  GetSubscriptions,\r\n  GetAllResponder,\r\n  GetPanics,\r\n  GetNotificationLogs,\r\n  GetChatLogs,\r\n} from \"./../../../actions/index\";\r\nimport Supervisor from \"./Supervisor/Supervisor\";\r\nimport Supervisor2 from \"./Supervisor2/Supervisor\";\r\nimport Operator2 from \"./Operator2/Operator\";\r\nimport Mainscreen from \"./Mainscreen/Mainscreen\";\r\n\r\nconst Dashboard = (props) => {\r\n  console.log(\"Dashboard\");\r\n\r\n  const init = async () => {\r\n    await props.getGeofences();\r\n    await props.getTraccarGroups();\r\n    await props.getUsers();\r\n    await props.getServices();\r\n    await props.getNatures();\r\n    await props.getPriorities();\r\n    await props.getSubscriptions();\r\n    await props.getResponders();\r\n    await props.getPanics();\r\n    await props.getNotificationLogs();\r\n    await props.getChatLogs();\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n    return;\r\n  }, []);\r\n\r\n  const selectUser = () => {\r\n    if (props.user.roleId == 10) {\r\n      return <SuperAdmin />;\r\n    } else if (props.user.roleId == 2) {\r\n      if (props.user.firstname == \"supr_1\") {\r\n        return <Supervisor />;\r\n      }\r\n      if (props.user.firstname == \"supr_2\") {\r\n        return <Supervisor2 />;\r\n      }\r\n    } else if (props.user.roleId == 3) {\r\n      return <Operator2 />;\r\n    } else if (props.user.roleId == 7) {\r\n      return <Mainscreen />;\r\n    } else if (props.user.roleId == 1) {\r\n      return <Admin />;\r\n    } else {\r\n      return <pre>{JSON.stringify(props.user, null, 2)}</pre>;\r\n    }\r\n  };\r\n\r\n  return <>{selectUser()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getGeofences: () => FetchAllGeofences(dispatch),\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  getServices: () => GetServices(dispatch),\r\n  getNatures: () => GetNatures(dispatch),\r\n  getPriorities: () => GetPriorities(dispatch),\r\n  getSubscriptions: () => GetSubscriptions(dispatch),\r\n  getResponders: () => GetAllResponder(dispatch),\r\n  getPanics: () => GetPanics(dispatch),\r\n  getNotificationLogs: () => GetNotificationLogs(dispatch),\r\n  getChatLogs: () => GetChatLogs(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Login\\Login.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Supervisor.jsx",["1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456"],"import React, { useEffect, useState, Profiler } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TopBar from \"./TopBar/TopBar\";\r\nimport { UserLogout } from \"../../../../actions/index\";\r\nimport Users from \"./Users/Users\";\r\nimport Wall from \"./Wall/Wall\";\r\nimport Supervisor from \"./Supervisor/Supervisor\";\r\nimport Operator from \"./Operator/Operator\";\r\nimport Geofence from \"./Geofence/Geofence\";\r\nimport Services from \"./Services/Services\";\r\nimport Natures from \"./Natures/Natures\";\r\nimport Priorities from \"./Priorities/Priorities\";\r\nimport Subscriptions from \"./Subscriptions/Subscriptions\";\r\nimport Groups from \"./Groups/Groups\";\r\nimport Responders from \"./Responders/Responders\";\r\nimport Panics from \"./Panics/Panics\";\r\nimport Logs from \"./Logs/Logs\";\r\nimport Applications from \"./Applications/Applications\";\r\nimport Customers from \"./Customers/Customers\";\r\nimport Geo from \"./Geo/Geo\";\r\nimport GeoView from \"./GeoView/GeoView\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport ResponderView from \"./ResponderView/ResponderView\";\r\nimport Chatbox from \"./Chatbox/Chatbox\";\r\n\r\nconst Supervisors = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel\");\r\n\r\n  const [right, setRight] = useState(false);\r\n  const [left, setLeft] = useState(false);\r\n\r\n  const init = async () => {\r\n    let right2 = await localStorage.getItem(\"rightPin\");\r\n    let left2 = await localStorage.getItem(\"leftPin\");\r\n    await setRight(right2 == \"false\" ? false : true);\r\n    await setLeft(left2 == \"false\" ? false : true);\r\n    // console.error(right2 === true, left2 === true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n    return;\r\n  }, []);\r\n\r\n  const getBody = () => {\r\n    if (left == true && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == false && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == true && right == false) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar setRight={setRight} setLeft={setLeft} />\r\n      <div className=\"clearfix\"></div>\r\n      {/* <Groups /> */}\r\n      {/* <Supervisor /> */}\r\n      <Operator />\r\n      {/* <Geofence /> */}\r\n      {/* <Services /> */}\r\n      {/* <Natures /> */}\r\n      {/* <Priorities /> */}\r\n      {/* <Subscriptions /> */}\r\n      <Logs />\r\n      {/* <Applications /> */}\r\n      {/* <Customers /> */}\r\n      <Geo />\r\n      {/* <GeoView /> */}\r\n      <Profile />\r\n      <ResponderView />\r\n      <Chatbox />\r\n      {getBody()}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Supervisors);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Admin.jsx",["1457","1458","1459","1460","1461","1462","1463","1464","1465","1466"],"import React, { useEffect, useState, Profiler } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TopBar from \"./TopBar/TopBar\";\r\nimport { UserLogout } from \"../../../../actions/index\";\r\nimport Users from \"./Users/Users\";\r\nimport Wall from \"./Wall/Wall\";\r\nimport Supervisor from \"./Supervisor/Supervisor\";\r\nimport Operator from \"./Operator/Operator\";\r\nimport Geofence from \"./Geofence/Geofence\";\r\nimport Services from \"./Services/Services\";\r\nimport Natures from \"./Natures/Natures\";\r\nimport Priorities from \"./Priorities/Priorities\";\r\nimport Subscriptions from \"./Subscriptions/Subscriptions\";\r\nimport Groups from \"./Groups/Groups\";\r\nimport Responders from \"./Responders/Responders\";\r\nimport Panics from \"./Panics/Panics\";\r\nimport Logs from \"./Logs/Logs\";\r\nimport Applications from \"./Applications/Applications\";\r\nimport Customers from \"./Customers/Customers\";\r\nimport Geo from \"./Geo/Geo\";\r\nimport GeoView from \"./GeoView/GeoView\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport ResponderView from \"./ResponderView/ResponderView\";\r\nimport NotificationLogs from \"./NotificationLogs/NotificationLogs\";\r\nimport ChatLogs from \"./ChatLogs/ChatLogs\";\r\n\r\nconst Admin = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel\");\r\n\r\n  const [right, setRight] = useState(false);\r\n  const [left, setLeft] = useState(false);\r\n\r\n  const init = async () => {\r\n    let right2 = await localStorage.getItem(\"rightPin\");\r\n    let left2 = await localStorage.getItem(\"leftPin\");\r\n    await setRight(right2 == \"false\" ? false : true);\r\n    await setLeft(left2 == \"false\" ? false : true);\r\n    // console.error(right2 === true, left2 === true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n    return;\r\n  }, []);\r\n\r\n  const getBody = () => {\r\n    if (left == true && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == false && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == true && right == false) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar setRight={setRight} setLeft={setLeft} />\r\n      <div className=\"clearfix\"></div>\r\n      <Groups />\r\n      <Supervisor />\r\n      <Operator />\r\n      <Geofence />\r\n      <Services />\r\n      <Natures />\r\n      <Priorities />\r\n      <Subscriptions />\r\n      <Logs />\r\n      <Applications />\r\n      <Customers />\r\n      <Geo />\r\n      <GeoView />\r\n      <Profile />\r\n      <ResponderView />\r\n      <NotificationLogs />\r\n      <ChatLogs />\r\n      {getBody()}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\SuperAdmin.jsx",["1467","1468","1469","1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486"],"import React, { useEffect, useState, Profiler } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TopBar from \"./TopBar/TopBar\";\r\nimport { UserLogout } from \"../../../../actions/index\";\r\nimport Users from \"./Users/Users\";\r\nimport Wall from \"./Wall/Wall\";\r\nimport Supervisor from \"./Supervisor/Supervisor\";\r\nimport Operator from \"./Operator/Operator\";\r\nimport Geofence from \"./Geofence/Geofence\";\r\nimport Services from \"./Services/Services\";\r\nimport Natures from \"./Natures/Natures\";\r\nimport Priorities from \"./Priorities/Priorities\";\r\nimport Subscriptions from \"./Subscriptions/Subscriptions\";\r\nimport Groups from \"./Groups/Groups\";\r\nimport Responders from \"./Responders/Responders\";\r\nimport Panics from \"./Panics/Panics\";\r\nimport Logs from \"./Logs/Logs\";\r\nimport Applications from \"./Applications/Applications\";\r\nimport Customers from \"./Customers/Customers\";\r\nimport Geo from \"./Geo/Geo\";\r\nimport GeoView from \"./GeoView/GeoView\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport ResponderView from \"./ResponderView/ResponderView\";\r\nimport Admins from \"./Users/Users\";\r\n\r\nconst SuperAdmin = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel\");\r\n\r\n  const [right, setRight] = useState(false);\r\n  const [left, setLeft] = useState(false);\r\n\r\n  const init = async () => {\r\n    let right2 = await localStorage.getItem(\"rightPin\");\r\n    let left2 = await localStorage.getItem(\"leftPin\");\r\n    await setRight(right2 == \"false\" ? false : true);\r\n    await setLeft(left2 == \"false\" ? false : true);\r\n    // console.error(right2 === true, left2 === true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  const getBody = () => {\r\n    if (left == true && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == false && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == true && right == false) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar setRight={setRight} setLeft={setLeft} />\r\n      <div className=\"clearfix\"></div>\r\n      <Groups />\r\n      <Supervisor />\r\n      <Operator />\r\n      {/* <Geofence /> */}\r\n      {/* <Services /> */}\r\n      <Natures />\r\n      <Priorities />\r\n      {/* <Subscriptions /> */}\r\n      {/* <Logs /> */}\r\n      {/* <Applications /> */}\r\n      {/* <Customers /> */}\r\n      {/* <Geo /> */}\r\n      {/* <GeoView /> */}\r\n      <Profile />\r\n      {/* <ResponderView /> */}\r\n      <Admins />\r\n\r\n      {getBody()}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SuperAdmin);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Supervisor.jsx",["1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506"],"import React, { useEffect, useState, Profiler } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TopBar from \"./TopBar/TopBar\";\r\nimport { UserLogout } from \"../../../../actions/index\";\r\nimport Users from \"./Users/Users\";\r\nimport Wall from \"./Wall/Wall\";\r\nimport Supervisor from \"./Supervisor/Supervisor\";\r\nimport Operator from \"./Operator/Operator\";\r\nimport Geofence from \"./Geofence/Geofence\";\r\nimport Services from \"./Services/Services\";\r\nimport Natures from \"./Natures/Natures\";\r\nimport Priorities from \"./Priorities/Priorities\";\r\nimport Subscriptions from \"./Subscriptions/Subscriptions\";\r\nimport Groups from \"./Groups/Groups\";\r\nimport Responders from \"./Responders/Responders\";\r\nimport Panics from \"./Panics/Panics\";\r\nimport Logs from \"./Logs/Logs\";\r\nimport Applications from \"./Applications/Applications\";\r\nimport Customers from \"./Customers/Customers\";\r\nimport Geo from \"./Geo/Geo\";\r\nimport GeoView from \"./GeoView/GeoView\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport ResponderView from \"./ResponderView/ResponderView\";\r\nimport Chatbox from \"./Chatbox/Chatbox\";\r\n\r\nconst Supervisors = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel\");\r\n\r\n  const [right, setRight] = useState(false);\r\n  const [left, setLeft] = useState(false);\r\n\r\n  const init = async () => {\r\n    let right2 = await localStorage.getItem(\"rightPin\");\r\n    let left2 = await localStorage.getItem(\"leftPin\");\r\n    await setRight(right2 == \"false\" ? false : true);\r\n    await setLeft(left2 == \"false\" ? false : true);\r\n    // console.error(right2 === true, left2 === true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n    return;\r\n  }, []);\r\n\r\n  const getBody = () => {\r\n    if (left == true && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme2\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme2\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == false && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme2\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == true && right == false) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme2\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar setRight={setRight} setLeft={setLeft} />\r\n      <div className=\"clearfix\"></div>\r\n      {/* <Groups /> */}\r\n      {/* <Supervisor /> */}\r\n      <Operator />\r\n      {/* <Geofence /> */}\r\n      {/* <Services /> */}\r\n      {/* <Natures /> */}\r\n      {/* <Priorities /> */}\r\n      {/* <Subscriptions /> */}\r\n      <Logs />\r\n      {/* <Applications /> */}\r\n      {/* <Customers /> */}\r\n      <Geo />\r\n      {/* <GeoView /> */}\r\n      <Profile />\r\n      <ResponderView />\r\n      <Chatbox />\r\n      {getBody()}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Supervisors);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Operator.jsx",["1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529"],"import React, { useEffect, useState, Profiler } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TopBar from \"./TopBar/TopBar\";\r\nimport { UserLogout } from \"../../../../actions/index\";\r\nimport Users from \"./Users/Users\";\r\nimport Wall from \"./Wall/Wall\";\r\nimport Supervisor from \"./Supervisor/Supervisor\";\r\nimport Operator from \"./Operator/Operator\";\r\nimport Geofence from \"./Geofence/Geofence\";\r\nimport Services from \"./Services/Services\";\r\nimport Natures from \"./Natures/Natures\";\r\nimport Priorities from \"./Priorities/Priorities\";\r\nimport Subscriptions from \"./Subscriptions/Subscriptions\";\r\nimport Groups from \"./Groups/Groups\";\r\nimport Responders from \"./Responders/Responders\";\r\nimport Panics from \"./Panics/Panics\";\r\nimport Logs from \"./Logs/Logs\";\r\nimport Applications from \"./Applications/Applications\";\r\nimport Customers from \"./Customers/Customers\";\r\nimport Geo from \"./Geo/Geo\";\r\nimport GeoView from \"./GeoView/GeoView\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport ResponderView from \"./ResponderView/ResponderView\";\r\n\r\nconst Operators = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel\");\r\n\r\n  const [right, setRight] = useState(false);\r\n  const [left, setLeft] = useState(false);\r\n\r\n  const getBody = () => {\r\n    if (left == true && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == false && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == true && right == false) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar setRight={setRight} setLeft={setLeft} />\r\n      <div className=\"clearfix\"></div>\r\n      {/* <Groups /> */}\r\n      {/* <Supervisor /> */}\r\n      {/* <Operator /> */}\r\n      {/* <Geofence /> */}\r\n      {/* <Services /> */}\r\n      {/* <Natures /> */}\r\n      {/* <Priorities /> */}\r\n      {/* <Subscriptions /> */}\r\n      {/* <Logs /> */}\r\n      {/* <Applications /> */}\r\n      {/* <Customers /> */}\r\n      {/* <Geo /> */}\r\n      {/* <GeoView /> */}\r\n      <Profile />\r\n      {/* <ResponderView /> */}\r\n\r\n      {getBody()}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Operators);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Mainscreen.jsx",["1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550"],"import React, { useEffect, useState, Profiler } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TopBar from \"./TopBar/TopBar\";\r\nimport { UserLogout } from \"../../../../actions/index\";\r\nimport Users from \"./Users/Users\";\r\nimport Wall from \"./Wall/Wall\";\r\nimport Supervisor from \"./Supervisor/Supervisor\";\r\nimport Operator from \"./Operator/Operator\";\r\nimport Geofence from \"./Geofence/Geofence\";\r\nimport Services from \"./Services/Services\";\r\nimport Natures from \"./Natures/Natures\";\r\nimport Priorities from \"./Priorities/Priorities\";\r\nimport Subscriptions from \"./Subscriptions/Subscriptions\";\r\nimport Groups from \"./Groups/Groups\";\r\nimport Responders from \"./Responders/Responders\";\r\nimport Panics from \"./Panics/Panics\";\r\nimport Logs from \"./Logs/Logs\";\r\nimport Applications from \"./Applications/Applications\";\r\nimport Customers from \"./Customers/Customers\";\r\nimport Geo from \"./Geo/Geo\";\r\nimport GeoView from \"./GeoView/GeoView\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport ResponderView from \"./ResponderView/ResponderView\";\r\n\r\nconst Mainscreen = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel\");\r\n\r\n  const [right, setRight] = useState(false);\r\n  const [left, setLeft] = useState(false);\r\n\r\n  // const init = async () => {\r\n  //   let right2 = await localStorage.getItem(\"rightPin\");\r\n  //   let left2 = await localStorage.getItem(\"leftPin\");\r\n  //   await setRight(right2 == \"false\" ? false : true);\r\n  //   await setLeft(left2 == \"false\" ? false : true);\r\n  //   // console.error(right2 === true, left2 === true);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  const getBody = () => {\r\n    if (left == true && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == false && right == true) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Responders />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (left == true && right == false) {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5 tall theme\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Panics />\r\n            </div>\r\n            <div\r\n              className=\"col-lg-7 col-md-7 col-sm-7 col-xs-7 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n            <div\r\n              className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 tall\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <Wall />\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\"\r\n              style={{ margin: 0, padding: 0 }}\r\n            >\r\n              <div style={{ background: \"#000\" }}>\r\n                <br />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar setRight={setRight} setLeft={setLeft} />\r\n      <div className=\"clearfix\"></div>\r\n      {/* <Groups /> */}\r\n      {/* <Supervisor /> */}\r\n      {/* <Operator /> */}\r\n      {/* <Geofence /> */}\r\n      {/* <Services /> */}\r\n      {/* <Natures /> */}\r\n      {/* <Priorities /> */}\r\n      {/* <Subscriptions /> */}\r\n      <Logs />\r\n      {/* <Applications /> */}\r\n      {/* <Customers /> */}\r\n      {/* <Geo /> */}\r\n      {/* <GeoView /> */}\r\n      <Profile />\r\n      {/* <ResponderView /> */}\r\n\r\n      {getBody()}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mainscreen);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\containers\\Panel\\Panel.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\containers\\PageCenter\\PageCenter.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Supervisor\\Supervisor.jsx",["1551","1552","1553","1554","1555"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport List from \"./List/List\";\r\nimport {\r\n  GetUsers,\r\n  GetTraccarGroups,\r\n  UserLogout,\r\n} from \"../../../../../actions/index\";\r\nimport Create from \"./Create/Create\";\r\n\r\nconst Supervisor = (props) => {\r\n  console.log(\"Supervisor - Supervisor Crud\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // props.getTraccarGroups();\r\n    // props.getUsers();\r\n    return;\r\n  }, []);\r\n\r\n  const selectButton = () => {\r\n    if (page == \"main\") {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"add\")}>\r\n          Create\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            setId(\"\");\r\n            setPage(\"main\");\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const selectSection = () => {\r\n    if (page == \"main\") {\r\n      return <List setPage={setPage} setId={setId} />;\r\n    } else {\r\n      return <Create setPage={setPage} id={id} setId={setId} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"supervisor\"}\r\n        title={{ name: \"Supervisors\", symbol: \"users\" }}\r\n      >\r\n        <div>{selectButton()}</div>\r\n        <br />\r\n        <div>{selectSection()}</div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  // groups: state.groups,\r\n  // supervisors: state.supervisors,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getUsers: () => GetUsers(dispatch),\r\n  // getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Supervisor);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Users\\Users.jsx",["1556","1557","1558"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport List from \"./List/List\";\r\nimport { GetUsers, UserLogout } from \"../../../../../actions/index\";\r\nimport Create from \"./Create/Create\";\r\n\r\nconst Users = (props) => {\r\n  console.log(\"Super Admin Users Component\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.getUsers();\r\n    return;\r\n  }, []);\r\n\r\n  const selectButton = () => {\r\n    if (page == \"main\") {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"add\")}>\r\n          Create\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"main\")}>\r\n          Back\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const selectSection = () => {\r\n    if (page == \"main\") {\r\n      return <List setPage={setPage} setId={setId} />;\r\n    } else {\r\n      return <Create setPage={setPage} id={id} setId={setId} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"admin\"}\r\n        title={{ name: \"Super Admin\", symbol: \"users\" }}\r\n      >\r\n        <div>{selectButton()}</div>\r\n        <br />\r\n        <div>{selectSection()}</div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  // groups: state.groups,\r\n  admin: state.admin,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\TopBar\\TopBar.jsx",["1559","1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570","1571","1572"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserLogout, changeZoom } from \"../../../../../actions/index\";\r\nimport TopMenu from \"../../../../../containers/TobMenu/TopMenu\";\r\n\r\nconst TopBar = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel - Top Menu\");\r\n\r\n  const setSiders = (data) => {\r\n    if (data == \"left\") {\r\n      let leftPin = localStorage.getItem(\"leftPin\");\r\n      if (leftPin) {\r\n        let newLeft = leftPin == \"false\" ? true : false;\r\n        // console.error(\"L:\", newLeft);\r\n        localStorage.setItem(\"leftPin\", newLeft);\r\n      } else {\r\n        let newLeft = true;\r\n        localStorage.setItem(\"leftPin\", newLeft);\r\n      }\r\n    } else if (data == \"right\") {\r\n      let rightPin = localStorage.getItem(\"rightPin\");\r\n      if (rightPin) {\r\n        let newRight = rightPin == \"false\" ? true : false;\r\n        localStorage.setItem(\"rightPin\", newRight);\r\n      } else {\r\n        let newRight = true;\r\n        localStorage.setItem(\"rightPin\", newRight);\r\n      }\r\n    } else {\r\n    }\r\n    window.open(\"http://localhost:3001/\", \"_self\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopMenu title=\"Supervisor Panel\">\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n          <li>\r\n            <a>\r\n              <span data-toggle=\"modal\" /* data-target=\"#logs\" title=\"Logs\" */>\r\n                <i\r\n                  className=\"fa fa-plus\"\r\n                  title=\"Zoom In\"\r\n                  onClick={() => props.changeZoom(props.zoomLevel + 1)}\r\n                ></i>\r\n                &nbsp;\r\n                <i\r\n                  className=\"fa fa-minus\"\r\n                  title=\"Zoom Out\"\r\n                  onClick={() => props.changeZoom(props.zoomLevel - 1)}\r\n                ></i>\r\n                &nbsp; Zoom &nbsp;\r\n                <span className=\"badge inverse-theme\"> {props.zoomLevel} </span>\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a>\r\n              <span data-toggle=\"modal\" /* data-target=\"#logs\" title=\"Logs\" */>\r\n                <i\r\n                  className=\"fa fa-arrow-left\"\r\n                  title=\"Left Drawer\"\r\n                  onDoubleClick={() => setSiders(\"left\")}\r\n                  onClick={() => props.setLeft((item) => !item)}\r\n                ></i>\r\n                &nbsp;\r\n                <i\r\n                  className=\"fa fa-arrow-right\"\r\n                  title=\"Right Drawer\"\r\n                  onDoubleClick={() => setSiders(\"right\")}\r\n                  onClick={() => props.setRight((item) => !item)}\r\n                ></i>\r\n                &nbsp; Drawers\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle themer\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-bar-chart\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              Reports &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#responderReports\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Reponder Reports</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#operatorReports\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Operator Reports</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#supervisorReports\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Supervisor Reports</a>\r\n              </li>\r\n              <li data-toggle=\"modal\" data-target=\"#logs\" className=\"themer\">\r\n                <a> Panic Logs </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          {/* \r\n          <li className=\"themer\">\r\n            <a>\r\n              <span\r\n                data-toggle=\"modal\"\r\n                data-target=\"#applications\"\r\n                title=\"Applications\"\r\n              >\r\n                <i className=\"fa fa-file\"></i> Applications\r\n              </span>\r\n            </a>\r\n          </li> */}\r\n          {/* \r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-users\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              Users &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#supervisor\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Supervisors</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#operator\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Operators</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#customers\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Customers</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#responderView\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Responders</a>\r\n              </li>\r\n            </ul>\r\n          </li> */}\r\n\r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-user\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              {props.user.firstname.toUpperCase()} &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li data-toggle=\"modal\" data-target=\"#profile\">\r\n                <a>Profile</a>\r\n              </li>\r\n              <li>\r\n                <a onClick={props.logout}>Logout</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </TopMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  zoomLevel: state.zoomLevel,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Services\\Services.jsx",["1573","1574","1575","1576"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport List from \"./List/List\";\r\nimport { GetServices, UserLogout } from \"../../../../../actions/index\";\r\nimport Create from \"./Create/Create\";\r\n\r\nconst Services = (props) => {\r\n  console.log(\"Supervisor - Services Crud\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // props.getServices();\r\n    return;\r\n  }, []);\r\n\r\n  const selectButton = () => {\r\n    if (page == \"main\") {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"add\")}>\r\n          Create\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"main\")}>\r\n          Back\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const selectSection = () => {\r\n    if (page == \"main\") {\r\n      return <List setPage={setPage} setId={setId} />;\r\n    } else {\r\n      return <Create setPage={setPage} id={id} setId={setId} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"services\"}\r\n        title={{ name: \"Servicies\", symbol: \"tags\" }}\r\n      >\r\n        <div>{selectButton()}</div>\r\n        <br />\r\n        <div>{selectSection()}</div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  // services: state.services,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getServices: () => GetServices(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Services);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Operator\\Operator.jsx",["1577","1578","1579","1580","1581"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport List from \"./List/List\";\r\nimport {\r\n  GetUsers,\r\n  GetTraccarGroups,\r\n  UserLogout,\r\n} from \"../../../../../actions/index\";\r\nimport Create from \"./Create/Create\";\r\n\r\nconst Operator = (props) => {\r\n  console.log(\"Supervisor - Operator Crud\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // props.getTraccarGroups();\r\n    // props.getUsers();\r\n    return;\r\n  }, []);\r\n\r\n  const selectButton = () => {\r\n    if (page == \"main\") {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"add\")}>\r\n          Create\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            setId(\"\");\r\n            setPage(\"main\");\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const selectSection = () => {\r\n    if (page == \"main\") {\r\n      return <List setPage={setPage} setId={setId} />;\r\n    } else {\r\n      return <Create setPage={setPage} id={id} setId={setId} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"operator\"}\r\n        title={{ name: \"Operators\", symbol: \"users\" }}\r\n      >\r\n        <div>{selectButton()}</div>\r\n        <br />\r\n        <div>{selectSection()}</div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  // groups: state.groups,\r\n  supervisors: state.supervisors,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getUsers: () => GetUsers(dispatch),\r\n  // getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Operator);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Geofence\\Geofence.jsx",["1582","1583","1584"],"import React, { useEffect } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserLogout, FetchAllGeofences } from \"./../../../../../actions/index\";\r\nimport Map from \"./Map/Map\";\r\n\r\nconst Geofence = (props) => {\r\n  console.log(\"Supervisor - Geofence\");\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"geofence\"}\r\n        title={{ name: \"Geofence\", symbol: \"globe\" }}\r\n      >\r\n        <Map />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // user: state.logger,\r\n  //   traccarGeofences: state.traccarGeofences,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  //   fetchAllGeofences: () => FetchAllGeofences(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Geofence);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Natures\\Natures.jsx",["1585","1586","1587","1588"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport List from \"./List/List\";\r\nimport { GetNatures, UserLogout } from \"../../../../../actions/index\";\r\nimport Create from \"./Create/Create\";\r\n\r\nconst Natures = (props) => {\r\n  console.log(\"Supervisor - Natures Crud\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // props.getNatures();\r\n    return;\r\n  }, []);\r\n\r\n  const selectButton = () => {\r\n    if (page == \"main\") {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"add\")}>\r\n          Create\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"main\")}>\r\n          Back\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const selectSection = () => {\r\n    if (page == \"main\") {\r\n      return <List setPage={setPage} setId={setId} />;\r\n    } else {\r\n      return <Create setPage={setPage} id={id} setId={setId} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"natures\"}\r\n        title={{ name: \"Natures\", symbol: \"leaf\" }}\r\n      >\r\n        <div>{selectButton()}</div>\r\n        <br />\r\n        <div>{selectSection()}</div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  natures: state.natures,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getNatures: () => GetNatures(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Natures);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Wall\\Wall.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Subscriptions\\Subscriptions.jsx",["1589","1590","1591","1592"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport List from \"./List/List\";\r\nimport { GetSubscriptions, UserLogout } from \"../../../../../actions/index\";\r\nimport Create from \"./Create/Create\";\r\n\r\nconst Subscriptions = (props) => {\r\n  console.log(\"Supervisor - Subscriptions Crud\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // props.getSubscriptions();\r\n    return;\r\n  }, []);\r\n\r\n  const selectButton = () => {\r\n    if (page == \"main\") {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"add\")}>\r\n          Create\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"main\")}>\r\n          Back\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const selectSection = () => {\r\n    if (page == \"main\") {\r\n      return <List setPage={setPage} setId={setId} />;\r\n    } else {\r\n      return <Create setPage={setPage} id={id} setId={setId} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"subscriptions\"}\r\n        title={{ name: \"Subscriptions\", symbol: \"tag\" }}\r\n      >\r\n        <div>{selectButton()}</div>\r\n        <br />\r\n        <div>{selectSection()}</div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  subscriptions: state.subscriptions,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getSubscriptions: () => GetSubscriptions(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscriptions);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Groups\\Groups.jsx",["1593","1594","1595"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport List from \"./List/List\";\r\nimport { GetTraccarGroups, UserLogout } from \"../../../../../actions/index\";\r\nimport Create from \"./Create/Create\";\r\n\r\nconst Groups = (props) => {\r\n  console.log(\"Supervisor - Groups\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // props.getTraccarGroups();\r\n    return;\r\n  }, []);\r\n\r\n  const selectButton = () => {\r\n    if (page == \"main\") {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"add\")}>\r\n          Create\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            setId(\"\");\r\n            setPage(\"main\");\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const selectSection = () => {\r\n    if (page == \"main\") {\r\n      return <List groups={props.groups} setPage={setPage} setId={setId} />;\r\n    } else {\r\n      return <Create setPage={setPage} id={id} setId={setId} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={false}\r\n        name={\"groups\"}\r\n        title={{ name: \"Groups\", symbol: \"cubes\" }}\r\n      >\r\n        <div>{selectButton()}</div>\r\n        <br />\r\n        <div>{selectSection()}</div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups, // .filter((item) => item.id == state.logger.groupId),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Panics\\Panics.jsx",["1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625"],"import React, { useEffect, useRef } from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport Circle from \"react-circle\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetPanics,\r\n  GetCenter,\r\n} from \"./../../../../../actions/index\";\r\n\r\nconst Panics = (props) => {\r\n  console.log(\"Supervisor - Panics Widget\");\r\n\r\n  const panicWidget = useRef(\"\");\r\n  const inQueryWidget = useRef(\"\");\r\n  const confirmedByOperatorWidget = useRef(\"\");\r\n  const assignedToResponderWidget = useRef(\"\");\r\n  const confirmedByResponderWidget = useRef(\"\");\r\n  const resolvedByResponderWidget = useRef(\"\");\r\n  const resolvedByOperatorWidget = useRef(\"\");\r\n  const closedBySupervisorWidget = useRef(\"\");\r\n  const closedByCustomerWidget = useRef(\"\");\r\n  const cancelledWidget = useRef(\"\");\r\n  const closedWidget = useRef(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getPanics();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  const getTableData = (data) => {\r\n    return data.reverse().map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr\r\n            onDoubleClick={() =>\r\n              props.getCenter([\r\n                {\r\n                  latitude: Number(item.lat),\r\n                  longitude: Number(item.lng),\r\n                },\r\n              ])\r\n            }\r\n          >\r\n            <td> {item.id} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.nature.name} </td>\r\n            <td> {item.priority.name} </td>\r\n            <td> {item.lat} </td>\r\n            <td> {item.lng} </td>\r\n            <td> {item.createdAt} </td>\r\n            {/* <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td> */}\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Contact </th>\r\n                <th> Nature </th>\r\n                <th> Priority </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Date </th>\r\n                {/* <th> - </th>\r\n                <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getLength = (data) => {\r\n    const data2 = data.filter(function (res) {\r\n      return res.panicType == \"emergency\";\r\n    });\r\n    if (data2.length > 0) {\r\n      return (Number(data2.length) / Number(props.panics.length)) * 100;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const getStyles = (bg) => {\r\n    return buildStyles({\r\n      rotation: 0.25,\r\n      strokeLinecap: \"butt\",\r\n      textSize: \"30px\",\r\n      pathTransitionDuration: 0.3,\r\n      pathColor: bg,\r\n      textColor: \"#369\",\r\n      trailColor: \"#d6d6d6\",\r\n      backgroundColor: \"#3e98c7\",\r\n      text: {\r\n        // Text color\r\n        fill: \"#f88\",\r\n        // Text size\r\n        fontSize: \"20px\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const panicLengthString = (data) => {\r\n    const data2 = data.filter(function (data) {\r\n      return data.panicType == \"emergency\";\r\n    });\r\n    return Number(data2.length) == 0 ? \"0\" : Number(data2.length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ overflow: \"auto\", height: \"100vh\" }}>\r\n        <div>\r\n          {/* <PieChart\r\n            data={[\r\n              { title: \"One\", value: 1, color: \"darkblue\" },\r\n              { title: \"One\", value: 2, color: \"blue\" },\r\n              { title: \"Two\", value: 3, color: \"cyan\" },\r\n              { title: \"Three\", value: 4, color: \"skyblue\" },\r\n              { title: \"Four\", value: 5, color: \"lightblue\" },\r\n              { title: \"Four\", value: 6, color: \"#eee\" },\r\n              { title: \"Four\", value: 7, color: \"#339\" },\r\n              { title: \"Four\", value: 8, color: \"#366\" },\r\n              { title: \"Four\", value: 9, color: \"#369\" },\r\n            ]}\r\n          /> */}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              panicWidget.current.style.display == \"none\" ||\r\n              panicWidget.current.style.display == \"\"\r\n            ) {\r\n              panicWidget.current.style.display = \"block\";\r\n            } else {\r\n              panicWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Panic Reports&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <center\r\n          ref={panicWidget}\r\n          className=\"inverse-theme\"\r\n          style={{ padding: \"5px\", display: \"block\" }}\r\n        >\r\n          <div className=\"\" style={{ width: \"350px\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.inQueryPanics)}\r\n                  text={panicLengthString(props.inQueryPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                In Query\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.confirmedByOperatorPanics)}\r\n                  text={panicLengthString(props.confirmedByOperatorPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Operator Confirmed\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.assignedToResponderPanics)}\r\n                  text={panicLengthString(props.assignedToResponderPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Assigned Responder\r\n              </div>\r\n\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.confirmedByResponderPanics)}\r\n                  text={panicLengthString(props.confirmedByResponderPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Responder Confirmed\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.resolvedByResponderPanics)}\r\n                  text={panicLengthString(props.resolvedByResponderPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Responder Resolved\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.resolvedByOperatorPanics)}\r\n                  text={panicLengthString(props.resolvedByOperatorPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Operator Resolved\r\n              </div>\r\n\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.closedBySupervisorPanics)}\r\n                  text={panicLengthString(props.closedBySupervisorPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Supervisor Closed\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.closedByCustomerPanics)}\r\n                  text={panicLengthString(props.closedByCustomerPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Customer Closed\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.panics)}\r\n                  text={panicLengthString(props.panics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Total\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.cancelledPanics)}\r\n                  text={panicLengthString(props.cancelledPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Cancelled\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.closedPanics)}\r\n                  text={panicLengthString(props.closedPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Closed\r\n              </div>\r\n            </div>\r\n          </div>\r\n          &nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n        </center>\r\n\r\n        {/* <h4\r\n          style={{ padding: \"5px\",   }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.panics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> All Panics&nbsp; <i className=\"fa fa-caret-down\" ></i> </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>{getTable(props.panics)}</div> */}\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              inQueryWidget.current.style.display == \"none\" ||\r\n              inQueryWidget.current.style.display == \"\"\r\n            ) {\r\n              inQueryWidget.current.style.display = \"block\";\r\n            } else {\r\n              inQueryWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.inQueryPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            InQuery Panics&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={inQueryWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.inQueryPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              confirmedByOperatorWidget.current.style.display == \"none\" ||\r\n              confirmedByOperatorWidget.current.style.display == \"\"\r\n            ) {\r\n              confirmedByOperatorWidget.current.style.display = \"block\";\r\n            } else {\r\n              confirmedByOperatorWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.confirmedByOperatorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Confirmed By Operator Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={confirmedByOperatorWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.confirmedByOperatorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              assignedToResponderWidget.current.style.display == \"none\" ||\r\n              assignedToResponderWidget.current.style.display == \"\"\r\n            ) {\r\n              assignedToResponderWidget.current.style.display = \"block\";\r\n            } else {\r\n              assignedToResponderWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.assignedToResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Assigned To Responder Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={assignedToResponderWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.assignedToResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              confirmedByResponderWidget.current.style.display == \"none\" ||\r\n              confirmedByResponderWidget.current.style.display == \"\"\r\n            ) {\r\n              confirmedByResponderWidget.current.style.display = \"block\";\r\n            } else {\r\n              confirmedByResponderWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.confirmedByResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Confirmed By Responder Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={confirmedByResponderWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.confirmedByResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              resolvedByResponderWidget.current.style.display == \"none\" ||\r\n              resolvedByResponderWidget.current.style.display == \"\"\r\n            ) {\r\n              resolvedByResponderWidget.current.style.display = \"block\";\r\n            } else {\r\n              resolvedByResponderWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.resolvedByResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Resolved By Responder Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={resolvedByResponderWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.resolvedByResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              resolvedByOperatorWidget.current.style.display == \"none\" ||\r\n              resolvedByOperatorWidget.current.style.display == \"\"\r\n            ) {\r\n              resolvedByOperatorWidget.current.style.display = \"block\";\r\n            } else {\r\n              resolvedByOperatorWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.resolvedByOperatorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Resolved By Operator Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={resolvedByOperatorWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.resolvedByOperatorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              closedBySupervisorWidget.current.style.display == \"none\" ||\r\n              closedBySupervisorWidget.current.style.display == \"\"\r\n            ) {\r\n              closedBySupervisorWidget.current.style.display = \"block\";\r\n            } else {\r\n              closedBySupervisorWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.closedBySupervisorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Closed By Supervisor Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={closedBySupervisorWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.closedBySupervisorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              closedByCustomerWidget.current.style.display == \"none\" ||\r\n              closedByCustomerWidget.current.style.display == \"\"\r\n            ) {\r\n              closedByCustomerWidget.current.style.display = \"block\";\r\n            } else {\r\n              closedByCustomerWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.closedByCustomerPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Closed By Customer Panics&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={closedByCustomerWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.closedByCustomerPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              cancelledWidget.current.style.display == \"none\" ||\r\n              cancelledWidget.current.style.display == \"\"\r\n            ) {\r\n              cancelledWidget.current.style.display = \"block\";\r\n            } else {\r\n              cancelledWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.cancelledPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Cancelled Panics&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={cancelledWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.closedPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              closedWidget.current.style.display == \"none\" ||\r\n              closedWidget.current.style.display == \"\"\r\n            ) {\r\n              closedWidget.current.style.display = \"block\";\r\n            } else {\r\n              closedWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.cancelledPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Closed Panics&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div ref={closedWidget} style={{ marginLeft: \"15px\", display: \"none\" }}>\r\n          {getTable(props.closedPanics)}\r\n        </div>\r\n        <br />\r\n\r\n        <br />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  panics: state.panics,\r\n  inQueryPanics: state.inQueryPanics,\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  assignedToResponderPanics: state.assignedToResponderPanics,\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  closedByCustomerPanics: state.closedByCustomerPanics,\r\n  cancelledPanics: state.cancelledPanics,\r\n  closedPanics: state.closedPanics,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getPanics: () => GetPanics(dispatch),\r\n  getCenter: (data) => GetCenter(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Panics);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Responders\\Responders.jsx",["1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659"],"import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  UserLogout,\r\n  GetAllResponder,\r\n  GetCenter,\r\n  changeZoom,\r\n} from \"./../../../../../actions/index\";\r\nimport Reports from \"../Reports/Reports\";\r\n// import Plot from \"react-plotly.js\";\r\nimport BarChart from \"react-bar-chart\";\r\nimport _ from \"lodash\";\r\nimport HSBar from \"react-horizontal-stacked-bar-chart\";\r\nimport Notification from \"../Notifications/private notifications/Notification\";\r\nimport { CheckIfEmpty } from \"../../../../../Helpers/utils\";\r\n\r\nconst Responders = (props) => {\r\n  var data365;\r\n\r\n  console.log(\"Supervisor - Responder Widget\");\r\n\r\n  const OperatorWidget = useRef(\"\");\r\n  const lineGraphWidget = useRef(\"\");\r\n  const onlinRespWidget = useRef(\"\");\r\n  const offlinRespWidget = useRef(\"\");\r\n  const unknownRespWidget = useRef(\"\");\r\n  const buzyRespWidget = useRef(\"\");\r\n  const freeRespWidget = useRef(\"\");\r\n  const boundryRespWidget = useRef(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getResponders();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  function filter_res(data) {\r\n    if (data) {\r\n      return data.filter(function (responder) {\r\n        return responder.db.type == \"emergency\";\r\n      });\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  const getTableData2 = (data) => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td>{item.id}</td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td>\r\n              {\" \"}\r\n              {item.userActivation ? (\r\n                <i className=\"fa fa-toggle-on\"></i>\r\n              ) : (\r\n                  <i className=\"fa fa-toggle-off\"></i>\r\n                )}\r\n            </td>\r\n            {/* <td> {item.position.speed} </td> */}\r\n            <td> </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    let data2 = getResss(data);\r\n    //testing code\r\n    let data365 = data2.filter(function (res) {\r\n      return res.db.type == \"emergency\";\r\n    });\r\n    return data365.map((item, index) => {\r\n      //console.log(\"map fuctions of Items\", item);\r\n      // let color = null;\r\n      // if (item.db) {\r\n      //   if (item.db.userActivation == true) {\r\n      //     color = \"green\";\r\n      //   } else {\r\n      //     color = \"transparent\";\r\n      //   }\r\n      // } else {\r\n      //   color = \"transparent\";\r\n      // }\r\n      // console.error(color);\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr\r\n            // style={{ background: \"red !important\" }}\r\n            onDoubleClick={() =>\r\n              props.getCenter([\r\n                { latitude: Number(item.lat), longitude: Number(item.lng) },\r\n              ])\r\n            }\r\n          >\r\n            <td> {item.id} </td>\r\n            <td> {item.name} </td>\r\n            <td> {item.db == null ? null : item.db.contact} </td>\r\n            <td> {item.position.latitude} </td>\r\n            <td> {item.position.longitude} </td>\r\n            <td> {item.position.speed} </td>\r\n            <td> {item.db.type} </td>\r\n            <td> </td>\r\n            {/* <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td> */}\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Speed </th>\r\n                <th> temp type </th>\r\n                {/* <th> - </th>\r\n                <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getTable2 = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Active </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData2(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getOperss = () => {\r\n    let groupIds = props.groups.map((item) => item.id);\r\n    let result = props.operators.filter((item) => {\r\n      let group = Number(item.groupId);\r\n      if (_.includes(groupIds, group)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    // console.error(result);\r\n    return result;\r\n  };\r\n\r\n  const getResss = (data) => {\r\n    let info = props.groups2.map((p) => {\r\n      let ele = p;\r\n      let grouper = ele.groupId;\r\n      let theGroup = props.allGroups.filter((item) => item.id == grouper);\r\n      if (theGroup && theGroup.length > 0) {\r\n        return theGroup[0];\r\n      }\r\n    });\r\n    let info2 = [];\r\n    if (info && info.length > 0) {\r\n      info2 = props.allGroups.filter((item) => info[0].id == item.groupId);\r\n    }\r\n    let groupIds = info2.map((item) => item.id);\r\n    let result = data.filter((item) => {\r\n      if (item.db != null) {\r\n        let group = Number(item.db.groupId);\r\n        if (_.includes(groupIds, group)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          overflow: \"auto\",\r\n          // scrollBehavior: \"inherit\",\r\n          direction: \"rtl\",\r\n          marginRight: \"10px\",\r\n        }}\r\n      >\r\n        {/* my code for firebase */}\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            window.location = \"/privatenotification\";\r\n            // props.history.push(\"/notification\");\r\n            //<Redirect to=\"/notification\"></Redirect>;\r\n          }}\r\n        >\r\n          <center>\r\n            Private Notifications&nbsp; <i className=\"fa\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            window.location = \"/publicnotification\";\r\n            // props.history.push(\"/notification\");\r\n            //<Redirect to=\"/notification\"></Redirect>;\r\n          }}\r\n        >\r\n          <center>\r\n            Public Notifications&nbsp; <i className=\"fa\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            window.location = \"/usernotification\";\r\n            // props.history.push(\"/notification\");\r\n            //<Redirect to=\"/notification\"></Redirect>;\r\n          }}\r\n        >\r\n          <center>\r\n            User Notifications&nbsp; <i className=\"fa\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        {/* end of my code */}\r\n\r\n        <div style={{ direction: \"ltr\" }}>\r\n          {/* <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                OperatorWidget.current.style.display == \"none\" ||\r\n                OperatorWidget.current.style.display == \"\"\r\n              ) {\r\n                OperatorWidget.current.style.display = \"block\";\r\n              } else {\r\n                OperatorWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Operators&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} /> */}\r\n          {/* <div ref={OperatorWidget} style={{ display: \"none\" }}>\r\n            {getTable2(getOperss())}\r\n          </div> */}\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                lineGraphWidget.current.style.display == \"none\" ||\r\n                lineGraphWidget.current.style.display == \"\"\r\n              ) {\r\n                lineGraphWidget.current.style.display = \"block\";\r\n              } else {\r\n                lineGraphWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Responder Performance&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div\r\n            ref={lineGraphWidget}\r\n            style={{ display: \"block\" }}\r\n            className=\"inverse-theme\"\r\n          >\r\n            <Reports />\r\n          </div>\r\n\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                onlinRespWidget.current.style.display == \"none\" ||\r\n                onlinRespWidget.current.style.display == \"\"\r\n              ) {\r\n                onlinRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                onlinRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.online.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Online Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          {/* {CheckIfEmpty(props.online) ? (\r\n\r\n                        <div ref={onlinRespWidget} style={{ display: \"none\" }}>            \r\n                        {getTable(props.online)}\r\n                      </div>\r\n          ): (\r\n                        <div ref={onlinRespWidget} style={{ display: \"none\" }}>            \r\n                        {getTable(props.online)}\r\n                      </div>  \r\n              ) } */}\r\n\r\n          {/* {(data365 = filter_res(props.online))} */}\r\n\r\n          <div ref={onlinRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.online)}\r\n          </div>\r\n\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                offlinRespWidget.current.style.display == \"none\" ||\r\n                offlinRespWidget.current.style.display == \"\"\r\n              ) {\r\n                offlinRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                offlinRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.offline.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Offline Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={offlinRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.offline)}\r\n          </div>\r\n          {/* <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                unknownRespWidget.current.style.display == \"none\" ||\r\n                unknownRespWidget.current.style.display == \"\"\r\n              ) {\r\n                unknownRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                unknownRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.unknown.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Unknown Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} /> */}\r\n          {/* <div ref={unknownRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.unknown)}\r\n          </div> */}\r\n\r\n          {/* <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                boundryRespWidget.current.style.display == \"none\" ||\r\n                boundryRespWidget.current.style.display == \"\"\r\n              ) {\r\n                boundryRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                boundryRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.outBound.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Cross Boundries&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={boundryRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.outBound, \"id\"))}\r\n          </div> */}\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                buzyRespWidget.current.style.display == \"none\" ||\r\n                buzyRespWidget.current.style.display == \"\"\r\n              ) {\r\n                buzyRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                buzyRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.buzy.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Buzy Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={buzyRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.buzy, \"id\"))}\r\n          </div>\r\n\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                freeRespWidget.current.style.display == \"none\" ||\r\n                freeRespWidget.current.style.display == \"\"\r\n              ) {\r\n                freeRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                freeRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.free.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Free Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={freeRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.free, \"id\"))}\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n          {/* <center>\r\n            <BarChart\r\n              ylabel=\"Responders\"\r\n              width={400}\r\n              height={300}\r\n              margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\r\n              data={\r\n                // [3, 5, 1, 7, 9, 12, 4]\r\n                [\r\n                  { text: \"Resp1\", value: 500, barColor: \"red\" },\r\n                  { text: \"Resp2\", value: 300 },\r\n                  { text: \"Resp3\", value: 600 },\r\n                  { text: \"Resp4\", value: 200 },\r\n                  { text: \"Resp5\", value: 400 },\r\n                  { text: \"Resp6\", value: 700 },\r\n                  { text: \"Resp7\", value: 100 },\r\n                ]\r\n              }\r\n              // onBarClick={this.handleBarClick}\r\n            />\r\n            &nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center> */}\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  offline: state.offlineResponders,\r\n  online: state.onlineResponders,\r\n  unknown: state.unknownResponders,\r\n  outBound: state.outBoundResponders,\r\n  buzy: state.buzyResponders,\r\n  free: state.freeResponders,\r\n  allGroups: state.groups,\r\n  groups: state.groups.filter((item) => item.groupId == state.logger.groupId),\r\n  groups2: state.groups.filter((item) => {\r\n    let sprvsr = item.id == state.logger.groupId;\r\n    if (sprvsr) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }),\r\n  operators: state.operators,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getResponders: () => GetAllResponder(dispatch),\r\n  getCenter: (data) => GetCenter(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Responders);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Priorities\\Priorities.jsx",["1660","1661","1662","1663","1664"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport List from \"./List/List\";\r\nimport { GetPriorities, UserLogout } from \"../../../../../actions/index\";\r\nimport Create from \"./Create/Create\";\r\n\r\nconst Priorities = (props) => {\r\n  console.log(\"Supervisor - Priorities Crud\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // props.getPriorities();\r\n    return;\r\n  }, []);\r\n\r\n  const selectButton = () => {\r\n    if (page == \"main\") {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"add\")}>\r\n          Create\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"main\")}>\r\n          Back\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const selectSection = () => {\r\n    if (page == \"main\") {\r\n      return <List setPage={setPage} setId={setId} />;\r\n    } else {\r\n      return <Create setPage={setPage} id={id} setId={setId} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"priorities\"}\r\n        title={{ name: \"Priorities\", symbol: \"star\" }}\r\n      >\r\n        {/* <div>{selectButton()}</div> */}\r\n        <br />\r\n        <div>{selectSection()}</div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  priorities: state.priorities,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getPriorities: () => GetPriorities(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Priorities);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Logs\\Logs.jsx",["1665","1666","1667","1668","1669","1670","1671","1672","1673"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\n// import {  } from './../../../../../actions/index'\r\nimport JavascriptTimeAgo from \"javascript-time-ago\";\r\nimport en from \"javascript-time-ago/locale/en\";\r\nimport ru from \"javascript-time-ago/locale/ru\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nJavascriptTimeAgo.addLocale(en);\r\nJavascriptTimeAgo.addLocale(ru);\r\n\r\nconst compareDate = (date1, date2, type = \"equal\") => {\r\n  let x = new Date(date1);\r\n  let y = new Date(date2);\r\n  if (type == \"greater\") {\r\n    return +x > +y;\r\n  } else if (type == \"lesser\") {\r\n    return +x < +y;\r\n  } else {\r\n    return +x == +y;\r\n  }\r\n};\r\n\r\nconst Logs = (props) => {\r\n  console.log(\"Supervisor - Event Logs\");\r\n\r\n  const [start, setStart] = useState(\"\");\r\n  const [end, setEnd] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getPanics();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  // const filterNature = (id) => {\r\n  //   let data = props.natures.filter((item) => item.id == id);\r\n  //   if (data.length > 0) {\r\n  //     return data[0];\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  // const filterPriority = (id) => {\r\n  //   let data = props.priorities.filter((item) => item.id == id);\r\n  //   if (data.length > 0) {\r\n  //     return data[0];\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  const filterResponders = (id) => {\r\n    let data = props.online.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterOperators = (id) => {\r\n    let data = props.operators.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterSupervisors = (id) => {\r\n    let data = props.supervisors.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    return data.reverse().map((item, index) => {\r\n      let color = item.isCancelled ? \"red\" : \"transparent\";\r\n      if (start == \"\" || end == \"\") {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <tr style={{ background: color }}>\r\n              <td> {item.id} </td>\r\n              <td> {item.contact} </td>\r\n              <td> {item.nature.name} </td>\r\n              <td> {item.priority.name} </td>\r\n              <td> {item.lat} </td>\r\n              <td> {item.lng} </td>\r\n              <td> {item.isCancelled ? \"Yes\" : \"No\"} </td>\r\n              <td>\r\n                {filterOperators(item.operatorInvolved) == null\r\n                  ? null\r\n                  : filterOperators(item.operatorInvolved).firstname}\r\n              </td>\r\n              <td>\r\n                {filterSupervisors(item.supervisorInvolved) == null\r\n                  ? null\r\n                  : filterSupervisors(item.supervisorInvolved).firstname}\r\n              </td>\r\n              <td>\r\n                {\" \"}\r\n                {filterResponders(item.responderInvolved) == null\r\n                  ? null\r\n                  : filterResponders(item.responderInvolved).name}{\" \"}\r\n              </td>\r\n              <td>\r\n                {item.createdAt && (\r\n                  <ReactTimeAgo date={new Date(item.createdAt)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicConfirmedOprDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicConfirmedOprDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicConfirmedSuprDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicConfirmedSuprDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicAssignedResDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicAssignedResDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicConfirmedResDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicConfirmedResDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicResolvedResDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicResolvedResDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicResolvedOprDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicResolvedOprDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicClosedSuprDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicClosedSuprDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicClosedCusDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicClosedCusDate)} />\r\n                )}\r\n              </td>\r\n              <td>{item.statusId}</td>\r\n              {/* <td>\r\n                <button\r\n                  className=\"btn btn-xs btn-primary\"\r\n                  onClick={() => edit(item.id)}\r\n                >\r\n                  <i className=\"fa fa-pencil\"></i>\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-xs btn-primary\"\r\n                  onClick={() => del(item.id)}\r\n                >\r\n                  <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n              </td> */}\r\n            </tr>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        if (\r\n          compareDate(item.createdAt, start, \"greator\") &&\r\n          compareDate(item.createdAt, end, \"lesser\")\r\n        ) {\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <tr style={{ background: color }}>\r\n                <td> {item.id} </td>\r\n                <td> {item.contact} </td>\r\n                <td> {item.nature.name} </td>\r\n                <td> {item.priority.name} </td>\r\n                <td> {item.lat} </td>\r\n                <td> {item.lng} </td>\r\n                <td> {item.isCancelled ? \"Yes\" : \"No\"} </td>\r\n                <td>\r\n                  {filterOperators(item.operatorInvolved) == null\r\n                    ? null\r\n                    : filterOperators(item.operatorInvolved).firstname}\r\n                </td>\r\n                <td>\r\n                  {filterSupervisors(item.supervisorInvolved) == null\r\n                    ? null\r\n                    : filterSupervisors(item.supervisorInvolved).firstname}\r\n                </td>\r\n                <td>\r\n                  {\" \"}\r\n                  {filterResponders(item.responderInvolved) == null\r\n                    ? null\r\n                    : filterResponders(item.responderInvolved).name}{\" \"}\r\n                </td>\r\n                <td>\r\n                  {item.createdAt && (\r\n                    <ReactTimeAgo date={new Date(item.createdAt)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicConfirmedOprDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicConfirmedOprDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicConfirmedSuprDate && (\r\n                    <ReactTimeAgo\r\n                      date={new Date(item.panicConfirmedSuprDate)}\r\n                    />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicAssignedResDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicAssignedResDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicConfirmedResDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicConfirmedResDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicResolvedResDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicResolvedResDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicResolvedOprDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicResolvedOprDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicClosedSuprDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicClosedSuprDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicClosedCusDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicClosedCusDate)} />\r\n                  )}\r\n                </td>\r\n                <td>{item.statusId}</td>\r\n                {/* <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => edit(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => del(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                  </button>\r\n                </td> */}\r\n              </tr>\r\n            </React.Fragment>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={{ overflow: \"auto\", fontSize: \"11px\" }}\r\n          className=\"inverse-theme\"\r\n        >\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Contact </th>\r\n                <th> Nature </th>\r\n                <th> Priority </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Cancelled </th>\r\n                <th> Operator </th>\r\n                <th> Supervisor </th>\r\n                <th> Responder </th>\r\n                <th> Generated </th>\r\n                <th> Confirmed By Operator </th>\r\n                <th> Confirmed By Supervisor </th>\r\n                <th> Assigned To Responder </th>\r\n                <th> Confirmed Responder </th>\r\n                <th> Resolved By Responder </th>\r\n                <th> Resolved By Operator </th>\r\n                <th> Closed By Supervisor </th>\r\n                <th> Closed By Customer </th>\r\n                <th> Status </th>\r\n                {/* <th> - </th>\r\n                    <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"logs\"}\r\n        title={{ name: \"Logs\", symbol: \"check\" }}\r\n      >\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"\">\r\n                {\" \"}\r\n                <b> From </b>{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                placeholder=\" From : 00/00/0000 \"\r\n                value={start}\r\n                onChange={(e) => setStart(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"\">\r\n                {\" \"}\r\n                <b> To </b>{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                placeholder=\" To : 00/00/0000 \"\r\n                value={end}\r\n                onChange={(e) => setEnd(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        {getTable(props.panics)}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  // natures: state.natures,\r\n  // priorities: state.priorities,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n  panics: state.panics,\r\n  operators: state.operators,\r\n  supervisors: state.supervisors,\r\n  // inQueryPanics: state.inQueryPanics,\r\n  // confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  // assignedToResponderPanics: state.assignedToResponderPanics,\r\n  // confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  // resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  // resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  // closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  // closedByCustomerPanics: state.closedByCustomerPanics,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Applications\\Applications.jsx",["1674","1675","1676","1677","1678","1679"],"import React, { useState } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ChangeGeoLatLng,\r\n  UpdateUsers,\r\n  GetUsers,\r\n} from \"./../../../../../actions/index\";\r\n\r\nconst Applications = (props) => {\r\n  console.log(\"Supervisor - Customer Applications\");\r\n\r\n  const [filter, setFilter] = useState(false);\r\n\r\n  const getTableData = (data) => {\r\n    let info = data.reverse();\r\n    if (filter) {\r\n      info = info.filter((item) => item.approval == 1);\r\n    } else {\r\n      info = info.filter((item) => item.approval == null || item.approval == 0);\r\n    }\r\n    return info.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.cnic} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td> {item.password} </td>\r\n            <td> {item.lat} </td>\r\n            <td> {item.lng} </td>\r\n            <td> {item.address} </td>\r\n            <td> {item.userActivation} </td>\r\n            <td> {item.userAssignment} </td>\r\n            <td> {item.serviceId} </td>\r\n            <td>{item.subscriptionId}</td>\r\n            <td> {item.deviceId} </td>\r\n            <td> {item.custId} </td>\r\n            <td> {item.image} </td>\r\n            <td> {item.trackingId} </td>\r\n            <td> {item.uniqueId} </td>\r\n            <td>\r\n              <span\r\n                className=\"\"\r\n                onClick={() =>\r\n                  props.changeGeoLatLng({\r\n                    lat: Number(item.lat),\r\n                    lng: Number(item.lng),\r\n                  })\r\n                }\r\n                data-toggle=\"modal\"\r\n                data-target=\"#geo\"\r\n              >\r\n                <i className=\"fa fa-globe\"></i>\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <span\r\n                onClick={async () => {\r\n                  await props.updateUsers(item.id, {\r\n                    approval: item.approval == 1 ? 0 : 1,\r\n                  });\r\n                  await props.getUsers();\r\n                }}\r\n              >\r\n                {item.approval != null &&\r\n                item.approval != 0 &&\r\n                item.approval != false ? (\r\n                  <i className=\"fa fa-toggle-on\"></i>\r\n                ) : (\r\n                  <i className=\"fa fa-toggle-off\"></i>\r\n                )}\r\n              </span>\r\n            </td>\r\n            {/* <td> </td> */}\r\n            {/* <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => edit(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => del(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                  </button>\r\n                </td> */}\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> CNIC </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Password </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Address </th>\r\n                <th> User Activation </th>\r\n                <th> User Assignment </th>\r\n                <th> Service </th>\r\n                <th> Subscription </th>\r\n                <th> Device </th>\r\n                <th> Parent </th>\r\n                <th> Image </th>\r\n                <th> Tracking Id </th>\r\n                <th> Unique </th>\r\n                <th> Geofence </th>\r\n                <th> Approval </th>\r\n                {/* <th> - </th>\r\n                    <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"applications\"}\r\n        title={{ name: \"Applications\", symbol: \"file\" }}\r\n      >\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => setFilter((item) => !item)}\r\n          >\r\n            Filter\r\n          </button>\r\n        </div>\r\n        <br />\r\n        {getTable(props.customers)}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  customers: state.customers.filter((item) => item.isSubmitted == true),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeGeoLatLng: (data) => ChangeGeoLatLng(dispatch, data),\r\n  updateUsers: (id, data) => UpdateUsers(dispatch, id, data),\r\n  getUsers: () => GetUsers(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Applications);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\GeoView\\GeoView.jsx",["1680","1681","1682","1683","1684","1685"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  FetchAllGeofences,\r\n  AddGeofences,\r\n  UpdateGeofences,\r\n  DelGeofences,\r\n} from \"../../../../../actions/index\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\n\r\nimport MapGL, {\r\n  Marker,\r\n  FullscreenControl,\r\n  NavigationControl,\r\n} from \"@urbica/react-map-gl\";\r\nimport Draw from \"@urbica/react-map-gl-draw\";\r\n// import \"./style.css\";\r\nimport \"./style.css\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nconst GeoView = (props) => {\r\n  console.log(\"Supervisor - Geo View\");\r\n\r\n  const [data, setData] = useState({\r\n    type: \"FeatureCollection\",\r\n    features: [],\r\n  });\r\n  const [map, setMap] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [service, setService] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.fetchAllGeofences();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    // let coords;\r\n    // coords = props.traccarGeofences.map((item) => item.coords);\r\n    // let point = {\r\n    //   id: 140,\r\n    //   type: \"Feature\",\r\n    //   properties: {},\r\n    //   geometry: {\r\n    //     coordinates: [props.geoLng, props.geoLat],\r\n    //     type: \"Point\",\r\n    //   },\r\n    // };\r\n    if (Array.isArray(props.traccarGeofences)) {\r\n      setTimeout(() => {\r\n        let struct = {\r\n          type: \"FeatureCollection\",\r\n          features: [...props.traccarGeofences],\r\n        };\r\n        setData(struct);\r\n      }, 300);\r\n    }\r\n    return;\r\n  }, [props.traccarGeofences]);\r\n\r\n  // useEffect(() => {\r\n  //   if (service != \"\" && name != \"\") {\r\n  //     setMap(true);\r\n  //   } else {\r\n  //     setMap(false);\r\n  //   }\r\n  // }, [service, name]);\r\n\r\n  let MAPBOX_ACCESS_TOKEN =\r\n    \"pk.eyJ1IjoiemFlZW10YXJyYXIzIiwiYSI6ImNrODF6N21kZDAxa2kzb255c3I4bnh5NWsifQ.CqUWmnyMb0nGVwAQYF0d6w\";\r\n  let mapStyle = \"mapbox://styles/zaeemtarrar3/ck824k9kf2i9t1iofd77sbalm\"; // \"mapbox://styles/mapbox/streets-v9\";\r\n\r\n  const getMap = () => {\r\n    if (map) {\r\n      return (\r\n        <MapGL\r\n          initialState={{ data }}\r\n          style={{ width: \"100%\", height: \"500px\" }}\r\n          mapStyle={mapStyle}\r\n          accessToken={MAPBOX_ACCESS_TOKEN}\r\n          latitude={props.lat || 31.4676}\r\n          longitude={props.lng || 74.3209}\r\n          zoom={props.zoomLevel || 10}\r\n        >\r\n          <Draw\r\n            //   onDrawCreate={({ features }) => setFts(features)}\r\n            //   onDrawUpdate={({ features }) => setFts(features)}\r\n            data={data}\r\n            onDrawSelectionChange={(data) => {\r\n              // console.log(\r\n              //   \"Selected : \" + JSON.stringify(data.features[0], null, 2)\r\n              // );\r\n            }}\r\n            onDrawDelete={async (data) => {\r\n              var id = data.features[0].id;\r\n              await props.delGeofences(id);\r\n              await props.fetchAllGeofences();\r\n            }}\r\n            onDrawCreate={async (d) => {\r\n              var limit = d.features.length;\r\n              if (limit - 1 == 0) {\r\n                limit = 0;\r\n              } else {\r\n                limit = limit - 1;\r\n              }\r\n              var last = d.features[limit].geometry.coordinates[0];\r\n              // console.error(last);\r\n              alert(JSON.stringify({ data: last, limit }));\r\n              //props.reset();\r\n              await props.addGeofences(service, name, last);\r\n              await props.fetchAllGeofences();\r\n              setService(\"\");\r\n              setName(\"\");\r\n            }}\r\n            onDrawUpdate={async (d) => {\r\n              var id = d.features[0].id;\r\n              // if (service != 0) {\r\n              var limit = d.features.length;\r\n              if (limit - 1 == 0) {\r\n                limit = 0;\r\n              } else {\r\n                limit = limit - 1;\r\n              }\r\n              var last = d.features[limit].geometry.coordinates[0];\r\n              // alert(last);\r\n              // console.error(last);\r\n              // alert(JSON.stringify({ data: last, limit }));\r\n              //props.reset();\r\n              await props.updateGeofences(id, \"\", name, last);\r\n              props.fetchAllGeofences();\r\n            }}\r\n            onChange={(d) => {}}\r\n          />\r\n          {/* {props.children} */}\r\n          <div className=\"nav\">\r\n            <NavigationControl />\r\n          </div>\r\n          <div className=\"fullscreen\">\r\n            <FullscreenControl />\r\n          </div>\r\n        </MapGL>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  //   const fetchServices = () => {\r\n  //     return props.services.map((item, index) => {\r\n  //       return (\r\n  //         <React.Fragment key={index}>\r\n  //           <option value={item.id}> {item.name} </option>\r\n  //         </React.Fragment>\r\n  //       );\r\n  //     });\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name=\"geoView\"\r\n        title={{\r\n          name: \"Geofence View\",\r\n          symbol: \"globe\",\r\n        }}\r\n      >\r\n        <div className=\"\" onMouseEnter={() => setMap(true)}>\r\n          <br />\r\n          {getMap()}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // user: state.logger,\r\n  traccarGeofences: state.traccarGeofences,\r\n  // geoLat: state.geoLat,\r\n  // geoLng: state.geoLng,\r\n  zoomLevel: state.zoomLevel,\r\n  // services: state.services,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  fetchAllGeofences: () => FetchAllGeofences(dispatch),\r\n  // addGeofences: (id, name, coords) => AddGeofences(dispatch, id, name, coords),\r\n  updateGeofences: (id, serviceId, name, coords) =>\r\n    UpdateGeofences(dispatch, id, serviceId, name, coords),\r\n  delGeofences: (id) => DelGeofences(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeoView);\r\n\r\n// export default Geo;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Geo\\Geo.jsx",["1686","1687","1688","1689","1690","1691","1692"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  FetchAllGeofences,\r\n  AddGeofences,\r\n} from \"./../../../../../actions/index\";\r\nimport Modal from \"./../../../../../containers/Modal/Modal\";\r\n\r\nimport MapGL, {\r\n  Marker,\r\n  FullscreenControl,\r\n  NavigationControl,\r\n} from \"@urbica/react-map-gl\";\r\nimport Draw from \"@urbica/react-map-gl-draw\";\r\n// import \"./style.css\";\r\nimport \"./style.css\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nconst Geo = (props) => {\r\n  console.log(\"Supervisor - Single Geo\");\r\n\r\n  const [data, setData] = useState({\r\n    type: \"FeatureCollection\",\r\n    features: [],\r\n  });\r\n  const [map, setMap] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [service, setService] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.fetchAllGeofences();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    // let coords;\r\n    // coords = props.traccarGeofences.map((item) => item.coords);\r\n    let point = {\r\n      id: 140,\r\n      type: \"Feature\",\r\n      properties: {\r\n        // color: \"red\",\r\n        // backgroundColor: \"red\",\r\n        // background: \"red\",\r\n        // line: \"red\",\r\n        // lineColor: \"red\",\r\n        // size: 100,\r\n        // point: \"red\",\r\n        // width: 100,\r\n        // height: 100,\r\n      },\r\n      geometry: {\r\n        coordinates: [props.geoLng, props.geoLat],\r\n        type: \"Point\",\r\n      },\r\n    };\r\n    if (Array.isArray(props.traccarGeofences)) {\r\n      let struct = {\r\n        type: \"FeatureCollection\",\r\n        features: [...props.traccarGeofences, point],\r\n      };\r\n      setData(struct);\r\n    }\r\n    return;\r\n  }, [props.traccarGeofences]);\r\n\r\n  // useEffect(() => {\r\n  //   if (service != \"\" && name != \"\") {\r\n  //     setMap(true);\r\n  //   } else {\r\n  //     setMap(false);\r\n  //   }\r\n  // }, [service, name]);\r\n\r\n  let MAPBOX_ACCESS_TOKEN =\r\n    \"pk.eyJ1IjoiemFlZW10YXJyYXIzIiwiYSI6ImNrODF6N21kZDAxa2kzb255c3I4bnh5NWsifQ.CqUWmnyMb0nGVwAQYF0d6w\";\r\n  let mapStyle = \"mapbox://styles/zaeemtarrar3/ck824k9kf2i9t1iofd77sbalm\"; // \"mapbox://styles/mapbox/streets-v9\";\r\n\r\n  const getMap = () => {\r\n    if (map) {\r\n      return (\r\n        <MapGL\r\n          initialState={{ data }}\r\n          style={{ width: \"100%\", height: \"500px\" }}\r\n          mapStyle={mapStyle}\r\n          accessToken={MAPBOX_ACCESS_TOKEN}\r\n          latitude={props.lat || 31.4676}\r\n          longitude={props.lng || 74.3209}\r\n          zoom={props.zoomLevel || 10}\r\n        >\r\n          <Draw\r\n            //   onDrawCreate={({ features }) => setFts(features)}\r\n            //   onDrawUpdate={({ features }) => setFts(features)}\r\n            data={data}\r\n            onDrawSelectionChange={(data) => {\r\n              console.log(\r\n                \"Selected : \" + JSON.stringify(data.features[0], null, 2)\r\n              );\r\n            }}\r\n            onDrawDelete={async (data) => {\r\n              // var id = data.features[0].id;\r\n              // await deleteGeofences(\"admin\", \"L@s3rjet9045\", id, async (data) => {\r\n              //   // alert(\"Deleted !\");\r\n              //   await fetchPoints();\r\n              //   status = \"del\";\r\n              // });\r\n            }}\r\n            onDrawCreate={async (d) => {\r\n              var limit = d.features.length;\r\n              if (limit - 1 == 0) {\r\n                limit = 0;\r\n              } else {\r\n                limit = limit - 1;\r\n              }\r\n              var last = d.features[limit].geometry.coordinates[0];\r\n              // console.error(last);\r\n              alert(JSON.stringify({ data: last, limit }));\r\n              //props.reset();\r\n              await props.addGeofences(service, name, last);\r\n              await props.fetchAllGeofences();\r\n              setService(\"\");\r\n              setName(\"\");\r\n            }}\r\n            onDrawUpdate={(d) => {\r\n              // var id = d.features[0].id;\r\n              // // if (service != 0) {\r\n              // var limit = d.features.length;\r\n              // if (limit - 1 == 0) {\r\n              //   limit = 0;\r\n              // } else {\r\n              //   limit = limit - 1;\r\n              // }\r\n              // var last = d.features[limit].geometry.coordinates[0];\r\n              // alert(last);\r\n              //   // console.error(last);\r\n              //   // alert(JSON.stringify({ data: last, limit }));\r\n              //   //props.reset();\r\n              // updateGeofences(\r\n              //   id,\r\n              //   \"admin\",\r\n              //   \"L@s3rjet9045\",\r\n              //   service,\r\n              //   name,\r\n              //   last,\r\n              //   async () => {\r\n              //     // alert(JSON.stringify(last));\r\n              //     await fetchPoints();\r\n              //     status = \"add\";\r\n              //     setService(0);\r\n              //     setMapShow(false);\r\n              //   }\r\n              // );\r\n              // }\r\n            }}\r\n            onChange={(d) => {}}\r\n          />\r\n          {/* {props.children} */}\r\n          <div className=\"nav\">\r\n            <NavigationControl />\r\n          </div>\r\n          <div className=\"fullscreen\">\r\n            <FullscreenControl />\r\n          </div>\r\n        </MapGL>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  //   const fetchServices = () => {\r\n  //     return props.services.map((item, index) => {\r\n  //       return (\r\n  //         <React.Fragment key={index}>\r\n  //           <option value={item.id}> {item.name} </option>\r\n  //         </React.Fragment>\r\n  //       );\r\n  //     });\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name=\"geo\"\r\n        title={{\r\n          name: \"Geofence View \" + props.geoLat + \":\" + props.geoLng,\r\n          symbol: \"globe\",\r\n        }}\r\n      >\r\n        <div className=\"\" onMouseEnter={() => setMap(true)}>\r\n          <br />\r\n          {getMap()}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // user: state.logger,\r\n  traccarGeofences: state.traccarGeofences,\r\n  geoLat: state.geoLat,\r\n  geoLng: state.geoLng,\r\n  zoomLevel: state.zoomLevel,\r\n  // services: state.services,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // fetchAllGeofences: () => FetchAllGeofences(dispatch),\r\n  // addGeofences: (id, name, coords) => AddGeofences(dispatch, id, name, coords),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Geo);\r\n\r\n// export default Geo;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Profile\\Profile.jsx",["1693","1694","1695","1696"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UpdateUsers,\r\n  UserLogout,\r\n  UserLogin,\r\n} from \"./../../../../../actions/index\";\r\n\r\nconst Profile = (props) => {\r\n  console.log(\"Supervisor - Profile\");\r\n\r\n  const [id, setId] = useState(props.user.id || 0);\r\n  const [firstname, setFirstname] = useState(props.user.firstname || \"\");\r\n  const [lastname, setLastname] = useState(props.user.lastname || \"\");\r\n  const [contact, setContact] = useState(props.user.contact || \"\");\r\n  const [email, setEmail] = useState(props.user.email || \"\");\r\n  const [cnic, setCnic] = useState(props.user.cnic || \"\");\r\n  const [password, setPassword] = useState(props.user.password || \"\");\r\n  const [address, setAddress] = useState(props.user.address || \"\");\r\n  // const [name,setName] = useState('');\r\n  // const [name,setName] = useState('');\r\n\r\n  useEffect(() => {\r\n    setFirstname(props.user.firstname || \"\");\r\n    setLastname(props.user.lastname || \"\");\r\n    setCnic(props.user.cnic || \"\");\r\n    setContact(props.user.contact || \"\");\r\n    setEmail(props.user.email || \"\");\r\n    setPassword(props.user.password || \"\");\r\n    // setAddress(props.user.address || \"\");\r\n    return;\r\n  }, [props.user]);\r\n\r\n  const update = async () => {\r\n    let data = {\r\n      firstname,\r\n      lastname,\r\n      contact,\r\n      cnic,\r\n      email,\r\n      password,\r\n      address,\r\n      userId: id,\r\n    };\r\n    console.log(\"Profile: \", data);\r\n    await props.updateUser(id, data);\r\n    setFirstname(props.user.firstname || \"\");\r\n    setLastname(props.user.lastname || \"\");\r\n    setCnic(props.user.cnic || \"\");\r\n    setContact(props.user.contact || \"\");\r\n    setEmail(props.user.email || \"\");\r\n    setPassword(props.user.password || \"\");\r\n    // setAddress(props.user.address || \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"profile\"}\r\n        title={{ name: \"User Profile\", symbol: \"user\" }}\r\n      >\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" First Name \"\r\n            value={firstname}\r\n            onChange={(e) => setFirstname(e.target.value)}\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" Last Name \"\r\n            value={lastname}\r\n            onChange={(e) => setLastname(e.target.value)}\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" CNIC \"\r\n            value={cnic}\r\n            onChange={(e) => setCnic(e.target.value)}\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" Contact \"\r\n            value={contact}\r\n            onChange={(e) => setContact(e.target.value)}\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" Email \"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <br />\r\n          {/* <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" Address \"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          />\r\n          <br /> */}\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" Password \"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <br />\r\n          <div>\r\n            <button className=\"btn btn-primary\" onClick={update}>\r\n              {\" \"}\r\n              Update{\" \"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateUser: (id, data) => UpdateUsers(dispatch, id, data),\r\n  // login: (data) => UserLogin(dispatch, data),\r\n  // logout: () => UserLogout(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\ResponderView\\ResponderView.jsx",["1697","1698","1699","1700","1701","1702","1703"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetAllResponder,\r\n  DelTraccarResponders,\r\n} from \"./../../../../../actions/index\";\r\nimport Create from \"./Create/Create\";\r\n\r\nconst ResponderView = (props) => {\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const init = async () => {\r\n    await props.getResponders();\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n    return;\r\n  }, []);\r\n\r\n  const delResponder = async (id) => {\r\n    await props.delResponder(id);\r\n    await init();\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    return data.map((item, index) => {\r\n      let color = \"transparent\";\r\n      if (item.status == \"online\") {\r\n        color = \"lightgreen\";\r\n      } else if (item.status == \"offline\") {\r\n        color = \"pink\";\r\n      } else if (item.status == \"unknown\") {\r\n        color = \"lightyellow\";\r\n      } else {\r\n        color = \"transparent\";\r\n      }\r\n      if (item.db != null) {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <tr style={{ background: color }}>\r\n              <td> {item.id} </td>\r\n              <td>\r\n                {\" \"}\r\n                {item.db.firstname + \" \" + item.db.lastname} ( {item.name} ){\" \"}\r\n              </td>\r\n              <td> {item.db.cnic} </td>\r\n              <td> {item.db.contact} </td>\r\n              <td> {item.db.email} </td>\r\n              <td> {item.db.password} </td>\r\n              <td> {item.lat} </td>\r\n              <td> {item.lng} </td>\r\n              <td> {item.db.address} </td>\r\n              <td> {item.db.userActivation} </td>\r\n              <td> {item.db.userAssignment} </td>\r\n              <td> {item.db.serviceId} </td>\r\n              <td> {item.db.subscriptionId} </td>\r\n              <td> {item.db.deviceId} </td>\r\n              <td> {item.db.custId} </td>\r\n              <td> {item.db.image} </td>\r\n              <td> {item.db.trackingId} </td>\r\n              <td> {item.db.uniqueId} </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => props.delTraccarResponders(item.id)}\r\n                >\r\n                  <i className=\"fa fa-pencil\"></i>\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => props.delTraccarResponders(item.id)}\r\n                >\r\n                  <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n              </td>\r\n              {/* <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => edit(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => del(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                  </button>\r\n                </td> */}\r\n            </tr>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <tr style={{ background: \"#eee\" }}>\r\n              <td> {item.id} </td>\r\n              <td> ( {item.name} ) </td>\r\n              <td> </td>\r\n              <td> {item.contact} </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td></td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td></td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td>\r\n                {/* <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => delResponder(item.id)}\r\n                >\r\n                  <i className=\"fa fa-trash-o\"></i>\r\n                </button> */}\r\n              </td>\r\n              <td></td>\r\n              {/* <td> </td> */}\r\n              {/* <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => edit(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => del(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                  </button>\r\n                </td> */}\r\n            </tr>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> CNIC </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Password </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Address </th>\r\n                <th> User Activation </th>\r\n                <th> User Assignment </th>\r\n                <th> Service </th>\r\n                <th> Subscription </th>\r\n                <th> Device </th>\r\n                <th> Parent </th>\r\n                <th> Image </th>\r\n                <th> Tracking Id </th>\r\n                <th> Unique </th>\r\n                <th> - </th>\r\n                {/* <th> - </th>\r\n                    <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getPage = () => {\r\n    if (page == \"main\") {\r\n      return (\r\n        <>{getTable([...props.online, ...props.offline, ...props.unknown])}</>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <Create setPage={setPage} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"responderView\"}\r\n        title={{ name: \"Responders\", symbol: \"car\" }}\r\n      >\r\n        {page == \"main\" ? (\r\n          <div>\r\n            <button className=\"btn btn-primary\" onClick={() => setPage(\"add\")}>\r\n              Create\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <button className=\"btn btn-primary\" onClick={() => setPage(\"main\")}>\r\n              Back\r\n            </button>\r\n          </div>\r\n        )}\r\n        <br />\r\n        {getPage()}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // customers: state.customers,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getResponders: () => GetAllResponder(dispatch),\r\n  delTraccarResponders: (id) => DelTraccarResponders(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponderView);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Chatbox\\Chatbox.jsx",["1704","1705","1706","1707","1708","1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719","1720"],"import React, { useState, useEffect, useLayoutEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { GetTraccarGroups } from \"../../../../../actions/index\";\r\nimport Msg from \"./Msg\";\r\nimport JsSIP from \"jssip\";\r\nimport { Beep3, Beep2, Beep1, Beep4 } from \"./../../../../../Beeper/Beeper\";\r\nimport Caller from \"../Caller/Caller\";\r\n\r\nconst Chatbox = (props) => {\r\n  // console.error(\"Supervisor - Chat Box\");\r\n\r\n  const chatti = useRef(\"chatti\");\r\n\r\n  // const [text, setText] = useState(\"\"); // saving msg\r\n  const [num, setNum] = useState(\"1002\"); // number to send msg on\r\n  const [open, setOpen] = useState(true);\r\n  // const [callState, setCallState] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [localSession, setLocalSession] = useState(\"\");\r\n  const [ans, setAns] = useState(false);\r\n  const [answerCallDisplay, setAnswerCallDisplay] = useState(\"none\");\r\n  const [ringer, setRinger] = useState(0);\r\n  const [msgs, setMsgs] = useState([\r\n    // {\r\n    //   type: \"r\",\r\n    //   msg: \"Hello world !\",\r\n    // },\r\n    // {\r\n    //   type: \"s\",\r\n    //   msg: \"No ... Hello Zaeem !\",\r\n    // },\r\n  ]);\r\n\r\n  const getIcon = () => {\r\n    if (ringer == 0) {\r\n      return \"phone\";\r\n    } else if (ringer == 1) {\r\n      return \"volume-control-phone\";\r\n    } else if (ringer == 2) {\r\n      return \"tty\";\r\n    } else {\r\n      return \"phone\";\r\n    }\r\n  };\r\n\r\n  const send = async () => {\r\n    await send_message();\r\n    console.error(\"Msg: \", msg);\r\n    await setMsgs((item) => {\r\n      return [\r\n        ...item,\r\n        {\r\n          type: \"s\",\r\n          msg: msg,\r\n        },\r\n      ];\r\n    });\r\n    setMsg(\"\");\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    down();\r\n    return;\r\n  }, [msgs]);\r\n\r\n  useEffect(() => {\r\n    down();\r\n    return;\r\n  }, [msgs]);\r\n\r\n  const down = () => {\r\n    chatti.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n      inline: \"nearest\",\r\n    });\r\n\r\n    console.error(\"Going Down\");\r\n  };\r\n\r\n  //   const ring = async () => {\r\n  //     await Beep1();\r\n  //   };\r\n\r\n  const Call = () => {\r\n    if (ringer == 0) {\r\n      callAsterisk(num);\r\n    } else {\r\n      dropCall(localSession);\r\n    }\r\n  };\r\n\r\n  //   let loop;\r\n\r\n  //   useEffect(() => {\r\n  //     if (ringer == false) {\r\n  //       loop = setInterval(() => {\r\n  //         if (ringer == true) {\r\n  //           ring();\r\n  //         }\r\n  //       }, 300);\r\n  //     } else {\r\n  //       clearInterval(loop);\r\n  //     }\r\n  //     return;\r\n  //   }, [ringer]);\r\n\r\n  const recieve = async (body) => {\r\n    console.error(\"Body: \", body);\r\n    await setMsgs((item) => {\r\n      return [\r\n        ...item,\r\n        {\r\n          type: \"r\",\r\n          msg: body.toString(),\r\n        },\r\n      ];\r\n    });\r\n  };\r\n\r\n  const recievedMsgs = () => {\r\n    return msgs.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          {item.type == \"r\" ? (\r\n            <Msg direction=\"left\" text={item.msg} />\r\n          ) : (\r\n            <Msg direction=\"right\" text={item.msg} />\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Caller Tune baby\r\n   **/\r\n\r\n  var socket = new JsSIP.WebSocketInterface(\"wss://ss.dextrologix.com:8089/ws\");\r\n  var configuration = {\r\n    sockets: socket,\r\n    uri: \"6002@ss.dextrologix.com\",\r\n    password: \"60021234\",\r\n    use_preloaded_route: true,\r\n  };\r\n  var remoteAudio = new window.Audio();\r\n  remoteAudio.autoplay = true;\r\n\r\n  const mediaSource = new MediaSource();\r\n\r\n  var selfView = document.getElementById(\"selfView\");\r\n  var remoteView = document.getElementById(\"remoteView\");\r\n\r\n  var ua = new JsSIP.UA(configuration);\r\n\r\n  ua.on(\"connected\", function (e) {\r\n    // console.error(\"Socket Connected.\");\r\n  });\r\n\r\n  ua.on(\"disconnected\", function (e) {\r\n    // console.error(\"Socket Closed. \");\r\n  });\r\n\r\n  ua.on(\"registered\", function (e) {\r\n    console.error(\"Registered.\");\r\n  });\r\n  ua.on(\"unregistered\", function (e) {\r\n    console.error(\"Unregistered.\");\r\n  });\r\n  ua.on(\"registrationFailed\", function (e) {\r\n    // console.error(\"Registeration Failed\");\r\n  });\r\n\r\n  ua.on(\"newMessage\", function (e) {\r\n    // console.error(\"new Message\", e);\r\n    if (typeof e.request.body === \"string\") {\r\n      if (e.originator === \"remote\") {\r\n        recieve(e.request.body);\r\n        // setMsg([...msg, e.request.body]);\r\n        // if (!showChat) {\r\n        //   setShowChat(true);\r\n        // }\r\n      } else if (e.originator === \"local\") {\r\n        // local msg\r\n        // recieve(e.request.body);\r\n      }\r\n    }\r\n  });\r\n\r\n  let session;\r\n\r\n  if (localSession) {\r\n    console.error(\"Local Session: \", localSession);\r\n    if (localSession.status === 8) {\r\n      setAnswerCallDisplay(\"none\");\r\n      setLocalSession(\"\");\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.error(\"Sessions: \", session);\r\n  //   return;\r\n  // }, [session]);\r\n\r\n  // var options = {\r\n  //   eventHandlers: {\r\n  //     canceled: function (data) {\r\n  //       console.error(\"call cancelled\", data);\r\n  //     },\r\n  //     failed: function (e) {\r\n  //       console.log(\"call failed with cause: \" + e.cause);\r\n  //     },\r\n  //     ended: function (e) {\r\n  //       console.log(\"call ended with cause: \" + e.cause);\r\n  //     },\r\n  //     confirmed: function (e) {\r\n  //       console.log(\"call confirmed\");\r\n  //     },\r\n  //   },\r\n  // };\r\n\r\n  ua.on(\"newRTCSession\", function (ev) {\r\n    console.error(\"ev event: \", ev);\r\n    var newSession = ev.session;\r\n    // if (session) {\r\n    //   // hangup any existing call\r\n    //   session.terminate();\r\n    // }\r\n    session = newSession;\r\n    var completeSession = async function () {\r\n      // console.error(\"session trunacated\");\r\n      // session.terminate();\r\n      session = null;\r\n      //   setNewCall(false);\r\n      //   setAcceptCall(false);\r\n      await setRinger(0);\r\n    };\r\n\r\n    if (session.direction === \"outgoing\") {\r\n      console.error(\"stream outgoing  -------->\");\r\n      setLocalSession(session);\r\n      session.on(\"connecting\", async function () {\r\n        console.error(\"CONNECT\");\r\n        await setRinger(1);\r\n      });\r\n      session.on(\"peerconnection\", function (e) {\r\n        console.error(\"1accepted\");\r\n      });\r\n      session.on(\"ended\", completeSession);\r\n      session.on(\"failed\", completeSession);\r\n      session.on(\"accepted\", async function (e) {\r\n        console.error(\"accepted\");\r\n        await setRinger(2);\r\n      });\r\n      session.on(\"confirmed\", function (e) {\r\n        console.error(\"CONFIRM STREAM\");\r\n      });\r\n    }\r\n\r\n    if (session.direction === \"incoming\") {\r\n      console.error(\"stream incoming  -------->\");\r\n\r\n      setAnswerCallDisplay(\"\");\r\n      // console.error(session);\r\n      setLocalSession(session);\r\n      session.on(\"ended\", function () {\r\n        console.error(\"Call Ended before answering\");\r\n      });\r\n      session.on(\"peerconnection\", function (e) {\r\n        console.log(\"1accepted\");\r\n        add_stream();\r\n      });\r\n      session.on(\"failed\", completeSession);\r\n      session.on(\"canceled\", function () {\r\n        console.error(\"Call Cancelled before answering \");\r\n      });\r\n      var completeSession = async function () {\r\n        // console.error(\"session trunacated\");\r\n        await setRinger(0);\r\n        if (session) {\r\n          // hangup any existing call\r\n          session.terminate();\r\n          setAnswerCallDisplay(\"none\");\r\n        }\r\n        setLocalSession(session);\r\n      };\r\n    }\r\n  });\r\n\r\n  // console.error(\"JsSIP.IncomingMessage: \", JsSIP.WebSocketInterface);\r\n  // var name = new jssip.nameaddrheader(\"1003@ss.dextrologix.com\");\r\n  // console.error(\"Name: \", name);\r\n  const dropCall = (session) => {\r\n    if (session) {\r\n      // hangup any existing call\r\n      session.terminate();\r\n      setAnswerCallDisplay(\"none\");\r\n    }\r\n    setLocalSession(session);\r\n  };\r\n\r\n  const answerCall = (session) => {\r\n    var options = {\r\n      mediaConstraints: { audio: true, video: true },\r\n      // pcConfig: {\r\n      //   rtcpMuxPolicy: \"require\",\r\n      //   iceServers: [],\r\n      // },\r\n    };\r\n    session.answer(options);\r\n    var completeSession = async function () {\r\n      // console.error(\"session trunacated\");\r\n      session = null;\r\n      setAnswerCallDisplay(\"none\");\r\n      //   setNewCall(false);\r\n      //   setAcceptCall(false);\r\n      await setRinger(0);\r\n    };\r\n\r\n    //   setNewCall(true);\r\n    // if (acceptCall) {\r\n    console.error(\"call ansered\");\r\n    // }\r\n    session.on(\"connecting\", async function () {\r\n      console.error(\"CONNECT\");\r\n      await setRinger(1);\r\n    });\r\n    session.on(\"peerconnection\", function (e) {\r\n      console.error(\"1accepted\");\r\n      // add_stream();\r\n    });\r\n    session.on(\"ended\", completeSession);\r\n    session.on(\"failed\", completeSession);\r\n    session.on(\"accepted\", async function (e) {\r\n      // setNewCall(false);\r\n      console.error(\"accepted\");\r\n      await setRinger(2);\r\n    });\r\n    session.on(\"confirmed\", function (e) {\r\n      console.error(\"CONFIRM STREAM\");\r\n    });\r\n  };\r\n  // console.error(\"Incoming Call\");\r\n  // if (acceptCall) {\r\n\r\n  // }\r\n\r\n  ua.start();\r\n\r\n  if (socket.readyState === WebSocket.CLOSED) {\r\n    console.error(\"closed\");\r\n  }\r\n\r\n  // Register callbacks to desired call events\r\n  var eventHandlers = {\r\n    progress: function (e) {\r\n      console.error(\"call is in progress\");\r\n    },\r\n    failed: function (e) {\r\n      console.error(\"call failed with cause: \", e.cause);\r\n    },\r\n    ended: function (e) {\r\n      console.error(\"call ended with cause: \", e.cause);\r\n    },\r\n    confirmed: function (e) {\r\n      console.error(\"call confirmed\");\r\n    },\r\n    onData: function (data) {\r\n      console.error(\"On Dataaaaaa:\", data);\r\n    },\r\n  };\r\n\r\n  function callAsterisk(numTels) {\r\n    var options = {\r\n      eventHandlers: {\r\n        onData: function (data) {\r\n          console.error(data);\r\n        },\r\n        failed: function (e) {\r\n          console.log(\"call failed with cause: \" + e.cause);\r\n        },\r\n        ended: function (e) {\r\n          console.log(\"call ended with cause: \" + e.cause);\r\n        },\r\n        confirmed: function (e) {\r\n          console.log(\"call confirmed\");\r\n        },\r\n      },\r\n    };\r\n\r\n    var numTel = numTels.toString();\r\n    // var num = \"200\";\r\n    console.error(numTel);\r\n    ua.call(numTel, options);\r\n    add_stream();\r\n  }\r\n\r\n  function add_stream() {\r\n    session.connection.addEventListener(\"addstream\", function (e) {\r\n      remoteAudio.srcObject = e.stream;\r\n      // remoteView.srcObject = e.stream;\r\n      // selfView.srcObject = session.connection.getLocalStreams()[0];\r\n    });\r\n  }\r\n\r\n  const send_message = async () => {\r\n    // console.error(text);\r\n    var num1 = num.toString();\r\n    var eventHandlers = {\r\n      succeeded: function (e) {\r\n        console.error(\"successfull Msg Sent\");\r\n      },\r\n      failed: function (e) {\r\n        console.error(e);\r\n        Beep4();\r\n        console.error(\"Something Went Wrong\");\r\n      },\r\n    };\r\n\r\n    var options = {\r\n      eventHandlers: eventHandlers,\r\n    };\r\n    await ua.sendMessage(num1, msg, options);\r\n  };\r\n\r\n  /**\r\n   * Caller Tune Baby\r\n   */\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: open ? \"60vh\" : \"95vh\",\r\n          left: \"80vw\",\r\n          zIndex: 20,\r\n          width: \"20vw\",\r\n          height: \"40vh\",\r\n          background: \"white\",\r\n          color: \"#369\",\r\n          border: \"1px solid #fff\",\r\n        }}\r\n      >\r\n        {/* <div style={{ height: \"5vh\", verticalAlign: \"middle\" }}>\r\n          <div\r\n            style={{\r\n              //   padding: \"10px\",\r\n              background: \"#369\",\r\n              color: \"#fff\",\r\n              border: \"1px solid #fff\",\r\n              fontSize: \"16px\",\r\n              height: \"5vh\",\r\n              verticalAlign: \"middle\",\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-comments\"></i> &nbsp; Bilal Bhatti\r\n            </span>\r\n          </div>\r\n        </div> */}\r\n        <div\r\n          style={{\r\n            marginTop: \"0px\",\r\n            // marginBottom: \"5vh\",\r\n            overflow: \"auto\",\r\n            height: \"40vh\",\r\n            verticalAlign: \"down\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: \"5vh\",\r\n              padding: \"1.5vh\",\r\n              background: \"#369\",\r\n              color: \"#fff\",\r\n              verticalAlign: \"middle\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              zIndex: 30,\r\n            }}\r\n            className=\"btn-block\"\r\n          >\r\n            <i className=\"fa fa-comments\" onClick={down}></i>\r\n            &nbsp; Bilal Bhatti\r\n            <span className=\"pull-right\">\r\n              {\" \"}\r\n              <i\r\n                style={{\r\n                  display: answerCallDisplay,\r\n                  color: \"green\",\r\n                  fontSize: \"18px\",\r\n                  textShadow: \"0px 0px 2px #fff\",\r\n                  paddingRight: 10,\r\n                }}\r\n                onClick={() => answerCall(localSession)}\r\n                className={\"fa fa-phone\"}\r\n              ></i>\r\n              <i\r\n                style={{\r\n                  display: answerCallDisplay,\r\n                  color: \"red\",\r\n                  fontSize: \"18px\",\r\n                  paddingRight: 10,\r\n                  textShadow: \"0px 0px 2px #fff\",\r\n                }}\r\n                onClick={() => dropCall(localSession)}\r\n                className={\"fa fa-phone\"}\r\n              ></i>\r\n              <i\r\n                style={{\r\n                  color: \"white\",\r\n                  fontSize: \"18px\",\r\n                  textShadow: \"0px 0px 2px #fff\",\r\n                }}\r\n                onClick={() => Call()}\r\n                className={\"fa fa-\" + getIcon()}\r\n              ></i>{\" \"}\r\n              &nbsp;{\" \"}\r\n              <i\r\n                style={{\r\n                  color: \"white\",\r\n                  fontSize: \"18px\",\r\n                  textShadow: \"0px 0px 2px #fff\",\r\n                }}\r\n                className=\"fa fa-minus\"\r\n                onClick={() => setOpen((item) => !item)}\r\n              ></i>\r\n            </span>\r\n            <div className=\"clearfix\"></div>\r\n          </div>\r\n          <div\r\n            ref={chatti}\r\n            style={{ marginTop: \"5vh\", marginBottom: \"5vh\", overflow: \"auto\" }}\r\n          >\r\n            {recievedMsgs()}\r\n          </div>\r\n          <div\r\n            style={{\r\n              height: \"5vh\",\r\n              //   padding: \"1.5vh\",\r\n              background: \"#369\",\r\n              color: \"#fff\",\r\n              verticalAlign: \"middle\",\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              left: 0,\r\n              zIndex: 30,\r\n            }}\r\n            className=\"btn-block\"\r\n          >\r\n            <input\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"5vh\",\r\n                border: 0,\r\n                outline: 0,\r\n                background: \"#eee\",\r\n                color: \"#369\",\r\n                padding: \"1.5vh\",\r\n                borderTop: \"2px solid #369\",\r\n              }}\r\n              value={msg}\r\n              type=\"text\"\r\n              className=\"\"\r\n              placeholder=\" Type Here ... \"\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  send();\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                setMsg(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chatbox);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Customers\\Customers.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Supervisor\\Supervisor.jsx",["1721","1722","1723","1724","1725"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\TopBar\\TopBar.jsx",["1726","1727","1728","1729","1730","1731","1732","1733","1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1751","1752","1753","1754","1755","1756"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserLogout, changeZoom } from \"../../../../../actions/index\";\r\nimport TopMenu from \"../../../../../containers/TobMenu/TopMenu\";\r\n\r\nconst TopBar = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel - Top Menu\");\r\n\r\n  const setSiders = (data) => {\r\n    if (data == \"left\") {\r\n      let leftPin = localStorage.getItem(\"leftPin\");\r\n      if (leftPin) {\r\n        let newLeft = leftPin == \"false\" ? true : false;\r\n        // console.error(\"L:\", newLeft);\r\n        localStorage.setItem(\"leftPin\", newLeft);\r\n      } else {\r\n        let newLeft = true;\r\n        localStorage.setItem(\"leftPin\", newLeft);\r\n      }\r\n    } else if (data == \"right\") {\r\n      let rightPin = localStorage.getItem(\"rightPin\");\r\n      if (rightPin) {\r\n        let newRight = rightPin == \"false\" ? true : false;\r\n        localStorage.setItem(\"rightPin\", newRight);\r\n      } else {\r\n        let newRight = true;\r\n        localStorage.setItem(\"rightPin\", newRight);\r\n      }\r\n    } else {\r\n    }\r\n    window.open(\"http://localhost:3001/\", \"_self\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopMenu title=\"Admin Panel\">\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n          <li>\r\n            <a>\r\n              <span data-toggle=\"modal\" /* data-target=\"#logs\" title=\"Logs\" */>\r\n                <i\r\n                  className=\"fa fa-plus\"\r\n                  title=\"Zoom In\"\r\n                  onClick={() => props.changeZoom(props.zoomLevel - 1)}\r\n                ></i>\r\n                &nbsp;\r\n                <i\r\n                  className=\"fa fa-minus\"\r\n                  title=\"Zoom Out\"\r\n                  onClick={() => props.changeZoom(props.zoomLevel + 1)}\r\n                ></i>\r\n                &nbsp; Zoom &nbsp;\r\n                <span className=\"badge inverse-theme\"> {props.zoomLevel} </span>\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a>\r\n              <span data-toggle=\"modal\" /* data-target=\"#logs\" title=\"Logs\" */>\r\n                <i\r\n                  className=\"fa fa-arrow-left\"\r\n                  title=\"Left Drawer\"\r\n                  onDoubleClick={() => setSiders(\"left\")}\r\n                  onClick={() => props.setLeft((item) => !item)}\r\n                ></i>\r\n                &nbsp;\r\n                <i\r\n                  className=\"fa fa-arrow-right\"\r\n                  title=\"Right Drawer\"\r\n                  onDoubleClick={() => setSiders(\"right\")}\r\n                  onClick={() => props.setRight((item) => !item)}\r\n                ></i>\r\n                &nbsp; Drawers\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle themer\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-bar-chart\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              Reports &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#responderReports\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Reponder Reports</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#operatorReports\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Operator Reports</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#supervisorReports\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Supervisor Reports</a>\r\n              </li>\r\n              <li data-toggle=\"modal\" data-target=\"#logs\" className=\"themer\">\r\n                <a> Panic Logs </a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#eventLogs\"\r\n                className=\"themer\"\r\n              >\r\n                <a>\r\n                  Event Logs &nbsp;\r\n                  <span>( {props.eventLogs.length} )</span>\r\n                </a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#chatLogs\"\r\n                className=\"themer\"\r\n              >\r\n                <a>\r\n                  Chat Logs &nbsp;\r\n                  <span>( {props.chatLogs.length} )</span>\r\n                </a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#notificationLogs\"\r\n                className=\"themer\"\r\n              >\r\n                <a>\r\n                  Notification Logs &nbsp;\r\n                  <span>( {props.notificationLogs.length} )</span>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          {/* <li>\r\n            <a>\r\n              <span data-toggle=\"modal\" data-target=\"#logs\" title=\"Logs\">\r\n                <i className=\"fa fa-list-alt\"></i> Logs\r\n              </span>\r\n            </a>\r\n          </li> */}\r\n          <li className=\"themer\">\r\n            <a>\r\n              <span\r\n                data-toggle=\"modal\"\r\n                data-target=\"#priorities\"\r\n                title=\"Priorities\"\r\n              >\r\n                <i className=\"fa fa-star\"></i> Priorities\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li className=\"themer\">\r\n            <a>\r\n              <span data-toggle=\"modal\" data-target=\"#natures\" title=\"Natures\">\r\n                <i className=\"fa fa-leaf\"></i> Natures\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li className=\"themer\">\r\n            <a>\r\n              <span\r\n                data-toggle=\"modal\"\r\n                data-target=\"#services\"\r\n                title=\"Services\"\r\n              >\r\n                <i className=\"fa fa-tags\"></i> Services\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li className=\"themer\">\r\n            <a>\r\n              <span\r\n                data-toggle=\"modal\"\r\n                data-target=\"#applications\"\r\n                title=\"Applications\"\r\n              >\r\n                <i className=\"fa fa-file\"></i> Applications\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li className=\"themer\">\r\n            <a>\r\n              <span\r\n                data-toggle=\"modal\"\r\n                data-target=\"#subscriptions\"\r\n                title=\"Subscriptions\"\r\n              >\r\n                <i className=\"fa fa-tag\"></i> Subscriptions\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle themer\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-globe\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              Geofences &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#geofence\"\r\n                className=\"themer\"\r\n              >\r\n                <a> Create New Geofence </a>\r\n              </li>\r\n              <li data-toggle=\"modal\" data-target=\"#geoView\" className=\"themer\">\r\n                <a> View Geofences </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"themer\">\r\n            <a>\r\n              <span\r\n                data-toggle=\"modal\"\r\n                data-target=\"#groups\"\r\n                title=\"Groups\"\r\n                className=\"themer\"\r\n              >\r\n                <i className=\"fa fa-cubes\"></i> Groups\r\n              </span>\r\n            </a>\r\n          </li>\r\n\r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-users\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              Users &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#supervisor\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Supervisors</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#operator\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Operators</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#customers\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Customers</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#responderView\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Responders</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-user\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              {props.user.firstname.toUpperCase()} &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li data-toggle=\"modal\" data-target=\"#profile\">\r\n                <a>Profile</a>\r\n              </li>\r\n              <li>\r\n                <a onClick={props.logout}>Logout</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </TopMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  zoomLevel: state.zoomLevel,\r\n  notificationLogs: state.notificationLogs,\r\n  eventLogs: state.eventLogs,\r\n  chatLogs: state.chatLogs,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Users\\Users.jsx",["1757","1758","1759"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Wall\\Wall.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Operator\\Operator.jsx",["1760","1761","1762","1763","1764"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Geofence\\Geofence.jsx",["1765","1766","1767"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Natures\\Natures.jsx",["1768","1769","1770","1771"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Priorities\\Priorities.jsx",["1772","1773","1774","1775","1776"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Subscriptions\\Subscriptions.jsx",["1777","1778","1779","1780"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Groups\\Groups.jsx",["1781","1782","1783"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport List from \"./List/List\";\r\nimport { GetTraccarGroups, UserLogout } from \"../../../../../actions/index\";\r\nimport Create from \"./Create/Create\";\r\n\r\nconst Groups = (props) => {\r\n  console.log(\"Supervisor - Groups\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // props.getTraccarGroups();\r\n    return;\r\n  }, []);\r\n\r\n  const selectButton = () => {\r\n    if (page == \"main\") {\r\n      return (\r\n        <button className=\"btn btn-primary\" onClick={() => setPage(\"add\")}>\r\n          Create\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            setId(\"\");\r\n            setPage(\"main\");\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const selectSection = () => {\r\n    if (page == \"main\") {\r\n      return <List groups={props.groups} setPage={setPage} setId={setId} />;\r\n    } else {\r\n      return <Create setPage={setPage} id={id} setId={setId} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={false}\r\n        name={\"groups\"}\r\n        title={{ name: \"Groups\", symbol: \"cubes\" }}\r\n      >\r\n        <div>{selectButton()}</div>\r\n        <br />\r\n        <div>{selectSection()}</div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  // groups: state.groups,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Responders\\Responders.jsx",["1784","1785","1786","1787","1788","1789","1790","1791","1792","1793","1794","1795","1796","1797","1798","1799","1800","1801","1802","1803","1804","1805","1806","1807","1808"],"import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetAllResponder,\r\n  GetCenter,\r\n} from \"./../../../../../actions/index\";\r\nimport Reports from \"../Reports/Reports\";\r\n// import Plot from \"react-plotly.js\";\r\nimport BarChart from \"react-bar-chart\";\r\nimport _ from \"lodash\";\r\nimport HSBar from \"react-horizontal-stacked-bar-chart\";\r\n\r\nconst Responders = (props) => {\r\n  console.log(\"Supervisor - Responder Widget\");\r\n\r\n  const OperatorWidget = useRef(\"\");\r\n  const lineGraphWidget = useRef(\"\");\r\n  const onlinRespWidget = useRef(\"\");\r\n  const offlinRespWidget = useRef(\"\");\r\n  const unknownRespWidget = useRef(\"\");\r\n  const buzyRespWidget = useRef(\"\");\r\n  const freeRespWidget = useRef(\"\");\r\n  const boundryRespWidget = useRef(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getResponders();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  const getTableData2 = (data) => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td>{item.id}</td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td>\r\n              {\" \"}\r\n              {item.userActivation ? (\r\n                <i className=\"fa fa-toggle-on\"></i>\r\n              ) : (\r\n                <i className=\"fa fa-toggle-off\"></i>\r\n              )}\r\n            </td>\r\n            {/* <td> {item.position.speed} </td> */}\r\n            <td> </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    let data2 = getResss(data);\r\n    return data2.map((item, index) => {\r\n      // let color = null;\r\n      // if (item.db) {\r\n      //   if (item.db.userActivation == true) {\r\n      //     color = \"green\";\r\n      //   } else {\r\n      //     color = \"transparent\";\r\n      //   }\r\n      // } else {\r\n      //   color = \"transparent\";\r\n      // }\r\n      // console.error(color);\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr\r\n            // style={{ background: \"red !important\" }}\r\n            onDoubleClick={() =>\r\n              props.getCenter([\r\n                { latitude: Number(item.lat), longitude: Number(item.lng) },\r\n              ])\r\n            }\r\n          >\r\n            <td> {item.id} </td>\r\n            <td> {item.name} </td>\r\n            <td> {item.db == null ? null : item.db.contact} </td>\r\n            <td> {item.position.latitude} </td>\r\n            <td> {item.position.longitude} </td>\r\n            <td> {item.position.speed} </td>\r\n            <td> </td>\r\n            {/* <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td> */}\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Speed </th>\r\n                {/* <th> - </th>\r\n                <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getTable2 = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Active </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData2(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getOperss = () => {\r\n    let a = props.groups.filter((item) => item.groupId == props.user.groupId);\r\n    // console.error(a);\r\n    let groupIds = a.map((item) => item.id);\r\n    // console.error(groupIds);\r\n    let info = [];\r\n    a.map((item) => {\r\n      let c = props.groups.filter((item2) => item2.groupId == item.id);\r\n      info.push(...c);\r\n    });\r\n    // console.error(info);\r\n    // return [];\r\n    let groupIds2 = info.map((item) => item.id);\r\n    let result = props.operators.filter((item) => {\r\n      let group = Number(item.groupId);\r\n      if (_.includes(groupIds2, group)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    // console.error(result);\r\n    return result;\r\n  };\r\n\r\n  const getResss = (data) => {\r\n    // console.error(\"Bilal: \", data);\r\n    let a = props.groups.filter((item) => item.groupId == props.user.groupId);\r\n    let b = a.map((item) => item.id);\r\n    // console.error(\"Groups: \", b);\r\n    // let groupIds2 = info.map((item) => item.id);\r\n    // let data3 = [...props.online, ...props.unknown, ...props.offline];\r\n    let result = data.filter((item) => {\r\n      if (item.db != null) {\r\n        let group = Number(item.db.groupId);\r\n        if (_.includes(b, group)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    console.error(result);\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          overflow: \"auto\",\r\n          // scrollBehavior: \"inherit\",\r\n          direction: \"rtl\",\r\n          marginRight: \"10px\",\r\n        }}\r\n      >\r\n        <div style={{ direction: \"ltr\" }}>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                OperatorWidget.current.style.display == \"none\" ||\r\n                OperatorWidget.current.style.display == \"\"\r\n              ) {\r\n                OperatorWidget.current.style.display = \"block\";\r\n              } else {\r\n                OperatorWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Operators&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={OperatorWidget} style={{ display: \"none\" }}>\r\n            {getTable2(getOperss(props.operators))}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                lineGraphWidget.current.style.display == \"none\" ||\r\n                lineGraphWidget.current.style.display == \"\"\r\n              ) {\r\n                lineGraphWidget.current.style.display = \"block\";\r\n              } else {\r\n                lineGraphWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Responder Performance&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div\r\n            ref={lineGraphWidget}\r\n            style={{ display: \"block\" }}\r\n            className=\"inverse-theme\"\r\n          >\r\n            <Reports />\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                onlinRespWidget.current.style.display == \"none\" ||\r\n                onlinRespWidget.current.style.display == \"\"\r\n              ) {\r\n                onlinRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                onlinRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.online.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Online Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={onlinRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.online)}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                offlinRespWidget.current.style.display == \"none\" ||\r\n                offlinRespWidget.current.style.display == \"\"\r\n              ) {\r\n                offlinRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                offlinRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.offline.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Offline Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={offlinRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.offline)}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                unknownRespWidget.current.style.display == \"none\" ||\r\n                unknownRespWidget.current.style.display == \"\"\r\n              ) {\r\n                unknownRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                unknownRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.unknown.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Unknown Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={unknownRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.unknown)}\r\n          </div>\r\n\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                boundryRespWidget.current.style.display == \"none\" ||\r\n                boundryRespWidget.current.style.display == \"\"\r\n              ) {\r\n                boundryRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                boundryRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.outBound.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Cross Boundries&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={boundryRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.outBound, \"id\"))}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                buzyRespWidget.current.style.display == \"none\" ||\r\n                buzyRespWidget.current.style.display == \"\"\r\n              ) {\r\n                buzyRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                buzyRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.outBound.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Buzy Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={buzyRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.buzy, \"id\"))}\r\n          </div>\r\n\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                freeRespWidget.current.style.display == \"none\" ||\r\n                freeRespWidget.current.style.display == \"\"\r\n              ) {\r\n                freeRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                freeRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.free.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Free Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={freeRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.free, \"id\"))}\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n          <center>\r\n            <BarChart\r\n              ylabel=\"Responders\"\r\n              width={400}\r\n              height={300}\r\n              margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\r\n              data={\r\n                // [3, 5, 1, 7, 9, 12, 4]\r\n                [\r\n                  { text: \"Resp1\", value: 500, barColor: \"red\" },\r\n                  { text: \"Resp2\", value: 300 },\r\n                  { text: \"Resp3\", value: 600 },\r\n                  { text: \"Resp4\", value: 200 },\r\n                  { text: \"Resp5\", value: 400 },\r\n                  { text: \"Resp6\", value: 700 },\r\n                  { text: \"Resp7\", value: 100 },\r\n                ]\r\n              }\r\n              // onBarClick={this.handleBarClick}\r\n            />\r\n            &nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  offline: state.offlineResponders,\r\n  online: state.onlineResponders,\r\n  unknown: state.unknownResponders,\r\n  outBound: state.outBoundResponders,\r\n  operators: state.operators,\r\n  groups: state.groups,\r\n  buzy: state.buzyResponders,\r\n  free: state.freeResponders,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getResponders: () => GetAllResponder(dispatch),\r\n  getCenter: (data) => GetCenter(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Responders);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Services\\Services.jsx",["1809","1810","1811","1812"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Panics\\Panics.jsx",["1813","1814","1815","1816","1817","1818","1819","1820","1821","1822","1823","1824","1825","1826","1827","1828","1829","1830","1831","1832","1833","1834","1835","1836","1837","1838","1839","1840"],"import React, { useEffect, useRef } from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport Circle from \"react-circle\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetPanics,\r\n  GetCenter,\r\n} from \"./../../../../../actions/index\";\r\n\r\nconst Panics = (props) => {\r\n  console.log(\"Supervisor - Panics Widget\");\r\n\r\n  const panicWidget = useRef(\"\");\r\n  const inQueryWidget = useRef(\"\");\r\n  const confirmedByOperatorWidget = useRef(\"\");\r\n  const assignedToResponderWidget = useRef(\"\");\r\n  const confirmedByResponderWidget = useRef(\"\");\r\n  const resolvedByResponderWidget = useRef(\"\");\r\n  const resolvedByOperatorWidget = useRef(\"\");\r\n  const closedBySupervisorWidget = useRef(\"\");\r\n  const closedByCustomerWidget = useRef(\"\");\r\n  const cancelledWidget = useRef(\"\");\r\n  const closedWidget = useRef(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getPanics();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  const getTableData = (data) => {\r\n    return data.reverse().map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr\r\n            onDoubleClick={() =>\r\n              props.getCenter([\r\n                {\r\n                  latitude: Number(item.lat),\r\n                  longitude: Number(item.lng),\r\n                },\r\n              ])\r\n            }\r\n          >\r\n            <td> {item.id} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.nature.name} </td>\r\n            <td> {item.priority.name} </td>\r\n            <td> {item.lat} </td>\r\n            <td> {item.lng} </td>\r\n            <td> {item.createdAt} </td>\r\n            {/* <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td> */}\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Contact </th>\r\n                <th> Nature </th>\r\n                <th> Priority </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Date </th>\r\n                {/* <th> - </th>\r\n                <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getLength = (data) => {\r\n    if (data.length > 0) {\r\n      return (Number(data.length) / Number(props.panics.length)) * 100;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const getStyles = (bg) => {\r\n    return buildStyles({\r\n      rotation: 0.25,\r\n      strokeLinecap: \"butt\",\r\n      textSize: \"30px\",\r\n      pathTransitionDuration: 0.3,\r\n      pathColor: bg,\r\n      textColor: \"#369\",\r\n      trailColor: \"#d6d6d6\",\r\n      backgroundColor: \"#3e98c7\",\r\n      text: {\r\n        // Text color\r\n        fill: \"#f88\",\r\n        // Text size\r\n        fontSize: \"20px\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const panicLengthString = (data) => {\r\n    return Number(data.length) == 0 ? \"0\" : Number(data.length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ overflow: \"auto\", height: \"100vh\" }}>\r\n        <div>\r\n          {/* <PieChart\r\n            data={[\r\n              { title: \"One\", value: 1, color: \"darkblue\" },\r\n              { title: \"One\", value: 2, color: \"blue\" },\r\n              { title: \"Two\", value: 3, color: \"cyan\" },\r\n              { title: \"Three\", value: 4, color: \"skyblue\" },\r\n              { title: \"Four\", value: 5, color: \"lightblue\" },\r\n              { title: \"Four\", value: 6, color: \"#eee\" },\r\n              { title: \"Four\", value: 7, color: \"#339\" },\r\n              { title: \"Four\", value: 8, color: \"#366\" },\r\n              { title: \"Four\", value: 9, color: \"#369\" },\r\n            ]}\r\n          /> */}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              panicWidget.current.style.display == \"none\" ||\r\n              panicWidget.current.style.display == \"\"\r\n            ) {\r\n              panicWidget.current.style.display = \"block\";\r\n            } else {\r\n              panicWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Panic Reports&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <center\r\n          ref={panicWidget}\r\n          className=\"inverse-theme\"\r\n          style={{ padding: \"5px\", display: \"block\" }}\r\n        >\r\n          <div className=\"\" style={{ width: \"350px\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.inQueryPanics)}\r\n                  text={panicLengthString(props.inQueryPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                In Query\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.confirmedByOperatorPanics)}\r\n                  text={panicLengthString(props.confirmedByOperatorPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Operator Confirmed\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.assignedToResponderPanics)}\r\n                  text={panicLengthString(props.assignedToResponderPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Assigned Responder\r\n              </div>\r\n\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.confirmedByResponderPanics)}\r\n                  text={panicLengthString(props.confirmedByResponderPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Responder Confirmed\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.resolvedByResponderPanics)}\r\n                  text={panicLengthString(props.resolvedByResponderPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Responder Resolved\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.resolvedByOperatorPanics)}\r\n                  text={panicLengthString(props.resolvedByOperatorPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Operator Resolved\r\n              </div>\r\n\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.closedBySupervisorPanics)}\r\n                  text={panicLengthString(props.closedBySupervisorPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Supervisor Closed\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.closedByCustomerPanics)}\r\n                  text={panicLengthString(props.closedByCustomerPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Customer Closed\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.panics)}\r\n                  text={panicLengthString(props.panics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Total\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.cancelledPanics)}\r\n                  text={panicLengthString(props.cancelledPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Cancelled\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.closedPanics)}\r\n                  text={panicLengthString(props.closedPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Closed\r\n              </div>\r\n            </div>\r\n          </div>\r\n          &nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n        </center>\r\n\r\n        {/* <h4\r\n          style={{ padding: \"5px\",   }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.panics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> All Panics&nbsp; <i className=\"fa fa-caret-down\" ></i> </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>{getTable(props.panics)}</div> */}\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              inQueryWidget.current.style.display == \"none\" ||\r\n              inQueryWidget.current.style.display == \"\"\r\n            ) {\r\n              inQueryWidget.current.style.display = \"block\";\r\n            } else {\r\n              inQueryWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.inQueryPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            InQuery Panics&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={inQueryWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.inQueryPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              confirmedByOperatorWidget.current.style.display == \"none\" ||\r\n              confirmedByOperatorWidget.current.style.display == \"\"\r\n            ) {\r\n              confirmedByOperatorWidget.current.style.display = \"block\";\r\n            } else {\r\n              confirmedByOperatorWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.confirmedByOperatorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Confirmed By Operator Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={confirmedByOperatorWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.confirmedByOperatorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              assignedToResponderWidget.current.style.display == \"none\" ||\r\n              assignedToResponderWidget.current.style.display == \"\"\r\n            ) {\r\n              assignedToResponderWidget.current.style.display = \"block\";\r\n            } else {\r\n              assignedToResponderWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.assignedToResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Assigned To Responder Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={assignedToResponderWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.assignedToResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              confirmedByResponderWidget.current.style.display == \"none\" ||\r\n              confirmedByResponderWidget.current.style.display == \"\"\r\n            ) {\r\n              confirmedByResponderWidget.current.style.display = \"block\";\r\n            } else {\r\n              confirmedByResponderWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.confirmedByResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Confirmed By Responder Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={confirmedByResponderWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.confirmedByResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              resolvedByResponderWidget.current.style.display == \"none\" ||\r\n              resolvedByResponderWidget.current.style.display == \"\"\r\n            ) {\r\n              resolvedByResponderWidget.current.style.display = \"block\";\r\n            } else {\r\n              resolvedByResponderWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.resolvedByResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Resolved By Responder Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={resolvedByResponderWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.resolvedByResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              resolvedByOperatorWidget.current.style.display == \"none\" ||\r\n              resolvedByOperatorWidget.current.style.display == \"\"\r\n            ) {\r\n              resolvedByOperatorWidget.current.style.display = \"block\";\r\n            } else {\r\n              resolvedByOperatorWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.resolvedByOperatorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Resolved By Operator Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={resolvedByOperatorWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.resolvedByOperatorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              closedBySupervisorWidget.current.style.display == \"none\" ||\r\n              closedBySupervisorWidget.current.style.display == \"\"\r\n            ) {\r\n              closedBySupervisorWidget.current.style.display = \"block\";\r\n            } else {\r\n              closedBySupervisorWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.closedBySupervisorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Closed By Supervisor Panics&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={closedBySupervisorWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.closedBySupervisorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              closedByCustomerWidget.current.style.display == \"none\" ||\r\n              closedByCustomerWidget.current.style.display == \"\"\r\n            ) {\r\n              closedByCustomerWidget.current.style.display = \"block\";\r\n            } else {\r\n              closedByCustomerWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.closedByCustomerPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Closed By Customer Panics&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={closedByCustomerWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.closedByCustomerPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              cancelledWidget.current.style.display == \"none\" ||\r\n              cancelledWidget.current.style.display == \"\"\r\n            ) {\r\n              cancelledWidget.current.style.display = \"block\";\r\n            } else {\r\n              cancelledWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.cancelledPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Cancelled Panics&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={cancelledWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.closedPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              closedWidget.current.style.display == \"none\" ||\r\n              closedWidget.current.style.display == \"\"\r\n            ) {\r\n              closedWidget.current.style.display = \"block\";\r\n            } else {\r\n              closedWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.cancelledPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Closed Panics&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div ref={closedWidget} style={{ marginLeft: \"15px\", display: \"none\" }}>\r\n          {getTable(props.closedPanics)}\r\n        </div>\r\n        <br />\r\n\r\n        <br />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  panics: state.panics,\r\n  inQueryPanics: state.inQueryPanics,\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  assignedToResponderPanics: state.assignedToResponderPanics,\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  closedByCustomerPanics: state.closedByCustomerPanics,\r\n  cancelledPanics: state.cancelledPanics,\r\n  closedPanics: state.closedPanics,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getPanics: () => GetPanics(dispatch),\r\n  getCenter: (data) => GetCenter(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Panics);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Logs\\Logs.jsx",["1841","1842","1843","1844","1845","1846","1847","1848","1849"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Supervisor\\Supervisor.jsx",["1850","1851","1852","1853","1854"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Applications\\Applications.jsx",["1855","1856","1857","1858","1859","1860"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Customers\\Customers.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\GeoView\\GeoView.jsx",["1861","1862","1863","1864","1865","1866"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Profile\\Profile.jsx",["1867","1868","1869","1870"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\ResponderView\\ResponderView.jsx",["1871","1872","1873","1874","1875","1876","1877","1878"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetAllResponder,\r\n  DelTraccarResponders,\r\n} from \"./../../../../../actions/index\";\r\nimport Create from \"./Create/Create\";\r\nimport _ from \"lodash\";\r\n\r\nconst ResponderView = (props) => {\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const init = async () => {\r\n    await props.getResponders();\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n    return;\r\n  }, []);\r\n\r\n  const delResponder = async (id) => {\r\n    await props.delResponder(id);\r\n    await init();\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    return data.map((item, index) => {\r\n      let color = \"transparent\";\r\n      if (item.status == \"online\") {\r\n        color = \"lightgreen\";\r\n      } else if (item.status == \"offline\") {\r\n        color = \"pink\";\r\n      } else if (item.status == \"unknown\") {\r\n        color = \"lightyellow\";\r\n      } else {\r\n        color = \"transparent\";\r\n      }\r\n      if (item.db != null) {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <tr style={{ background: color }}>\r\n              <td> {item.id} </td>\r\n              <td>\r\n                {\" \"}\r\n                {item.db.firstname + \" \" + item.db.lastname} ( {item.name} ){\" \"}\r\n              </td>\r\n              <td> {item.db.cnic} </td>\r\n              <td> {item.db.contact} </td>\r\n              <td> {item.db.email} </td>\r\n              <td> {item.db.password} </td>\r\n              <td> {item.lat} </td>\r\n              <td> {item.lng} </td>\r\n              <td> {item.db.address} </td>\r\n              <td> {item.db.userActivation} </td>\r\n              <td> {item.db.userAssignment} </td>\r\n              <td> {item.db.serviceId} </td>\r\n              <td> {item.db.subscriptionId} </td>\r\n              <td> {item.db.deviceId} </td>\r\n              <td> {item.db.custId} </td>\r\n              <td> {item.db.image} </td>\r\n              <td> {item.db.trackingId} </td>\r\n              <td> {item.db.uniqueId} </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => props.delTraccarResponders(item.id)}\r\n                >\r\n                  <i className=\"fa fa-pencil\"></i>\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => props.delTraccarResponders(item.id)}\r\n                >\r\n                  <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n              </td>\r\n              {/* <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => edit(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => del(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                  </button>\r\n                </td> */}\r\n            </tr>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <tr style={{ background: \"#eee\" }}>\r\n              <td> {item.id} </td>\r\n              <td> ( {item.name} ) </td>\r\n              <td> </td>\r\n              <td> {item.contact} </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td></td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td></td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td>\r\n                {/* <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => delResponder(item.id)}\r\n                >\r\n                  <i className=\"fa fa-trash-o\"></i>\r\n                </button> */}\r\n              </td>\r\n              <td></td>\r\n              {/* <td> </td> */}\r\n              {/* <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => edit(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => del(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                  </button>\r\n                </td> */}\r\n            </tr>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> CNIC </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Password </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Address </th>\r\n                <th> User Activation </th>\r\n                <th> User Assignment </th>\r\n                <th> Service </th>\r\n                <th> Subscription </th>\r\n                <th> Device </th>\r\n                <th> Parent </th>\r\n                <th> Image </th>\r\n                <th> Tracking Id </th>\r\n                <th> Unique </th>\r\n                <th> - </th>\r\n                {/* <th> - </th>\r\n                    <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const groupser = () => {\r\n    let data = [...props.online, ...props.offline, ...props.unknown];\r\n    let data3 = props.groups.filter(\r\n      (item) => item.groupId == props.user.groupId\r\n    );\r\n    let data4 = data3.map((item) => item.id);\r\n    // console.error(\"Data: \", data4);\r\n    let data2 = data.filter((item) => {\r\n      try {\r\n        if (item.db != null) {\r\n          if (_.includes(data4, item.db.groupId)) {\r\n            // console.error(\r\n            //   item.db.groupId,\r\n            //   _.includes(data4, item.db.groupId)\r\n            // );\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    });\r\n    return data2;\r\n  };\r\n\r\n  const getPage = () => {\r\n    if (page == \"main\") {\r\n      return <>{getTable(groupser())}</>;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Create setPage={setPage} groupser={groupser()} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"responderView\"}\r\n        title={{ name: \"Responders\", symbol: \"car\" }}\r\n      >\r\n        {page == \"main\" ? (\r\n          <div>\r\n            <button className=\"btn btn-primary\" onClick={() => setPage(\"add\")}>\r\n              Create\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <button className=\"btn btn-primary\" onClick={() => setPage(\"main\")}>\r\n              Back\r\n            </button>\r\n          </div>\r\n        )}\r\n        <br />\r\n        {getPage()}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // customers: state.customers,\r\n  user: state.logger,\r\n  groups: state.groups,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getResponders: () => GetAllResponder(dispatch),\r\n  delTraccarResponders: (id) => DelTraccarResponders(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponderView);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Geo\\Geo.jsx",["1879","1880","1881","1882","1883","1884","1885"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\NotificationLogs\\NotificationLogs.jsx",["1886","1887","1888","1889","1890","1891","1892"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\n// import {  } from './../../../../../actions/index'\r\nimport JavascriptTimeAgo from \"javascript-time-ago\";\r\nimport en from \"javascript-time-ago/locale/en\";\r\nimport ru from \"javascript-time-ago/locale/ru\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nJavascriptTimeAgo.addLocale(en);\r\nJavascriptTimeAgo.addLocale(ru);\r\n\r\nconst compareDate = (date1, date2, type = \"equal\") => {\r\n  let x = new Date(date1);\r\n  let y = new Date(date2);\r\n  if (type == \"greater\") {\r\n    return +x > +y;\r\n  } else if (type == \"lesser\") {\r\n    return +x < +y;\r\n  } else {\r\n    return +x == +y;\r\n  }\r\n};\r\n\r\nconst NotificationLogs = (props) => {\r\n  console.log(\"Supervisor - Notification Logs\");\r\n\r\n  //   const [start, setStart] = useState(\"\");\r\n  //   const [end, setEnd] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getPanics();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  // const filterNature = (id) => {\r\n  //   let data = props.natures.filter((item) => item.id == id);\r\n  //   if (data.length > 0) {\r\n  //     return data[0];\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  // const filterPriority = (id) => {\r\n  //   let data = props.priorities.filter((item) => item.id == id);\r\n  //   if (data.length > 0) {\r\n  //     return data[0];\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  //   const filterResponders = (id) => {\r\n  //     let data = props.online.filter((item) => item.id == id);\r\n  //     if (data.length > 0) {\r\n  //       return data[0];\r\n  //     } else {\r\n  //       return null;\r\n  //     }\r\n  //   };\r\n\r\n  //   const filterOperators = (id) => {\r\n  //     let data = props.operators.filter((item) => item.id == id);\r\n  //     if (data.length > 0) {\r\n  //       return data[0];\r\n  //     } else {\r\n  //       return null;\r\n  //     }\r\n  //   };\r\n\r\n  const filterUsers = (id) => {\r\n    let data = props.users.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    return data.reverse().map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.Title} </td>\r\n            <td> {item.Message} </td>\r\n            <td>\r\n              {filterUsers(item.sendUserId)\r\n                ? filterUsers(item.sendUserId).firstname +\r\n                  \" \" +\r\n                  filterUsers(item.sendUserId).lastname\r\n                : null}\r\n            </td>\r\n            <td>\r\n              {filterUsers(item.recieveUserId)\r\n                ? filterUsers(item.recieveUserId).firstname +\r\n                  \" \" +\r\n                  filterUsers(item.recieveUserId).lastname\r\n                : null}\r\n            </td>\r\n            <td> {item.data} </td>\r\n            <td> {item.status} </td>\r\n            <td title={item.createdAt}>\r\n              <ReactTimeAgo date={new Date(item.createdAt)} />\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={{ overflow: \"auto\", fontSize: \"11px\" }}\r\n          className=\"inverse-theme\"\r\n        >\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Title </th>\r\n                <th> Message </th>\r\n                <th> Actionist </th>\r\n                <th> Reciever </th>\r\n                <th> Data </th>\r\n                <th> Status </th>\r\n                <th> TimeStamp </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"notificationLogs\"}\r\n        title={{ name: \"Notification Logs\", symbol: \"logs\" }}\r\n      >\r\n        {getTable(props.notificationLogs)}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  notificationLogs: state.notificationLogs,\r\n  users: state.users,\r\n  // natures: state.natures,\r\n  // priorities: state.priorities,\r\n  //   online: state.onlineResponders,\r\n  //   offline: state.offlineResponders,\r\n  //   unknown: state.unknownResponders,\r\n  //   panics: state.panics,\r\n  //   operators: state.operators,\r\n  //   supervisors: state.supervisors,\r\n  // inQueryPanics: state.inQueryPanics,\r\n  // confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  // assignedToResponderPanics: state.assignedToResponderPanics,\r\n  // confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  // resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  // resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  // closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  // closedByCustomerPanics: state.closedByCustomerPanics,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationLogs);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\ChatLogs\\ChatLogs.jsx",["1893","1894","1895","1896","1897","1898","1899"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\n// import {  } from './../../../../../actions/index'\r\nimport JavascriptTimeAgo from \"javascript-time-ago\";\r\nimport en from \"javascript-time-ago/locale/en\";\r\nimport ru from \"javascript-time-ago/locale/ru\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nJavascriptTimeAgo.addLocale(en);\r\nJavascriptTimeAgo.addLocale(ru);\r\n\r\nconst compareDate = (date1, date2, type = \"equal\") => {\r\n  let x = new Date(date1);\r\n  let y = new Date(date2);\r\n  if (type == \"greater\") {\r\n    return +x > +y;\r\n  } else if (type == \"lesser\") {\r\n    return +x < +y;\r\n  } else {\r\n    return +x == +y;\r\n  }\r\n};\r\n\r\nconst ChatLogs = (props) => {\r\n  console.log(\"Supervisor - Notification Logs\");\r\n\r\n  //   const [start, setStart] = useState(\"\");\r\n  //   const [end, setEnd] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getPanics();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  // const filterNature = (id) => {\r\n  //   let data = props.natures.filter((item) => item.id == id);\r\n  //   if (data.length > 0) {\r\n  //     return data[0];\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  // const filterPriority = (id) => {\r\n  //   let data = props.priorities.filter((item) => item.id == id);\r\n  //   if (data.length > 0) {\r\n  //     return data[0];\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  //   const filterResponders = (id) => {\r\n  //     let data = props.online.filter((item) => item.id == id);\r\n  //     if (data.length > 0) {\r\n  //       return data[0];\r\n  //     } else {\r\n  //       return null;\r\n  //     }\r\n  //   };\r\n\r\n  //   const filterOperators = (id) => {\r\n  //     let data = props.operators.filter((item) => item.id == id);\r\n  //     if (data.length > 0) {\r\n  //       return data[0];\r\n  //     } else {\r\n  //       return null;\r\n  //     }\r\n  //   };\r\n\r\n  const filterUsers = (id) => {\r\n    let data = props.users.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    return data.reverse().map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            {/* <td> {item.Title} </td> */}\r\n            <td> {item.Message} </td>\r\n            <td>\r\n              {filterUsers(item.sendUserId)\r\n                ? filterUsers(item.sendUserId).firstname +\r\n                  \" \" +\r\n                  filterUsers(item.sendUserId).lastname\r\n                : null}\r\n            </td>\r\n            <td>\r\n              {filterUsers(item.recieveUserId)\r\n                ? filterUsers(item.recieveUserId).firstname +\r\n                  \" \" +\r\n                  filterUsers(item.recieveUserId).lastname\r\n                : null}\r\n            </td>\r\n            {/* <td> {item.data} </td> */}\r\n            {/* <td> {item.status} </td> */}\r\n            <td title={item.createdAt}>\r\n              <ReactTimeAgo date={new Date(item.createdAt)} />\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={{ overflow: \"auto\", fontSize: \"11px\" }}\r\n          className=\"inverse-theme\"\r\n        >\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                {/* <th> Title </th> */}\r\n                <th> Message </th>\r\n                <th> Actionist </th>\r\n                <th> Reciever </th>\r\n                {/* <th> Data </th> */}\r\n                {/* <th> Status </th> */}\r\n                <th> TimeStamp </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"chatLogs\"}\r\n        title={{ name: \"Chat Logs\", symbol: \"comments\" }}\r\n      >\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <select className=\"form-control\">\r\n                <option value=\"\"> None </option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <select className=\"form-control\">\r\n                <option value=\"\"> None </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n        {getTable(props.chatLogs)}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  chatLogs: state.chatLogs,\r\n  users: state.users,\r\n  // natures: state.natures,\r\n  // priorities: state.priorities,\r\n  //   online: state.onlineResponders,\r\n  //   offline: state.offlineResponders,\r\n  //   unknown: state.unknownResponders,\r\n  //   panics: state.panics,\r\n  //   operators: state.operators,\r\n  //   supervisors: state.supervisors,\r\n  // inQueryPanics: state.inQueryPanics,\r\n  // confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  // assignedToResponderPanics: state.assignedToResponderPanics,\r\n  // confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  // resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  // resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  // closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  // closedByCustomerPanics: state.closedByCustomerPanics,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatLogs);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Users\\Users.jsx",["1900","1901","1902"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Operator\\Operator.jsx",["1903","1904","1905","1906","1907"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Geofence\\Geofence.jsx",["1908","1909","1910"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Supervisor\\Supervisor.jsx",["1911","1912","1913","1914","1915"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Wall\\Wall.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\TopBar\\TopBar.jsx",["1916","1917","1918","1919","1920","1921","1922","1923","1924","1925","1926","1927","1928"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserLogout, changeZoom } from \"../../../../../actions/index\";\r\nimport TopMenu from \"../../../../../containers/TobMenu/TopMenu\";\r\n\r\nconst TopBar = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel - Top Menu\");\r\n\r\n  const setSiders = (data) => {\r\n    if (data == \"left\") {\r\n      let leftPin = localStorage.getItem(\"leftPin\");\r\n      if (leftPin) {\r\n        let newLeft = leftPin == \"false\" ? true : false;\r\n        // console.error(\"L:\", newLeft);\r\n        localStorage.setItem(\"leftPin\", newLeft);\r\n      } else {\r\n        let newLeft = true;\r\n        localStorage.setItem(\"leftPin\", newLeft);\r\n      }\r\n    } else if (data == \"right\") {\r\n      let rightPin = localStorage.getItem(\"rightPin\");\r\n      if (rightPin) {\r\n        let newRight = rightPin == \"false\" ? true : false;\r\n        localStorage.setItem(\"rightPin\", newRight);\r\n      } else {\r\n        let newRight = true;\r\n        localStorage.setItem(\"rightPin\", newRight);\r\n      }\r\n    } else {\r\n    }\r\n    window.open(\"http://localhost:3001/\", \"_self\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopMenu title=\"Super Admin Panel\">\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n          <li className=\"themer\">\r\n            <a>\r\n              <span\r\n                data-toggle=\"modal\"\r\n                data-target=\"#priorities\"\r\n                title=\"Priorities\"\r\n              >\r\n                <i className=\"fa fa-star\"></i> Priorities\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li className=\"themer\">\r\n            <a>\r\n              <span data-toggle=\"modal\" data-target=\"#natures\" title=\"Natures\">\r\n                <i className=\"fa fa-leaf\"></i> Natures\r\n              </span>\r\n            </a>\r\n          </li>\r\n\r\n          <li className=\"themer\">\r\n            <a>\r\n              <span\r\n                data-toggle=\"modal\"\r\n                data-target=\"#groups\"\r\n                title=\"Groups\"\r\n                className=\"themer\"\r\n              >\r\n                <i className=\"fa fa-cubes\"></i> Groups\r\n              </span>\r\n            </a>\r\n          </li>\r\n\r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-users\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              Users &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              {/* <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#supervisor\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Supervisors</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#operator\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Operators</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#customers\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Customers</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#responderView\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Responders</a>\r\n              </li> */}\r\n              <li data-toggle=\"modal\" data-target=\"#admin\" className=\"themer\">\r\n                <a>Admins</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-user\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              {props.user.firstname.toUpperCase()} &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li data-toggle=\"modal\" data-target=\"#profile\">\r\n                <a>Profile</a>\r\n              </li>\r\n              <li>\r\n                <a onClick={props.logout}>Logout</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </TopMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  zoomLevel: state.zoomLevel,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Priorities\\Priorities.jsx",["1929","1930","1931","1932","1933"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Natures\\Natures.jsx",["1934","1935","1936","1937"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Subscriptions\\Subscriptions.jsx",["1938","1939","1940","1941"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Responders\\Responders.jsx",["1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952","1953","1954","1955","1956","1957","1958","1959"],"import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetAllResponder,\r\n  GetCenter,\r\n} from \"./../../../../../actions/index\";\r\nimport Reports from \"../Reports/Reports\";\r\n// import Plot from \"react-plotly.js\";\r\nimport BarChart from \"react-bar-chart\";\r\nimport _ from \"lodash\";\r\nimport HSBar from \"react-horizontal-stacked-bar-chart\";\r\n\r\nconst Responders = (props) => {\r\n  console.log(\"Supervisor - Responder Widget\");\r\n\r\n  const OperatorWidget = useRef(\"\");\r\n  const lineGraphWidget = useRef(\"\");\r\n  const onlinRespWidget = useRef(\"\");\r\n  const offlinRespWidget = useRef(\"\");\r\n  const unknownRespWidget = useRef(\"\");\r\n  const buzyRespWidget = useRef(\"\");\r\n  const boundryRespWidget = useRef(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getResponders();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  const getTableData2 = (data) => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td>{item.id}</td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td>\r\n              {\" \"}\r\n              {item.userActivation ? (\r\n                <i className=\"fa fa-toggle-on\"></i>\r\n              ) : (\r\n                <i className=\"fa fa-toggle-off\"></i>\r\n              )}\r\n            </td>\r\n            {/* <td> {item.position.speed} </td> */}\r\n            <td> </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    return data.map((item, index) => {\r\n      // let color = null;\r\n      // if (item.db) {\r\n      //   if (item.db.userActivation == true) {\r\n      //     color = \"green\";\r\n      //   } else {\r\n      //     color = \"transparent\";\r\n      //   }\r\n      // } else {\r\n      //   color = \"transparent\";\r\n      // }\r\n      // console.error(color);\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr\r\n            // style={{ background: \"red !important\" }}\r\n            onDoubleClick={() =>\r\n              props.getCenter([\r\n                { latitude: Number(item.lat), longitude: Number(item.lng) },\r\n              ])\r\n            }\r\n          >\r\n            <td> {item.id} </td>\r\n            <td> {item.name} </td>\r\n            <td> {item.db == null ? null : item.db.contact} </td>\r\n            <td> {item.position.latitude} </td>\r\n            <td> {item.position.longitude} </td>\r\n            <td> {item.position.speed} </td>\r\n            <td> </td>\r\n            {/* <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td> */}\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Speed </th>\r\n                {/* <th> - </th>\r\n                <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getTable2 = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Active </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData2(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          overflow: \"auto\",\r\n          // scrollBehavior: \"inherit\",\r\n          direction: \"rtl\",\r\n          marginRight: \"10px\",\r\n        }}\r\n      >\r\n        <div style={{ direction: \"ltr\" }}>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                OperatorWidget.current.style.display == \"none\" ||\r\n                OperatorWidget.current.style.display == \"\"\r\n              ) {\r\n                OperatorWidget.current.style.display = \"block\";\r\n              } else {\r\n                OperatorWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Operators&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={OperatorWidget} style={{ display: \"none\" }}>\r\n            {getTable2(props.operators)}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                lineGraphWidget.current.style.display == \"none\" ||\r\n                lineGraphWidget.current.style.display == \"\"\r\n              ) {\r\n                lineGraphWidget.current.style.display = \"block\";\r\n              } else {\r\n                lineGraphWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Responder Performance&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div\r\n            ref={lineGraphWidget}\r\n            style={{ display: \"block\" }}\r\n            className=\"inverse-theme\"\r\n          >\r\n            <Reports />\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                onlinRespWidget.current.style.display == \"none\" ||\r\n                onlinRespWidget.current.style.display == \"\"\r\n              ) {\r\n                onlinRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                onlinRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.online.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Online Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={onlinRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.online)}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                offlinRespWidget.current.style.display == \"none\" ||\r\n                offlinRespWidget.current.style.display == \"\"\r\n              ) {\r\n                offlinRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                offlinRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.offline.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Offline Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={offlinRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.offline)}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                unknownRespWidget.current.style.display == \"none\" ||\r\n                unknownRespWidget.current.style.display == \"\"\r\n              ) {\r\n                unknownRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                unknownRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.unknown.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Unknown Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={unknownRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.unknown)}\r\n          </div>\r\n\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                boundryRespWidget.current.style.display == \"none\" ||\r\n                boundryRespWidget.current.style.display == \"\"\r\n              ) {\r\n                boundryRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                boundryRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.outBound.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Cross Boundries&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={boundryRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.outBound, \"id\"))}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                buzyRespWidget.current.style.display == \"none\" ||\r\n                buzyRespWidget.current.style.display == \"\"\r\n              ) {\r\n                buzyRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                buzyRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.outBound.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Buzy Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={buzyRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.buzy, \"id\"))}\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n          <center>\r\n            <BarChart\r\n              ylabel=\"Responders\"\r\n              width={400}\r\n              height={300}\r\n              margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\r\n              data={\r\n                // [3, 5, 1, 7, 9, 12, 4]\r\n                [\r\n                  { text: \"Resp1\", value: 500, barColor: \"red\" },\r\n                  { text: \"Resp2\", value: 300 },\r\n                  { text: \"Resp3\", value: 600 },\r\n                  { text: \"Resp4\", value: 200 },\r\n                  { text: \"Resp5\", value: 400 },\r\n                  { text: \"Resp6\", value: 700 },\r\n                  { text: \"Resp7\", value: 100 },\r\n                ]\r\n              }\r\n              // onBarClick={this.handleBarClick}\r\n            />\r\n            &nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  offline: state.offlineResponders,\r\n  online: state.onlineResponders,\r\n  unknown: state.unknownResponders,\r\n  outBound: state.outBoundResponders,\r\n  operators: state.operators,\r\n  buzy: state.buzyResponders,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getResponders: () => GetAllResponder(dispatch),\r\n  getCenter: (data) => GetCenter(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Responders);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Groups\\Groups.jsx",["1960","1961","1962"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Logs\\Logs.jsx",["1963","1964","1965","1966","1967","1968","1969","1970","1971"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Applications\\Applications.jsx",["1972","1973","1974","1975","1976","1977"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Customers\\Customers.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Panics\\Panics.jsx",["1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Geo\\Geo.jsx",["2006","2007","2008","2009","2010","2011","2012"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\GeoView\\GeoView.jsx",["2013","2014","2015","2016","2017","2018"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Profile\\Profile.jsx",["2019","2020","2021","2022"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Services\\Services.jsx",["2023","2024","2025","2026"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\ResponderView\\ResponderView.jsx",["2027","2028","2029","2030","2031","2032","2033"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\TopBar\\TopBar.jsx",["2034","2035","2036","2037","2038","2039","2040","2041","2042","2043","2044","2045","2046","2047"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserLogout, changeZoom } from \"../../../../../actions/index\";\r\nimport TopMenu2 from \"../../../../../containers/TobMenu/TopMenu2\";\r\n\r\nconst TopBar = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel - Top Menu\");\r\n\r\n  const setSiders = (data) => {\r\n    if (data == \"left\") {\r\n      let leftPin = localStorage.getItem(\"leftPin\");\r\n      if (leftPin) {\r\n        let newLeft = leftPin == \"false\" ? true : false;\r\n        // console.error(\"L:\", newLeft);\r\n        localStorage.setItem(\"leftPin\", newLeft);\r\n      } else {\r\n        let newLeft = true;\r\n        localStorage.setItem(\"leftPin\", newLeft);\r\n      }\r\n    } else if (data == \"right\") {\r\n      let rightPin = localStorage.getItem(\"rightPin\");\r\n      if (rightPin) {\r\n        let newRight = rightPin == \"false\" ? true : false;\r\n        localStorage.setItem(\"rightPin\", newRight);\r\n      } else {\r\n        let newRight = true;\r\n        localStorage.setItem(\"rightPin\", newRight);\r\n      }\r\n    } else {\r\n    }\r\n    window.open(\"http://localhost:3001/\", \"_self\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopMenu2 title=\"Supervisor Panel\">\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n          <li>\r\n            <a>\r\n              <span data-toggle=\"modal\" /* data-target=\"#logs\" title=\"Logs\" */>\r\n                <i\r\n                  className=\"fa fa-plus\"\r\n                  title=\"Zoom In\"\r\n                  onClick={() => props.changeZoom(props.zoomLevel + 1)}\r\n                ></i>\r\n                &nbsp;\r\n                <i\r\n                  className=\"fa fa-minus\"\r\n                  title=\"Zoom Out\"\r\n                  onClick={() => props.changeZoom(props.zoomLevel - 1)}\r\n                ></i>\r\n                &nbsp; Zoom &nbsp;\r\n                <span className=\"badge inverse-theme2\">\r\n                  {\" \"}\r\n                  {props.zoomLevel}{\" \"}\r\n                </span>\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a>\r\n              <span data-toggle=\"modal\" /* data-target=\"#logs\" title=\"Logs\" */>\r\n                <i\r\n                  className=\"fa fa-arrow-left\"\r\n                  title=\"Left Drawer\"\r\n                  onDoubleClick={() => setSiders(\"left\")}\r\n                  onClick={() => props.setLeft((item) => !item)}\r\n                ></i>\r\n                &nbsp;\r\n                <i\r\n                  className=\"fa fa-arrow-right\"\r\n                  title=\"Right Drawer\"\r\n                  onDoubleClick={() => setSiders(\"right\")}\r\n                  onClick={() => props.setRight((item) => !item)}\r\n                ></i>\r\n                &nbsp; Drawers\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li className=\"dropdown themer2\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle themer2\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-bar-chart\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              Reports &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#responderReports\"\r\n                className=\"themer2\"\r\n              >\r\n                <a>Reponder Reports</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#operatorReports\"\r\n                className=\"themer2\"\r\n              >\r\n                <a>Operator Reports</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#supervisorReports\"\r\n                className=\"themer2\"\r\n              >\r\n                <a>Supervisor Reports</a>\r\n              </li>\r\n              <li data-toggle=\"modal\" data-target=\"#logs\" className=\"themer2\">\r\n                <a> Panic Logs </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          {/* \r\n          <li className=\"themer2\">\r\n            <a>\r\n              <span\r\n                data-toggle=\"modal\"\r\n                data-target=\"#applications\"\r\n                title=\"Applications\"\r\n              >\r\n                <i className=\"fa fa-file\"></i> Applications\r\n              </span>\r\n            </a>\r\n          </li> */}\r\n          {/* \r\n          <li className=\"dropdown themer2\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-users\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              Users &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#supervisor\"\r\n                className=\"themer2\"\r\n              >\r\n                <a>Supervisors</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#operator\"\r\n                className=\"themer2\"\r\n              >\r\n                <a>Operators</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#customers\"\r\n                className=\"themer2\"\r\n              >\r\n                <a>Customers</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#responderView\"\r\n                className=\"themer2\"\r\n              >\r\n                <a>Responders</a>\r\n              </li>\r\n            </ul>\r\n          </li> */}\r\n\r\n          <li className=\"dropdown themer2\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-user\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              {props.user.firstname.toUpperCase()} &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li data-toggle=\"modal\" data-target=\"#profile\">\r\n                <a>Profile</a>\r\n              </li>\r\n              <li>\r\n                <a onClick={props.logout}>Logout</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </TopMenu2>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  zoomLevel: state.zoomLevel,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Wall\\Wall.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Users\\Users.jsx",["2048","2049","2050"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Operator\\Operator.jsx",["2051","2052","2053","2054","2055"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Geofence\\Geofence.jsx",["2056","2057","2058"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Chatbox\\Chatbox.jsx",["2059","2060","2061","2062","2063","2064","2065","2066","2067","2068","2069","2070","2071","2072","2073","2074","2075"],"import React, { useState, useEffect, useLayoutEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { GetTraccarGroups } from \"../../../../../actions/index\";\r\nimport Msg from \"./Msg\";\r\nimport JsSIP from \"jssip\";\r\nimport { Beep3, Beep2, Beep1, Beep4 } from \"./../../../../../Beeper/Beeper\";\r\nimport Caller from \"../Caller/Caller\";\r\n\r\nconst Chatbox = (props) => {\r\n  // console.error(\"Supervisor - Chat Box\");\r\n\r\n  const chatti = useRef(\"chatti\");\r\n\r\n  // const [text, setText] = useState(\"\"); // saving msg\r\n  const [num, setNum] = useState(\"1002\"); // number to send msg on\r\n  const [open, setOpen] = useState(true);\r\n  // const [callState, setCallState] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [localSession, setLocalSession] = useState(\"\");\r\n  const [ans, setAns] = useState(false);\r\n  const [answerCallDisplay, setAnswerCallDisplay] = useState(\"none\");\r\n  const [ringer, setRinger] = useState(0);\r\n  const [msgs, setMsgs] = useState([\r\n    // {\r\n    //   type: \"r\",\r\n    //   msg: \"Hello world !\",\r\n    // },\r\n    // {\r\n    //   type: \"s\",\r\n    //   msg: \"No ... Hello Zaeem !\",\r\n    // },\r\n  ]);\r\n\r\n  const getIcon = () => {\r\n    if (ringer == 0) {\r\n      return \"phone\";\r\n    } else if (ringer == 1) {\r\n      return \"volume-control-phone\";\r\n    } else if (ringer == 2) {\r\n      return \"tty\";\r\n    } else {\r\n      return \"phone\";\r\n    }\r\n  };\r\n\r\n  const send = async () => {\r\n    await send_message();\r\n    console.error(\"Msg: \", msg);\r\n    await setMsgs((item) => {\r\n      return [\r\n        ...item,\r\n        {\r\n          type: \"s\",\r\n          msg: msg,\r\n        },\r\n      ];\r\n    });\r\n    setMsg(\"\");\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    down();\r\n    return;\r\n  }, [msgs]);\r\n\r\n  useEffect(() => {\r\n    down();\r\n    return;\r\n  }, [msgs]);\r\n\r\n  const down = () => {\r\n    chatti.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n      inline: \"nearest\",\r\n    });\r\n\r\n    console.error(\"Going Down\");\r\n  };\r\n\r\n  //   const ring = async () => {\r\n  //     await Beep1();\r\n  //   };\r\n\r\n  const Call = () => {\r\n    if (ringer == 0) {\r\n      callAsterisk(num);\r\n    } else {\r\n      dropCall(localSession);\r\n    }\r\n  };\r\n\r\n  //   let loop;\r\n\r\n  //   useEffect(() => {\r\n  //     if (ringer == false) {\r\n  //       loop = setInterval(() => {\r\n  //         if (ringer == true) {\r\n  //           ring();\r\n  //         }\r\n  //       }, 300);\r\n  //     } else {\r\n  //       clearInterval(loop);\r\n  //     }\r\n  //     return;\r\n  //   }, [ringer]);\r\n\r\n  const recieve = async (body) => {\r\n    console.error(\"Body: \", body);\r\n    await setMsgs((item) => {\r\n      return [\r\n        ...item,\r\n        {\r\n          type: \"r\",\r\n          msg: body.toString(),\r\n        },\r\n      ];\r\n    });\r\n  };\r\n\r\n  const recievedMsgs = () => {\r\n    return msgs.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          {item.type == \"r\" ? (\r\n            <Msg direction=\"left\" text={item.msg} />\r\n          ) : (\r\n            <Msg direction=\"right\" text={item.msg} />\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Caller Tune baby\r\n   **/\r\n\r\n  var socket = new JsSIP.WebSocketInterface(\"wss://ss.dextrologix.com:8089/ws\");\r\n  var configuration = {\r\n    sockets: socket,\r\n    uri: \"6002@ss.dextrologix.com\",\r\n    password: \"60021234\",\r\n    use_preloaded_route: true,\r\n  };\r\n  var remoteAudio = new window.Audio();\r\n  remoteAudio.autoplay = true;\r\n\r\n  const mediaSource = new MediaSource();\r\n\r\n  var selfView = document.getElementById(\"selfView\");\r\n  var remoteView = document.getElementById(\"remoteView\");\r\n\r\n  var ua = new JsSIP.UA(configuration);\r\n\r\n  ua.on(\"connected\", function (e) {\r\n    // console.error(\"Socket Connected.\");\r\n  });\r\n\r\n  ua.on(\"disconnected\", function (e) {\r\n    // console.error(\"Socket Closed. \");\r\n  });\r\n\r\n  ua.on(\"registered\", function (e) {\r\n    console.error(\"Registered.\");\r\n  });\r\n  ua.on(\"unregistered\", function (e) {\r\n    console.error(\"Unregistered.\");\r\n  });\r\n  ua.on(\"registrationFailed\", function (e) {\r\n    // console.error(\"Registeration Failed\");\r\n  });\r\n\r\n  ua.on(\"newMessage\", function (e) {\r\n    // console.error(\"new Message\", e);\r\n    if (typeof e.request.body === \"string\") {\r\n      if (e.originator === \"remote\") {\r\n        recieve(e.request.body);\r\n        // setMsg([...msg, e.request.body]);\r\n        // if (!showChat) {\r\n        //   setShowChat(true);\r\n        // }\r\n      } else if (e.originator === \"local\") {\r\n        // local msg\r\n        // recieve(e.request.body);\r\n      }\r\n    }\r\n  });\r\n\r\n  let session;\r\n\r\n  if (localSession) {\r\n    console.error(\"Local Session: \", localSession);\r\n    if (localSession.status === 8) {\r\n      setAnswerCallDisplay(\"none\");\r\n      setLocalSession(\"\");\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.error(\"Sessions: \", session);\r\n  //   return;\r\n  // }, [session]);\r\n\r\n  // var options = {\r\n  //   eventHandlers: {\r\n  //     canceled: function (data) {\r\n  //       console.error(\"call cancelled\", data);\r\n  //     },\r\n  //     failed: function (e) {\r\n  //       console.log(\"call failed with cause: \" + e.cause);\r\n  //     },\r\n  //     ended: function (e) {\r\n  //       console.log(\"call ended with cause: \" + e.cause);\r\n  //     },\r\n  //     confirmed: function (e) {\r\n  //       console.log(\"call confirmed\");\r\n  //     },\r\n  //   },\r\n  // };\r\n\r\n  ua.on(\"newRTCSession\", function (ev) {\r\n    console.error(\"ev event: \", ev);\r\n    var newSession = ev.session;\r\n    // if (session) {\r\n    //   // hangup any existing call\r\n    //   session.terminate();\r\n    // }\r\n    session = newSession;\r\n    var completeSession = async function () {\r\n      // console.error(\"session trunacated\");\r\n      // session.terminate();\r\n      session = null;\r\n      //   setNewCall(false);\r\n      //   setAcceptCall(false);\r\n      await setRinger(0);\r\n    };\r\n\r\n    if (session.direction === \"outgoing\") {\r\n      console.error(\"stream outgoing  -------->\");\r\n      setLocalSession(session);\r\n      session.on(\"connecting\", async function () {\r\n        console.error(\"CONNECT\");\r\n        await setRinger(1);\r\n      });\r\n      session.on(\"peerconnection\", function (e) {\r\n        console.error(\"1accepted\");\r\n      });\r\n      session.on(\"ended\", completeSession);\r\n      session.on(\"failed\", completeSession);\r\n      session.on(\"accepted\", async function (e) {\r\n        console.error(\"accepted\");\r\n        await setRinger(2);\r\n      });\r\n      session.on(\"confirmed\", function (e) {\r\n        console.error(\"CONFIRM STREAM\");\r\n      });\r\n    }\r\n\r\n    if (session.direction === \"incoming\") {\r\n      console.error(\"stream incoming  -------->\");\r\n\r\n      setAnswerCallDisplay(\"\");\r\n      // console.error(session);\r\n      setLocalSession(session);\r\n      session.on(\"ended\", function () {\r\n        console.error(\"Call Ended before answering\");\r\n      });\r\n      session.on(\"peerconnection\", function (e) {\r\n        console.log(\"1accepted\");\r\n        add_stream();\r\n      });\r\n      session.on(\"failed\", completeSession);\r\n      session.on(\"canceled\", function () {\r\n        console.error(\"Call Cancelled before answering \");\r\n      });\r\n      var completeSession = async function () {\r\n        // console.error(\"session trunacated\");\r\n        await setRinger(0);\r\n        if (session) {\r\n          // hangup any existing call\r\n          session.terminate();\r\n          setAnswerCallDisplay(\"none\");\r\n        }\r\n        setLocalSession(session);\r\n      };\r\n    }\r\n  });\r\n\r\n  // console.error(\"JsSIP.IncomingMessage: \", JsSIP.WebSocketInterface);\r\n  // var name = new jssip.nameaddrheader(\"1003@ss.dextrologix.com\");\r\n  // console.error(\"Name: \", name);\r\n  const dropCall = (session) => {\r\n    if (session) {\r\n      // hangup any existing call\r\n      session.terminate();\r\n      setAnswerCallDisplay(\"none\");\r\n    }\r\n    setLocalSession(session);\r\n  };\r\n\r\n  const answerCall = (session) => {\r\n    var options = {\r\n      mediaConstraints: { audio: true, video: true },\r\n      // pcConfig: {\r\n      //   rtcpMuxPolicy: \"require\",\r\n      //   iceServers: [],\r\n      // },\r\n    };\r\n    session.answer(options);\r\n    var completeSession = async function () {\r\n      // console.error(\"session trunacated\");\r\n      session = null;\r\n      setAnswerCallDisplay(\"none\");\r\n      //   setNewCall(false);\r\n      //   setAcceptCall(false);\r\n      await setRinger(0);\r\n    };\r\n\r\n    //   setNewCall(true);\r\n    // if (acceptCall) {\r\n    console.error(\"call ansered\");\r\n    // }\r\n    session.on(\"connecting\", async function () {\r\n      console.error(\"CONNECT\");\r\n      await setRinger(1);\r\n    });\r\n    session.on(\"peerconnection\", function (e) {\r\n      console.error(\"1accepted\");\r\n      // add_stream();\r\n    });\r\n    session.on(\"ended\", completeSession);\r\n    session.on(\"failed\", completeSession);\r\n    session.on(\"accepted\", async function (e) {\r\n      // setNewCall(false);\r\n      console.error(\"accepted\");\r\n      await setRinger(2);\r\n    });\r\n    session.on(\"confirmed\", function (e) {\r\n      console.error(\"CONFIRM STREAM\");\r\n    });\r\n  };\r\n  // console.error(\"Incoming Call\");\r\n  // if (acceptCall) {\r\n\r\n  // }\r\n\r\n  ua.start();\r\n\r\n  if (socket.readyState === WebSocket.CLOSED) {\r\n    console.error(\"closed\");\r\n  }\r\n\r\n  // Register callbacks to desired call events\r\n  var eventHandlers = {\r\n    progress: function (e) {\r\n      console.error(\"call is in progress\");\r\n    },\r\n    failed: function (e) {\r\n      console.error(\"call failed with cause: \", e.cause);\r\n    },\r\n    ended: function (e) {\r\n      console.error(\"call ended with cause: \", e.cause);\r\n    },\r\n    confirmed: function (e) {\r\n      console.error(\"call confirmed\");\r\n    },\r\n    onData: function (data) {\r\n      console.error(\"On Dataaaaaa:\", data);\r\n    },\r\n  };\r\n\r\n  function callAsterisk(numTels) {\r\n    var options = {\r\n      eventHandlers: {\r\n        onData: function (data) {\r\n          console.error(data);\r\n        },\r\n        failed: function (e) {\r\n          console.log(\"call failed with cause: \" + e.cause);\r\n        },\r\n        ended: function (e) {\r\n          console.log(\"call ended with cause: \" + e.cause);\r\n        },\r\n        confirmed: function (e) {\r\n          console.log(\"call confirmed\");\r\n        },\r\n      },\r\n    };\r\n\r\n    var numTel = numTels.toString();\r\n    // var num = \"200\";\r\n    console.error(numTel);\r\n    ua.call(numTel, options);\r\n    add_stream();\r\n  }\r\n\r\n  function add_stream() {\r\n    session.connection.addEventListener(\"addstream\", function (e) {\r\n      remoteAudio.srcObject = e.stream;\r\n      // remoteView.srcObject = e.stream;\r\n      // selfView.srcObject = session.connection.getLocalStreams()[0];\r\n    });\r\n  }\r\n\r\n  const send_message = async () => {\r\n    // console.error(text);\r\n    var num1 = num.toString();\r\n    var eventHandlers = {\r\n      succeeded: function (e) {\r\n        console.error(\"successfull Msg Sent\");\r\n      },\r\n      failed: function (e) {\r\n        console.error(e);\r\n        Beep4();\r\n        console.error(\"Something Went Wrong\");\r\n      },\r\n    };\r\n\r\n    var options = {\r\n      eventHandlers: eventHandlers,\r\n    };\r\n    await ua.sendMessage(num1, msg, options);\r\n  };\r\n\r\n  /**\r\n   * Caller Tune Baby\r\n   */\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: open ? \"60vh\" : \"95vh\",\r\n          left: \"80vw\",\r\n          zIndex: 20,\r\n          width: \"20vw\",\r\n          height: \"40vh\",\r\n          background: \"white\",\r\n          color: \"#666699\",\r\n          border: \"1px solid #fff\",\r\n        }}\r\n      >\r\n        {/* <div style={{ height: \"5vh\", verticalAlign: \"middle\" }}>\r\n          <div\r\n            style={{\r\n              //   padding: \"10px\",\r\n              background: \"#666699\",\r\n              color: \"#fff\",\r\n              border: \"1px solid #fff\",\r\n              fontSize: \"16px\",\r\n              height: \"5vh\",\r\n              verticalAlign: \"middle\",\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-comments\"></i> &nbsp; Bilal Bhatti\r\n            </span>\r\n          </div>\r\n        </div> */}\r\n        <div\r\n          style={{\r\n            marginTop: \"0px\",\r\n            // marginBottom: \"5vh\",\r\n            overflow: \"auto\",\r\n            height: \"40vh\",\r\n            verticalAlign: \"down\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: \"5vh\",\r\n              padding: \"1.5vh\",\r\n              background: \"#666699\",\r\n              color: \"#fff\",\r\n              verticalAlign: \"middle\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              zIndex: 30,\r\n            }}\r\n            className=\"btn-block\"\r\n          >\r\n            <i className=\"fa fa-comments\" onClick={down}></i>\r\n            &nbsp; Bilal Bhatti\r\n            <span className=\"pull-right\">\r\n              {\" \"}\r\n              <i\r\n                style={{\r\n                  display: answerCallDisplay,\r\n                  color: \"green\",\r\n                  fontSize: \"18px\",\r\n                  textShadow: \"0px 0px 2px #fff\",\r\n                  paddingRight: 10,\r\n                }}\r\n                onClick={() => answerCall(localSession)}\r\n                className={\"fa fa-phone\"}\r\n              ></i>\r\n              <i\r\n                style={{\r\n                  display: answerCallDisplay,\r\n                  color: \"red\",\r\n                  fontSize: \"18px\",\r\n                  paddingRight: 10,\r\n                  textShadow: \"0px 0px 2px #fff\",\r\n                }}\r\n                onClick={() => dropCall(localSession)}\r\n                className={\"fa fa-phone\"}\r\n              ></i>\r\n              <i\r\n                style={{\r\n                  color: \"white\",\r\n                  fontSize: \"18px\",\r\n                  textShadow: \"0px 0px 2px #fff\",\r\n                }}\r\n                onClick={() => Call()}\r\n                className={\"fa fa-\" + getIcon()}\r\n              ></i>{\" \"}\r\n              &nbsp;{\" \"}\r\n              <i\r\n                style={{\r\n                  color: \"white\",\r\n                  fontSize: \"18px\",\r\n                  textShadow: \"0px 0px 2px #fff\",\r\n                }}\r\n                className=\"fa fa-minus\"\r\n                onClick={() => setOpen((item) => !item)}\r\n              ></i>\r\n            </span>\r\n            <div className=\"clearfix\"></div>\r\n          </div>\r\n          <div\r\n            ref={chatti}\r\n            style={{ marginTop: \"5vh\", marginBottom: \"5vh\", overflow: \"auto\" }}\r\n          >\r\n            {recievedMsgs()}\r\n          </div>\r\n          <div\r\n            style={{\r\n              height: \"5vh\",\r\n              //   padding: \"1.5vh\",\r\n              background: \"#666699\",\r\n              color: \"#fff\",\r\n              verticalAlign: \"middle\",\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              left: 0,\r\n              zIndex: 30,\r\n            }}\r\n            className=\"btn-block\"\r\n          >\r\n            <input\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"5vh\",\r\n                border: 0,\r\n                outline: 0,\r\n                background: \"#eee\",\r\n                color: \"#666699\",\r\n                padding: \"1.5vh\",\r\n                borderTop: \"2px solid #666699\",\r\n              }}\r\n              value={msg}\r\n              type=\"text\"\r\n              className=\"\"\r\n              placeholder=\" Type Here ... \"\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  send();\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                setMsg(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chatbox);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\ResponderView\\ResponderView.jsx",["2076","2077","2078","2079","2080","2081","2082","2083"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Services\\Services.jsx",["2084","2085","2086","2087"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Natures\\Natures.jsx",["2088","2089","2090","2091"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\GeoView\\GeoView.jsx",["2092","2093","2094","2095","2096","2097"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Profile\\Profile.jsx",["2098","2099","2100","2101"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Geo\\Geo.jsx",["2102","2103","2104","2105","2106","2107","2108"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Customers\\Customers.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Applications\\Applications.jsx",["2109","2110","2111","2112","2113","2114"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Logs\\Logs.jsx",["2115","2116","2117","2118","2119","2120","2121","2122","2123"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Panics\\Panics.jsx",["2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147","2148","2149","2150","2151"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Responders\\Responders.jsx",["2152","2153","2154","2155","2156","2157","2158","2159","2160","2161","2162","2163","2164","2165","2166","2167","2168","2169"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Groups\\Groups.jsx",["2170","2171","2172"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Subscriptions\\Subscriptions.jsx",["2173","2174","2175","2176"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Priorities\\Priorities.jsx",["2177","2178","2179","2180","2181"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Natures\\Natures.jsx",["2182","2183","2184","2185"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Services\\Services.jsx",["2186","2187","2188","2189"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\Beeper\\Beeper.js",["2190"],"import { Howl, Howler } from \"howler\";\r\n\r\nvar sound1 = new Howl({\r\n  src: [\"/beep-07.mp3\"],\r\n  autoplay: false,\r\n  loop: false,\r\n  volume: 1,\r\n  onend: function () {\r\n    console.log(\"Just Beeped 1 ! \");\r\n  },\r\n});\r\n\r\nvar sound2 = new Howl({\r\n  src: [\"/button-1.mp3\"],\r\n  autoplay: false,\r\n  loop: false,\r\n  volume: 1,\r\n  onend: function () {\r\n    console.log(\"Just Beeped 2 ! \");\r\n  },\r\n});\r\n\r\nvar sound3 = new Howl({\r\n  src: [\"/button-2.mp3\"],\r\n  autoplay: false,\r\n  loop: false,\r\n  volume: 1,\r\n  onend: function () {\r\n    console.log(\"Just Beeped 3 ! \");\r\n  },\r\n});\r\n\r\nvar sound4 = new Howl({\r\n  src: [\"/button-10.mp3\"],\r\n  autoplay: false,\r\n  loop: false,\r\n  volume: 1,\r\n  onend: function () {\r\n    console.log(\"Just Beeped 4 ! \");\r\n  },\r\n});\r\n\r\nexport const Beep1 = async () => await sound1.play();\r\nexport const Beep2 = async () => await sound2.play();\r\nexport const Beep3 = async () => await sound3.play();\r\nexport const Beep4 = async () => await sound4.play();\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Chatbox\\Msg.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\containers\\TobMenu\\TopMenu.jsx",["2191","2192","2193"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeZoom } from \"./../../actions/index\";\r\n\r\nconst TopMenu = (props) => {\r\n  return (\r\n    <>\r\n      <nav\r\n        className=\"navbar navbar-default sharp-border theme\"\r\n        style={{ marginBottom: \"-15px\", zIndex: 10 }}\r\n      >\r\n        <div\r\n          className=\"container-fluid\"\r\n          style={{ borderBottom: \"1px solid #fff\" }}\r\n        >\r\n          <div className=\"navbar-header\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"navbar-toggle collapsed\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbar\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"navbar\"\r\n            >\r\n              <span className=\"sr-only\">Toggle navigation</span>\r\n              <span className=\"icon-bar\"></span>\r\n              <span className=\"icon-bar\"></span>\r\n              <span className=\"icon-bar\"></span>\r\n            </button>\r\n            <a className=\"navbar-brand\">\r\n              <b>\r\n                <span>\r\n                  <i className=\"fa fa-gears\"></i>&nbsp;\r\n                </span>\r\n                <span className=\"font\"> {props.title} </span>\r\n              </b>\r\n            </a>\r\n          </div>\r\n          <div id=\"navbar\" className=\"navbar-collapse collapse\">\r\n            {props.children}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopMenu;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Chatbox\\Msg.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Caller\\Caller.jsx",["2194","2195","2196","2197","2198","2199","2200","2201"],"import React, { useEffect, useState } from \"react\";\r\n// import { sipPropType } from \"react-sip\";\r\nimport JsSIP from \"jssip\";\r\n\r\nconst Caller = () => {\r\n  // Create our JsSIP instance and run it:\r\n\r\n  const [text, setText] = useState(\"\"); // saving msg\r\n  const [num, setNum] = useState(\"\"); // number to send msg on\r\n  const [newCall, setNewCall] = useState(false); //\r\n  const [showChat, setShowChat] = useState(false); // Display Chat box\r\n  const [acceptCall, setAcceptCall] = useState(false); // Weather to accept call or not\r\n  const [msg, setMsg] = useState([]); //\r\n\r\n  const DisplayMsg = () => {\r\n    if (msg.length > 0) {\r\n      return msg.map((m) => <p> {m} </p>);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const _acceptCall = (session) => {\r\n    //\r\n    setAcceptCall(true);\r\n  };\r\n\r\n  const _handleSms = (body) => {\r\n    setMsg((msg) => [...msg, body]);\r\n    if (!showChat) {\r\n      setShowChat(true);\r\n    }\r\n  };\r\n\r\n  const _hideChat = () => {\r\n    if (showChat) {\r\n      setShowChat(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(\"callled\");\r\n  }, [msg]);\r\n\r\n  var socket = new JsSIP.WebSocketInterface(\"wss://ss.dextrologix.com:8089/ws\");\r\n  var configuration = {\r\n    sockets: socket,\r\n    uri: \"6001@ss.dextrologix.com\",\r\n    password: \"60011234\",\r\n    use_preloaded_route: true,\r\n  };\r\n  var remoteAudio = new window.Audio();\r\n  remoteAudio.autoplay = true;\r\n\r\n  const mediaSource = new MediaSource();\r\n\r\n  var selfView = document.getElementById(\"selfView\");\r\n  var remoteView = document.getElementById(\"remoteView\");\r\n\r\n  var ua = new JsSIP.UA(configuration);\r\n\r\n  ua.on(\"connected\", function (e) {\r\n    // console.log(\"Socket Connected.\");\r\n  });\r\n\r\n  ua.on(\"disconnected\", function (e) {\r\n    console.log(\"Socket Closed. \");\r\n  });\r\n\r\n  ua.on(\"registered\", function (e) {\r\n    // console.log(\"Registered.\");\r\n  });\r\n  ua.on(\"unregistered\", function (e) {\r\n    // console.log(\"Unregistered.\");\r\n  });\r\n  ua.on(\"registrationFailed\", function (e) {\r\n    // console.log(\"Registeration Failed\");\r\n  });\r\n\r\n  ua.on(\"newMessage\", function (e) {\r\n    console.log(\"new Message\", e);\r\n    if (typeof e.request.body === \"string\") {\r\n      if (e.originator === \"remote\") {\r\n        _handleSms(e.request.body);\r\n        // setMsg([...msg, e.request.body]);\r\n        // if (!showChat) {\r\n        //   setShowChat(true);\r\n        // }\r\n      } else if (e.originator === \"local\") {\r\n        // local msg\r\n      }\r\n    }\r\n  });\r\n\r\n  var session;\r\n\r\n  ua.on(\"newRTCSession\", function (ev) {\r\n    var newSession = ev.session;\r\n\r\n    if (session) {\r\n      // hangup any existing call\r\n      session.terminate();\r\n    }\r\n    session = newSession;\r\n    var completeSession = function () {\r\n      console.log(\"session trunacated\");\r\n      session = null;\r\n      setNewCall(false);\r\n      setAcceptCall(false);\r\n    };\r\n\r\n    if (session.direction === \"outgoing\") {\r\n      console.log(\"stream outgoing  -------->\");\r\n      session.on(\"connecting\", function () {\r\n        console.log(\"CONNECT\");\r\n      });\r\n      session.on(\"peerconnection\", function (e) {\r\n        console.log(\"1accepted\");\r\n      });\r\n      session.on(\"ended\", completeSession);\r\n      session.on(\"failed\", completeSession);\r\n      session.on(\"accepted\", function (e) {\r\n        console.log(\"accepted\");\r\n      });\r\n      session.on(\"confirmed\", function (e) {\r\n        console.log(\"CONFIRM STREAM\");\r\n      });\r\n    }\r\n\r\n    if (session.direction === \"incoming\") {\r\n    //   setNewCall(true);\r\n      // if (acceptCall) {\r\n      console.log(\"call ansered\");\r\n      session.answer(options);\r\n      // }\r\n      console.log(\"stream incoming  -------->\");\r\n      session.on(\"connecting\", function () {\r\n        console.log(\"CONNECT\");\r\n      });\r\n      session.on(\"peerconnection\", function (e) {\r\n        console.log(\"1accepted\");\r\n        add_stream();\r\n      });\r\n      session.on(\"ended\", completeSession);\r\n      session.on(\"failed\", completeSession);\r\n      session.on(\"accepted\", function (e) {\r\n        // setNewCall(false);\r\n        console.log(\"accepted\");\r\n      });\r\n      session.on(\"confirmed\", function (e) {\r\n        console.log(\"CONFIRM STREAM\");\r\n      });\r\n      var options = {\r\n        mediaConstraints: { audio: true, video: true },\r\n        pcConfig: {\r\n          rtcpMuxPolicy: \"require\",\r\n          iceServers: [],\r\n        },\r\n      };\r\n    }\r\n  });\r\n\r\n  // console.log(\"Incoming Call\");\r\n  // if (acceptCall) {\r\n\r\n  // }\r\n\r\n  ua.start();\r\n\r\n  if (socket.readyState === WebSocket.CLOSED) {\r\n    console.log(\"closed\");\r\n  }\r\n\r\n  // Register callbacks to desired call events\r\n  var eventHandlers = {\r\n    progress: function (e) {\r\n      console.log(\"call is in progress\");\r\n    },\r\n    failed: function (e) {\r\n      console.log(\"call failed with cause: \", e.cause);\r\n    },\r\n    ended: function (e) {\r\n      console.log(\"call ended with cause: \", e.cause);\r\n    },\r\n    confirmed: function (e) {\r\n      console.log(\"call confirmed\");\r\n    },\r\n  };\r\n\r\n  function callAsterisk(numTels) {\r\n    var options = {\r\n      mediaConstraints: { audio: true, video: true },\r\n      pcConfig: {\r\n        rtcpMuxPolicy: \"require\",\r\n        iceServers: [],\r\n      },\r\n    };\r\n\r\n    var numTel = numTels.toString();\r\n    var num = \"200\";\r\n    console.log(numTel);\r\n    ua.call(numTel, options);\r\n    add_stream();\r\n  }\r\n\r\n  function add_stream() {\r\n    session.connection.addEventListener(\"addstream\", function (e) {\r\n      remoteAudio.srcObject = e.stream;\r\n      // remoteView.srcObject = e.stream;\r\n      // selfView.srcObject = session.connection.getLocalStreams()[0];\r\n    });\r\n  }\r\n\r\n  function send_message() {\r\n    console.log(text);\r\n    var num1 = num.toString();\r\n    var eventHandlers = {\r\n      succeeded: function (e) {\r\n        console.log(\"successfull Msg Sent\");\r\n      },\r\n      failed: function (e) {\r\n        console.log(e);\r\n\r\n        console.log(\"Something Went Wrong\");\r\n      },\r\n    };\r\n\r\n    var options = {\r\n      eventHandlers: eventHandlers,\r\n    };\r\n    ua.sendMessage(num1, text, options);\r\n  }\r\n\r\n  // console.log(session);\r\n  return (\r\n    <>\r\n      <div>\r\n        <button className=\"btn btn-primary\" onClick={() => callAsterisk(1000)}>\r\n          {\" \"}\r\n          Call to 1001{\" \"}\r\n        </button>\r\n      </div>\r\n      <div>\r\n        {newCall ? (\r\n          <button className=\"btn btn-success\" onClick={() => _acceptCall()}>\r\n            Accept Call\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n      <input type=\"text\" name=\"msg\" onChange={(e) => setText(e.target.value)} />\r\n      <input\r\n        placeholder=\"Number\"\r\n        type=\"text\"\r\n        name=\"num\"\r\n        onChange={(e) => setNum(e.target.value)}\r\n      />\r\n      <button onClick={() => send_message()}> Send </button>\r\n      <div>\r\n        <DisplayMsg />\r\n      </div>\r\n      <div>\r\n        {\" \"}\r\n        <video\r\n          style={{ border: \"2px solid black\" }}\r\n          width=\"200\"\r\n          id=\"selfView\"\r\n          autoPlay={true}\r\n          muted={true}\r\n        ></video>\r\n        <video\r\n          style={{ border: \"2px solid black\" }}\r\n          width=\"200\"\r\n          autoPlay={true}\r\n          id=\"remoteView\"\r\n        ></video>{\" \"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Caller;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\ResponderView\\Create\\Create.jsx",["2202","2203","2204","2205","2206","2207","2208","2209"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetAllResponder,\r\n  CreateTraccarResponders,\r\n  UpdateTraccarResponders,\r\n  // CreateResponders,\r\n  UserLogout,\r\n  GetTraccarGroups,\r\n} from \"../../../../../../actions/index\";\r\nimport _ from \"lodash\";\r\nimport uniqid from \"uniqid\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Traccar Reponders Create\");\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  // const [duration, setDuration] = useState(\"\");\r\n  // const [serviceId, setServiceId] = useState(\"\");\r\n  // const [userAllowed, setUserAllowed] = useState(0);\r\n  // const [deviceAllowed, setDeviceAllowed] = useState(0);\r\n\r\n  const init = async () => {\r\n    // await props.getServices();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    console.error(\"Create Panel\");\r\n    let data = props.traccarResponders.filter((item) => item.id == props.id);\r\n    if (data.length > 0) {\r\n      data = data[0] || null;\r\n      if (data != null) {\r\n        setName(data.title);\r\n        setStatus(data.status);\r\n        setPhone(data.phone);\r\n        // setDuration(data.duration);\r\n        // setUserAllowed(data.usersAllowed);\r\n        // setDeviceAllowed(data.devicesAllowed);\r\n        // setServiceId(data.serviceId);\r\n      } else {\r\n        // console.error(\"No Traccar Data\");\r\n      }\r\n    } else {\r\n      // console.error(\"No Traccar Found Error 2\");\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  // const fetchServices = () => {\r\n  //   return props.services.map((item, index) => {\r\n  //     return (\r\n  //       <React.Fragment key={index}>\r\n  //         <option value={item.id}> {item.name} </option>\r\n  //       </React.Fragment>\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  const Empty = () => {\r\n    if (id != \"\") {\r\n      setId(\"\");\r\n    }\r\n    setName(\"\");\r\n    setStatus(\"\");\r\n    setPhone(\"\");\r\n    setPassword(\"\");\r\n    // setCost(\"\");\r\n    // setDuration(\"\");\r\n    // setUserAllowed(\"\");\r\n    // setDeviceAllowed(\"\");\r\n    // setServiceId(\"\");\r\n    // setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    console.error(\"Saved: \", { name, status, phone, id });\r\n    if (id != \"\") {\r\n      await props.updateTraccarResponders(props.id, {\r\n        name,\r\n        status,\r\n        phone,\r\n        disabled: true,\r\n        lastUpdate: new Date(),\r\n        // positionId: 1,\r\n        groupId: 1,\r\n        model: \"Dummy\",\r\n        contact: \"\",\r\n        category: \"\",\r\n        geofenceIds: [],\r\n        attributes: {},\r\n      });\r\n    } else {\r\n      console.error(\"Creating\");\r\n      await props.createTraccarResponders(\r\n        {\r\n          name,\r\n          status,\r\n          phone,\r\n          uniqueId: Math.round(Math.random() * 1000000).toString(), // uniqid(),\r\n          disabled: false,\r\n          // lastUpdate: new Date(),\r\n          // positionId: \"0\",\r\n          // groupId: 1,\r\n          model: \"Dummy\",\r\n          contact: \"\",\r\n          category: \"\",\r\n          geofenceIds: [],\r\n          attributes: {},\r\n        },\r\n        password\r\n      );\r\n      // await props.createResponders({\r\n      //   firstname: name,\r\n      //   lastname: name,\r\n      //   contact: phone,\r\n      //   password: password,\r\n      // });\r\n    }\r\n    setTimeout(() => {\r\n      props.getAllResponder();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Status \"\r\n          className=\"form-control\"\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Phone \"\r\n          className=\"form-control\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\" Enter Password \"\r\n          className=\"form-control\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <br />\r\n\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  traccarResponders: [\r\n    ...state.onlineResponders,\r\n    ...state.unknownResponders,\r\n    ...state.offlineResponders,\r\n  ],\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getAllResponder: () => GetAllResponder(dispatch),\r\n  createTraccarResponders: (data, pass) =>\r\n    CreateTraccarResponders(dispatch, data, pass),\r\n  // createResponders: (data) => CreateResponders(dispatch, data),\r\n  updateTraccarResponders: (id, data) =>\r\n    UpdateTraccarResponders(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Supervisor\\Create\\Create.jsx",["2210","2211","2212","2213","2214"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetUsers,\r\n  CreateSupervisor,\r\n  UpdateUsers,\r\n  UserLogout,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Supervisor Create\");\r\n\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [groupId, setGroupId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let data = props.supervisors.filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setFirstname(data.firstname);\r\n      setLastname(data.lastname);\r\n      setContact(data.contact);\r\n      setEmail(data.email);\r\n      setPassword(data.password);\r\n      setGroupId(data.groupId);\r\n    }\r\n    return;\r\n  }, [props.supervisors]);\r\n\r\n  const getGroups = () => {\r\n    return props.groups.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setFirstname(\"\");\r\n    setLastname(\"\");\r\n    setContact(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    if (props.id != \"\") {\r\n      await props.updateUsers(props.id, {\r\n        firstname,\r\n        lastname,\r\n        contact,\r\n        email,\r\n        password,\r\n        groupId,\r\n      });\r\n    } else {\r\n      await props.createSupervisor({\r\n        firstname,\r\n        lastname,\r\n        contact,\r\n        email,\r\n        password,\r\n        groupId,\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      props.getUsers();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter First Name \"\r\n          className=\"form-control\"\r\n          value={firstname}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Last Name \"\r\n          className=\"form-control\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Contact \"\r\n          className=\"form-control\"\r\n          value={contact}\r\n          onChange={(e) => setContact(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Email \"\r\n          className=\"form-control\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\" Enter Password \"\r\n          className=\"form-control\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          value={groupId}\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br />\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n  supervisors: state.supervisors,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  createSupervisor: (data) => CreateSupervisor(dispatch, data),\r\n  updateUsers: (id, data) => UpdateUsers(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Supervisor\\List\\List.jsx",["2215","2216","2217","2218"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetUsers,\r\n  DelUsers,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst List = (props) => {\r\n  console.log(\"Supervisor - Supervisor List\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const del = async (id) => {\r\n    await props.delUsers(id);\r\n    setTimeout(() => {\r\n      props.getUsers();\r\n    }, 500);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    props.setId(id);\r\n    props.setPage(\"add\");\r\n  };\r\n\r\n  const getTableData = () => {\r\n    return props.supervisors.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td> {item.password} </td>\r\n            <td> {item.groupId} </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ height: \"400px\", overflow: \"auto\" }}>\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Password </th>\r\n                <th> Group </th>\r\n                <th> - </th>\r\n                <th> - </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData()}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return <>{getTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n  supervisors: state.supervisors,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  delUsers: (id) => DelUsers(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\containers\\TobMenu\\TopMenu2.jsx",["2219","2220","2221"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeZoom } from \"../../actions/index\";\r\n\r\nconst TopMenu2 = (props) => {\r\n  return (\r\n    <>\r\n      <nav\r\n        className=\"navbar navbar-default sharp-border theme2\"\r\n        style={{ marginBottom: \"-15px\", zIndex: 10 }}\r\n      >\r\n        <div\r\n          className=\"container-fluid\"\r\n          style={{ borderBottom: \"1px solid #fff\" }}\r\n        >\r\n          <div className=\"navbar-header\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"navbar-toggle collapsed\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbar\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"navbar\"\r\n            >\r\n              <span className=\"sr-only\">Toggle navigation</span>\r\n              <span className=\"icon-bar\"></span>\r\n              <span className=\"icon-bar\"></span>\r\n              <span className=\"icon-bar\"></span>\r\n            </button>\r\n            <a className=\"navbar-brand\">\r\n              <b>\r\n                <span>\r\n                  <i className=\"fa fa-gears\"></i>&nbsp;\r\n                </span>\r\n                <span className=\"font\"> {props.title} </span>\r\n              </b>\r\n            </a>\r\n          </div>\r\n          <div id=\"navbar\" className=\"navbar-collapse collapse\">\r\n            {props.children}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopMenu2;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Natures\\Create\\Create.jsx",["2222","2223","2224","2225","2226","2227","2228"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetNatures,\r\n  CreateNatures,\r\n  UpdateNatures,\r\n  UserLogout,\r\n  GetTraccarGroups,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Natures Create\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  // const [groupId, setGroupId] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getTraccarGroups();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    let data = props.natures.filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setName(data.name);\r\n      // setGroupId(data.groupId);\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  // const getGroups = () => {\r\n  //   return props.groups.map((item, index) => {\r\n  //     return (\r\n  //       <React.Fragment key={index}>\r\n  //         <option value={item.id}> {item.name} </option>\r\n  //       </React.Fragment>\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setName(\"\");\r\n\r\n    // setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    if (props.id != \"\") {\r\n      await props.updateNatures(props.id, {\r\n        name,\r\n        // userId: 1, // Number(groupId) == 0 ? 1 : Number(groupId),\r\n      });\r\n    } else {\r\n      await props.createNatures({\r\n        name,\r\n        // userId: 1, // Number(groupId) == 0 ? 1 : Number(groupId),\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      props.getNatures();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter First Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n\r\n        {/* <select\r\n          className=\"form-control\"\r\n          value={groupId}\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br /> */}\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n  // admin: state.admin,\r\n  natures: state.natures,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getNatures: () => GetNatures(dispatch),\r\n  // getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n  createNatures: (data) => CreateNatures(dispatch, data),\r\n  updateNatures: (id, data) => UpdateNatures(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Caller\\Caller.jsx",["2229","2230","2231","2232","2233","2234","2235","2236"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Natures\\List\\List.jsx",["2237","2238","2239","2240"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetNatures,\r\n  DelNatures,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst List = (props) => {\r\n  console.log(\"Supervisor - Natures List\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const del = async (id) => {\r\n    await props.delNatures(id);\r\n    setTimeout(() => {\r\n      props.getNatures();\r\n    }, 500);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    props.setId(id);\r\n    props.setPage(\"add\");\r\n  };\r\n\r\n  const getTableData = () => {\r\n    return props.natures.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.name} </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ height: \"400px\", overflow: \"auto\" }}>\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> - </th>\r\n                <th> - </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData()}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return <>{getTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  natures: state.natures,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getNatures: () => GetNatures(dispatch),\r\n  delNatures: (id) => DelNatures(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Services\\List\\List.jsx",["2241","2242","2243","2244"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetServices,\r\n  DelServices,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst List = (props) => {\r\n  console.log(\"Supervisor - Services List\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const del = async (id) => {\r\n    await props.delServices(id);\r\n    setTimeout(() => {\r\n      props.getServices();\r\n    }, 500);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    props.setId(id);\r\n    props.setPage(\"add\");\r\n  };\r\n\r\n  const getTableData = () => {\r\n    return props.services.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.name} </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ height: \"400px\", overflow: \"auto\" }}>\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> - </th>\r\n                <th> - </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData()}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return <>{getTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  services: state.services,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getServices: () => GetServices(dispatch),\r\n  delServices: (id) => DelServices(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Services\\Create\\Create.jsx",["2245","2246","2247","2248","2249","2250","2251"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetServices,\r\n  CreateServices,\r\n  UpdateServices,\r\n  UserLogout,\r\n  GetTraccarGroups,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Services Create\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [groupId, setGroupId] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getTraccarGroups();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    let data = props.services.filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setName(data.name);\r\n      setGroupId(data.groupId);\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  const getGroups = () => {\r\n    return props.groups.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setName(\"\");\r\n\r\n    setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    if (props.id != \"\") {\r\n      await props.updateServices(props.id, {\r\n        name,\r\n        userId: 1, // Number(groupId) == 0 ? 1 : Number(groupId),\r\n      });\r\n    } else {\r\n      await props.createServices({\r\n        name,\r\n        userId: 1, // Number(groupId) == 0 ? 1 : Number(groupId),\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      props.getServices();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter First Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n\r\n        <select\r\n          className=\"form-control\"\r\n          value={groupId}\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br />\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n  // admin: state.admin,\r\n  services: state.services,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getServices: () => GetServices(dispatch),\r\n  // getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n  createServices: (data) => CreateServices(dispatch, data),\r\n  updateServices: (id, data) => UpdateServices(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Operator\\Create\\Create.jsx",["2252","2253","2254","2255","2256"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetUsers,\r\n  CreateOperator,\r\n  UpdateUsers,\r\n  UserLogout,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Operator Create\");\r\n\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [groupId, setGroupId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let data = props.operators.filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setFirstname(data.firstname);\r\n      setLastname(data.lastname);\r\n      setContact(data.contact);\r\n      setEmail(data.email);\r\n      setPassword(data.password);\r\n      setGroupId(data.groupId);\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  const getGroups = () => {\r\n    return props.groups.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setFirstname(\"\");\r\n    setLastname(\"\");\r\n    setContact(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    if (props.id != \"\") {\r\n      await props.updateUsers(props.id, {\r\n        firstname,\r\n        lastname,\r\n        contact,\r\n        email,\r\n        password,\r\n        groupId,\r\n      });\r\n    } else {\r\n      await props.createOperator({\r\n        firstname,\r\n        lastname,\r\n        contact,\r\n        email,\r\n        password,\r\n        groupId,\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      props.getUsers();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter First Name \"\r\n          className=\"form-control\"\r\n          value={firstname}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Last Name \"\r\n          className=\"form-control\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Contact \"\r\n          className=\"form-control\"\r\n          value={contact}\r\n          onChange={(e) => setContact(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Email \"\r\n          className=\"form-control\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\" Enter Password \"\r\n          className=\"form-control\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          value={groupId}\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br />\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n  operators: state.operators,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  createOperator: (data) => CreateOperator(dispatch, data),\r\n  updateUsers: (id, data) => UpdateUsers(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Operator\\List\\List.jsx",["2257","2258","2259","2260","2261","2262","2263"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetUsers,\r\n  DelUsers,\r\n} from \"../../../../../../actions/index\";\r\nimport _ from \"lodash\";\r\n\r\nconst List = (props) => {\r\n  console.log(\"Supervisor - Operator List\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const del = async (id) => {\r\n    await props.delUsers(id);\r\n    setTimeout(() => {\r\n      props.getUsers();\r\n    }, 500);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    props.setId(id);\r\n    props.setPage(\"add\");\r\n  };\r\n\r\n  // const getOperss = () => {\r\n  //   let groupIds = props.groups.map((item) => item.id);\r\n  //   let result = props.operators.filter((item) => {\r\n  //     let group = Number(item.groupId);\r\n  //     if (_.includes(groupIds, group)) {\r\n  //       return true;\r\n  //     } else {\r\n  //       return false;\r\n  //     }\r\n  //   });\r\n  //   console.error(result);\r\n  //   return result;\r\n  // };\r\n\r\n  const getTableData = () => {\r\n    return props.operators.map((item, index) => {\r\n      let color = item.userActivation == 1 ? \"lightgreen\" : \"#eee\";\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr style={{ background: color }}>\r\n            <td> {item.id} </td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td> {item.password} </td>\r\n            <td> {item.groupId} </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ height: \"400px\", overflow: \"auto\" }}>\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Password </th>\r\n                <th> Group </th>\r\n                <th> - </th>\r\n                <th> - </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData()}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return <>{getTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups.filter((item) => item.groupId == state.logger.groupId),\r\n  operators: state.operators,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  delUsers: (id) => DelUsers(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\ResponderView\\Create\\Create.jsx",["2264","2265","2266","2267","2268","2269","2270","2271","2272","2273"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetAllResponder,\r\n  CreateTraccarResponders,\r\n  UpdateTraccarResponders,\r\n  // CreateResponders,\r\n  UserLogout,\r\n  GetTraccarGroups,\r\n} from \"../../../../../../actions/index\";\r\nimport _ from \"lodash\";\r\nimport uniqid from \"uniqid\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Traccar Reponders Create\");\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [groupId, setGroupId] = useState(\"\");\r\n  // const [duration, setDuration] = useState(\"\");\r\n  // const [serviceId, setServiceId] = useState(\"\");\r\n  // const [userAllowed, setUserAllowed] = useState(0);\r\n  // const [deviceAllowed, setDeviceAllowed] = useState(0);\r\n\r\n  const init = async () => {\r\n    // await props.getServices();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    console.error(\"Create Panel\");\r\n    let data = props.traccarResponders.filter((item) => item.id == props.id);\r\n    if (data.length > 0) {\r\n      data = data[0] || null;\r\n      if (data != null) {\r\n        setName(data.title);\r\n        setStatus(data.status);\r\n        setPhone(data.phone);\r\n        setGroupId(data.groupId);\r\n        // setDuration(data.duration);\r\n        // setUserAllowed(data.usersAllowed);\r\n        // setDeviceAllowed(data.devicesAllowed);\r\n        // setServiceId(data.serviceId);\r\n      } else {\r\n        // console.error(\"No Traccar Data\");\r\n      }\r\n    } else {\r\n      // console.error(\"No Traccar Found Error 2\");\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  // const fetchServices = () => {\r\n  //   return props.services.map((item, index) => {\r\n  //     return (\r\n  //       <React.Fragment key={index}>\r\n  //         <option value={item.id}> {item.name} </option>\r\n  //       </React.Fragment>\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  const Empty = () => {\r\n    if (id != \"\") {\r\n      setId(\"\");\r\n    }\r\n    setName(\"\");\r\n    setStatus(\"\");\r\n    setPhone(\"\");\r\n    setPassword(\"\");\r\n    setGroupId(\"\");\r\n    // setCost(\"\");\r\n    // setDuration(\"\");\r\n    // setUserAllowed(\"\");\r\n    // setDeviceAllowed(\"\");\r\n    // setServiceId(\"\");\r\n    // setGroupId(\"\");\r\n  };\r\n\r\n  const getGroups = () => {\r\n    return props.groups.reverse().map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    console.error(\"Saved: \", { name, status, phone, id });\r\n    if (id != \"\") {\r\n      await props.updateTraccarResponders(props.id, {\r\n        name,\r\n        status,\r\n        phone,\r\n        disabled: true,\r\n        lastUpdate: new Date(),\r\n        // positionId: 1,\r\n        groupId: 1,\r\n        model: \"Dummy\",\r\n        contact: \"\",\r\n        category: \"\",\r\n        geofenceIds: [],\r\n        attributes: {},\r\n      });\r\n    } else {\r\n      console.error(\"Creating\");\r\n      await props.createTraccarResponders(\r\n        {\r\n          name,\r\n          status,\r\n          phone,\r\n          uniqueId: Math.round(Math.random() * 1000000).toString(), // uniqid(),\r\n          disabled: false,\r\n          // lastUpdate: new Date(),\r\n          // positionId: \"0\",\r\n          // groupId: 1,\r\n          model: \"Dummy\",\r\n          contact: \"\",\r\n          category: \"\",\r\n          geofenceIds: [],\r\n          attributes: {},\r\n        },\r\n        password\r\n      );\r\n      // await props.createResponders({\r\n      //   firstname: name,\r\n      //   lastname: name,\r\n      //   contact: phone,\r\n      //   password: password,\r\n      // });\r\n    }\r\n    setTimeout(() => {\r\n      props.getAllResponder();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 1000);\r\n  };\r\n\r\n  const groupser = () => {\r\n    let data = [...props.online, ...props.offline, ...props.unknown];\r\n    let data3 = props.groups.filter(\r\n      (item) => item.groupId == props.user.groupId\r\n    );\r\n    let data4 = data3.map((item) => item.id);\r\n    // console.error(\"Data: \", data4);\r\n    let data2 = data.filter((item) => {\r\n      try {\r\n        if (item.db != null) {\r\n          if (_.includes(data4, item.db.groupId)) {\r\n            // console.error(\r\n            //   item.db.groupId,\r\n            //   _.includes(data4, item.db.groupId)\r\n            // );\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    });\r\n    return data2;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Status \"\r\n          className=\"form-control\"\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Phone \"\r\n          className=\"form-control\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\" Enter Password \"\r\n          className=\"form-control\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          // defaultValue={groupId}\r\n          value={groupId}\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n          // disabled\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br />\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups.filter((item) => item.groupId == state.logger.groupId),\r\n  traccarResponders: [\r\n    ...state.onlineResponders,\r\n    ...state.unknownResponders,\r\n    ...state.offlineResponders,\r\n  ],\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getAllResponder: () => GetAllResponder(dispatch),\r\n  createTraccarResponders: (data, pass) =>\r\n    CreateTraccarResponders(dispatch, data, pass),\r\n  // createResponders: (data) => CreateResponders(dispatch, data),\r\n  updateTraccarResponders: (id, data) =>\r\n    UpdateTraccarResponders(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Geofence\\Map\\Map.jsx",["2274","2275","2276","2277","2278","2279","2280","2281","2282","2283"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  FetchAllGeofences,\r\n  AddGeofences,\r\n} from \"./../../../../../../actions/index\";\r\n\r\nimport MapGL, {\r\n  Marker,\r\n  FullscreenControl,\r\n  NavigationControl,\r\n} from \"@urbica/react-map-gl\";\r\nimport Draw from \"@urbica/react-map-gl-draw\";\r\n// import \"./style.css\";\r\nimport \"./../style.css\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nconst Map = (props) => {\r\n  console.log(\"Supervisor - Geofence Map\");\r\n\r\n  const [data, setData] = useState([]);\r\n  const [map, setMap] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [service, setService] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.fetchAllGeofences();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   init();\r\n  //   // let coords;\r\n  //   // coords = props.traccarGeofences.map((item) => item.coords);\r\n  //   let struct = {\r\n  //     type: \"FeatureCollection\",\r\n  //     features: [...props.traccarGeofences],\r\n  //   };\r\n  //   setData(struct);\r\n  //   return;\r\n  // }, [props.traccarGeofences]);\r\n\r\n  useEffect(() => {\r\n    if (service != \"\" && name != \"\") {\r\n      setMap(true);\r\n    } else {\r\n      setMap(false);\r\n    }\r\n  }, [service, name]);\r\n\r\n  let MAPBOX_ACCESS_TOKEN =\r\n    \"pk.eyJ1IjoiemFlZW10YXJyYXIzIiwiYSI6ImNrODF6N21kZDAxa2kzb255c3I4bnh5NWsifQ.CqUWmnyMb0nGVwAQYF0d6w\";\r\n  let mapStyle = \"mapbox://styles/mapbox/streets-v9\";\r\n\r\n  const getMap = () => {\r\n    if (map) {\r\n      return (\r\n        <MapGL\r\n          initialState={{\r\n            data: {\r\n              type: \"FeatureCollection\",\r\n              features: [],\r\n            },\r\n          }}\r\n          style={{ width: \"100%\", height: \"500px\" }}\r\n          mapStyle={mapStyle}\r\n          accessToken={MAPBOX_ACCESS_TOKEN}\r\n          latitude={props.lat || 31.4676}\r\n          longitude={props.lng || 74.3209}\r\n          zoom={props.zoom || 10}\r\n        >\r\n          <Draw\r\n            //   onDrawCreate={({ features }) => setFts(features)}\r\n            //   onDrawUpdate={({ features }) => setFts(features)}\r\n            data={{\r\n              type: \"FeatureCollection\",\r\n              features: [],\r\n            }}\r\n            onDrawSelectionChange={(data) => {\r\n              alert(\"Selected : \" + data.features[0].id);\r\n            }}\r\n            onDrawDelete={async (data) => {\r\n              // var id = data.features[0].id;\r\n              // await deleteGeofences(\"admin\", \"L@s3rjet9045\", id, async (data) => {\r\n              //   // alert(\"Deleted !\");\r\n              //   await fetchPoints();\r\n              //   status = \"del\";\r\n              // });\r\n            }}\r\n            onDrawCreate={async (d) => {\r\n              var limit = d.features.length;\r\n              if (limit - 1 == 0) {\r\n                limit = 0;\r\n              } else {\r\n                limit = limit - 1;\r\n              }\r\n              var last = d.features[limit].geometry.coordinates[0];\r\n              // console.error(last);\r\n              alert(JSON.stringify({ data: last, limit }));\r\n              //props.reset();\r\n              await props.addGeofences(service, name, last);\r\n              await props.fetchAllGeofences();\r\n              setService(\"\");\r\n              setName(\"\");\r\n            }}\r\n            onDrawUpdate={(d) => {\r\n              var id = d.features[0].id;\r\n              // if (service != 0) {\r\n              var limit = d.features.length;\r\n              if (limit - 1 == 0) {\r\n                limit = 0;\r\n              } else {\r\n                limit = limit - 1;\r\n              }\r\n              var last = d.features[limit].geometry.coordinates[0];\r\n              alert(last);\r\n              // console.error(last);\r\n              // alert(JSON.stringify({ data: last, limit }));\r\n              //props.reset();\r\n              // updateGeofences(\r\n              //   id,\r\n              //   \"admin\",\r\n              //   \"L@s3rjet9045\",\r\n              //   service,\r\n              //   name,\r\n              //   last,\r\n              //   async () => {\r\n              //     // alert(JSON.stringify(last));\r\n              //     await fetchPoints();\r\n              //     status = \"add\";\r\n              //     setService(0);\r\n              //     setMapShow(false);\r\n              //   }\r\n              // );\r\n              // }\r\n            }}\r\n            onChange={(d) => {}}\r\n          />\r\n          {/* {props.children} */}\r\n          <div className=\"nav\">\r\n            <NavigationControl />\r\n          </div>\r\n          <div className=\"fullscreen\">\r\n            <FullscreenControl />\r\n          </div>\r\n        </MapGL>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const fetchServices = () => {\r\n    return props.services.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          value={service}\r\n          onChange={(e) => setService(e.target.value)}\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {fetchServices()}\r\n        </select>\r\n        <br />\r\n      </div>\r\n      {getMap()}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  traccarGeofences: state.traccarGeofences,\r\n  services: state.services,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  fetchAllGeofences: () => FetchAllGeofences(dispatch),\r\n  addGeofences: (id, name, coords) => AddGeofences(dispatch, id, name, coords),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Users\\Create\\Create.jsx",["2284","2285","2286","2287"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetUsers,\r\n  CreateAdmin,\r\n  UpdateUsers,\r\n  UserLogout,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Super Admin Groups Create\");\r\n\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [groupId, setGroupId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let data = props.admin.filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setFirstname(data.firstname);\r\n      setLastname(data.lastname);\r\n      setContact(data.contact);\r\n      setEmail(data.email);\r\n      setPassword(data.password);\r\n      setGroupId(data.groupId);\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  const getGroups = () => {\r\n    return props.groups.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setFirstname(\"\");\r\n    setLastname(\"\");\r\n    setContact(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    if (props.id != \"\") {\r\n      await props.updateUsers(props.id, {\r\n        firstname,\r\n        lastname,\r\n        contact,\r\n        email,\r\n        password,\r\n        groupId,\r\n      });\r\n    } else {\r\n      await props.createAdmin({\r\n        firstname,\r\n        lastname,\r\n        contact,\r\n        email,\r\n        password,\r\n        groupId,\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      props.getUsers();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 300);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter First Name \"\r\n          className=\"form-control\"\r\n          value={firstname}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Last Name \"\r\n          className=\"form-control\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Contact \"\r\n          className=\"form-control\"\r\n          value={contact}\r\n          onChange={(e) => setContact(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Email \"\r\n          className=\"form-control\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\" Enter Password \"\r\n          className=\"form-control\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          value={groupId}\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br />\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n  admin: state.admin,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  createAdmin: (data) => CreateAdmin(dispatch, data),\r\n  updateUsers: (id, data) => UpdateUsers(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Groups\\Create\\Create.jsx",["2288","2289","2290","2291","2292"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetTraccarGroups,\r\n  CreateTraccarGroups,\r\n  UpdateTraccarGroups,\r\n  UserLogout,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Group Create\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [groupId, setGroupId] = useState(props.user.groupId + \"\" || \"\");\r\n\r\n  // const init = async () => {\r\n  //   let data = props.user.groupId.toString();\r\n  //   console.error(data);\r\n  //   await setGroupId();\r\n  //   // console.error(JSON.stringify(props.user.groupId), \"Group: \" + groupId);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let data = props.groups.reverse().filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setName(data.name);\r\n      setGroupId(data.groupId == 0 ? \"\" : data.groupId);\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  const getGroups = () => {\r\n    return props.groups.reverse().map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setName(\"\");\r\n    setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    // console.error({ id: props.id, name, groupId });\r\n    if (props.id != \"\") {\r\n      await props.updateTraccarGroups(props.id, { name, groupId });\r\n    } else {\r\n      await props.createTraccarGroups({ name, groupId });\r\n    }\r\n    setTimeout(() => {\r\n      props.getTraccarGroups();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          // defaultValue={groupId}\r\n          value={groupId}\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n          disabled\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br />\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups, //.filter((item) => item.groupId == state.logger.groupId),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n  createTraccarGroups: (data) => CreateTraccarGroups(dispatch, data),\r\n  updateTraccarGroups: (id, data) => UpdateTraccarGroups(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Groups\\List\\List.jsx",["2293","2294","2295","2296"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserLogout } from \"../../../../../../actions/index\";\r\nimport {\r\n  GetTraccarGroups,\r\n  DelTraccarGroups,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst List = (props) => {\r\n  console.log(\"Supervisor - Group List\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const del = async (id) => {\r\n    await props.delTraccarGroups(id);\r\n    setTimeout(() => {\r\n      props.getTraccarGroups();\r\n    }, 100);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    props.setId(id);\r\n    props.setPage(\"add\");\r\n  };\r\n\r\n  const getTableData = () => {\r\n    return props.groups.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.name} </td>\r\n            <td> {item.groupId} </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ height: \"400px\", overflow: \"auto\" }}>\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Group Id </th>\r\n                <th> - </th>\r\n                <th> - </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData()}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return <>{getTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups.filter((item) => item.groupId == state.logger.groupId),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n  delTraccarGroups: (id) => DelTraccarGroups(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Subscriptions\\Create\\Create.jsx",["2297","2298","2299","2300","2301","2302"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetSubscriptions,\r\n  CreateSubscriptions,\r\n  UpdateSubscriptions,\r\n  UserLogout,\r\n  GetServices,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Subscription Create\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [cost, setCost] = useState(\"\");\r\n  const [duration, setDuration] = useState(\"\");\r\n  const [serviceId, setServiceId] = useState(\"\");\r\n  const [userAllowed, setUserAllowed] = useState(0);\r\n  const [deviceAllowed, setDeviceAllowed] = useState(0);\r\n\r\n  const init = async () => {\r\n    // await props.getServices();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    let data = props.subscriptions.filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setName(data.title);\r\n      setDescription(data.description);\r\n      setCost(data.cost);\r\n      setDuration(data.duration);\r\n      setUserAllowed(data.usersAllowed);\r\n      setDeviceAllowed(data.devicesAllowed);\r\n      setServiceId(data.serviceId);\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  const fetchServices = () => {\r\n    return props.services.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setCost(\"\");\r\n    setDuration(\"\");\r\n    setUserAllowed(\"\");\r\n    setDeviceAllowed(\"\");\r\n    setServiceId(\"\");\r\n    // setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    if (props.id != \"\") {\r\n      await props.updateSubscriptions(props.id, {\r\n        title: name,\r\n        description,\r\n        cost,\r\n        duration,\r\n        usersAllowed: userAllowed,\r\n        devicesAllowed: deviceAllowed,\r\n        serviceId: Number(serviceId),\r\n        // userId: 1, // Number(groupId) == 0 ? 1 : Number(groupId),\r\n      });\r\n    } else {\r\n      await props.createSubscriptions({\r\n        title: name,\r\n        description,\r\n        cost,\r\n        duration,\r\n        usersAllowed: userAllowed,\r\n        devicesAllowed: deviceAllowed,\r\n        serviceId: Number(serviceId),\r\n        // userId: 1, // Number(groupId) == 0 ? 1 : Number(groupId),\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      props.getSubscriptions();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Description \"\r\n          className=\"form-control\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Cost \"\r\n          className=\"form-control\"\r\n          value={cost}\r\n          onChange={(e) => setCost(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Duration \"\r\n          className=\"form-control\"\r\n          value={duration}\r\n          onChange={(e) => setDuration(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Users Allowed \"\r\n          className=\"form-control\"\r\n          value={userAllowed}\r\n          onChange={(e) => setUserAllowed(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Devices Allowed \"\r\n          className=\"form-control\"\r\n          value={deviceAllowed}\r\n          onChange={(e) => setDeviceAllowed(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          value={serviceId}\r\n          onChange={(e) => setServiceId(e.target.value)}\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {fetchServices()}\r\n        </select>\r\n        <br />\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  services: state.services,\r\n  // admin: state.admin,\r\n  subscriptions: state.subscriptions,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getSubscriptions: () => GetSubscriptions(dispatch),\r\n  getServices: () => GetServices(dispatch),\r\n  createSubscriptions: (data) => CreateSubscriptions(dispatch, data),\r\n  updateSubscriptions: (id, data) => UpdateSubscriptions(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\StatusBar\\StatusBar.jsx",["2303"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Reports from \"../Reports/Reports\";\r\n\r\nconst StatusBar = (props) => {\r\n  console.log(\"Supervisor - Status Bar\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getSelection = () => {\r\n    if (open) {\r\n      return (\r\n        <>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">{props.panics.length} </span>\r\n            &nbsp; Panics\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">\r\n              {props.cancelledPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Cancelled Panics\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">\r\n              {props.confirmedByOperatorPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Confirmed By Operator\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">\r\n              {props.assignedToResponderPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Assigned To Responder\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">\r\n              {props.confirmedByResponderPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Confirmed By Responder\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">\r\n              {props.resolvedByResponderPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Resolved By Responder\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">\r\n              {props.resolvedByOperatorPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Resolved By Operator\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">\r\n              {props.closedBySupervisorPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Closed By Supervisor\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">\r\n              {props.closedByCustomerPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Closed By Customer\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">\r\n              {props.offline.length}{\" \"}\r\n            </span>\r\n            &nbsp; Offline Responders\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">\r\n              {props.unknown.length}{\" \"}\r\n            </span>\r\n            &nbsp; Unknown Responders\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme2\">{props.online.length} </span>\r\n            &nbsp; Online Responders:\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <span>\r\n            <center>\r\n              <i className=\"fa fa-caret-down\"></i>\r\n            </center>\r\n          </span>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid theme2\">\r\n        <div className=\"\" style={{ padding: \"10px\" }}>\r\n          <div\r\n            className=\"row\"\r\n            style={{\r\n              borderLeft: \"1px solid #fff\",\r\n              borderRight: \"1px solid #fff\",\r\n              padding: \"0px 0px 0px 0px\",\r\n            }}\r\n            onClick={() => setOpen((item) => !item)}\r\n          >\r\n            {getSelection()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  // natures: state.natures,\r\n  // priorities: state.priorities,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n  panics: state.panics,\r\n  // operators: state.operators,\r\n  // supervisors: state.supervisors,\r\n  inQueryPanics: state.inQueryPanics,\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  assignedToResponderPanics: state.assignedToResponderPanics,\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  closedByCustomerPanics: state.closedByCustomerPanics,\r\n  cancelledPanics: state.cancelledPanics,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusBar);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Subscriptions\\List\\List.jsx",["2304","2305","2306","2307"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetSubscriptions,\r\n  DelSubcriptions,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst List = (props) => {\r\n  console.log(\"Supervisor - Subscriptions List\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const del = async (id) => {\r\n    await props.delSubcriptions(id);\r\n    setTimeout(() => {\r\n      props.getSubscriptions();\r\n    }, 500);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    props.setId(id);\r\n    props.setPage(\"add\");\r\n  };\r\n\r\n  const getTableData = () => {\r\n    return props.subscriptions.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.title} </td>\r\n            <td> {item.description} </td>\r\n            <td> {item.cost} </td>\r\n            <td> {item.duration} </td>\r\n            <td> {item.usersAllowed} </td>\r\n            <td> {item.devicesAllowed} </td>\r\n            <td> {item.service.name} </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ height: \"400px\", overflow: \"auto\" }}>\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Description </th>\r\n                <th> Cost </th>\r\n                <th> Duration </th>\r\n                <th> User Allowed </th>\r\n                <th> Devices Allowed </th>\r\n                <th> Service </th>\r\n                <th> - </th>\r\n                <th> - </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData()}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return <>{getTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  subscriptions: state.subscriptions,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  detSubscriptions: () => GetSubscriptions(dispatch),\r\n  delSubcriptions: (id) => DelSubcriptions(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Users\\List\\List.jsx",["2308","2309","2310"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetUsers,\r\n  DelUsers,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst List = (props) => {\r\n  console.log(\"Super Admin Users List Component\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const del = async (id) => {\r\n    await props.delUsers(id);\r\n    setTimeout(() => {\r\n      props.getUsers();\r\n    }, 100);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    props.setId(id);\r\n    props.setPage(\"add\");\r\n  };\r\n\r\n  const getTableData = () => {\r\n    return props.admin.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td> {item.password} </td>\r\n            <td> {item.groupId} </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ height: \"400px\", overflow: \"auto\" }}>\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Password </th>\r\n                <th> Group </th>\r\n                <th> - </th>\r\n                <th> - </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData()}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return <>{getTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n  admin: state.admin,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  delUsers: (id) => DelUsers(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Reports\\Reports.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Map\\Map1.jsx",["2311","2312","2313","2314","2315","2316","2317","2318","2319","2320","2321","2322","2323","2324","2325","2326","2327","2328","2329","2330","2331","2332","2333","2334","2335","2336","2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348","2349","2350","2351","2352","2353","2354","2355","2356","2357","2358","2359","2360","2361","2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372","2373","2374","2375"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { CheckIfEmpty } from \"../../../../../Helpers/utils\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetUsers,\r\n  GetPanics,\r\n  GetNatures,\r\n  GetPriorities,\r\n  UpdatePanics,\r\n  SupervisorAcceptPanic_UpdatePanics,\r\n  SupervisorAssignPanicToRes_UpdatePanics,\r\n  SupervisorResolvePanic_UpdatePanics,\r\n  ClosePanic_UpdatePanics,\r\n  SolvePanic_UpdatePanics,\r\n  GetAllResponder,\r\n  changeZoom,\r\n  GetCenter,\r\n} from \"../../../../../actions/index\";\r\nimport ReactMapGL from \"react-map-gl\";\r\nimport Spot from \"./Spot\";\r\nimport { Beep1, Beep2, Beep3, Beep4 } from \"../../../../../Beeper/Beeper\";\r\nimport { ToastsStore } from \"react-toasts\";\r\nimport { getCenter } from \"geolib\";\r\n// import axios from \"axios\";\r\n// import { URL } from \"../../config/config\";\r\nimport _, { filter } from \"lodash\";\r\n\r\nconst Map = (props) => {\r\n  const count = useRef(0);\r\n  count.current++;\r\n\r\n  console.log(\"Supervisor Main Map: \" + count.current);\r\n\r\n  const KEY =\r\n    \"pk.eyJ1IjoiemFlZW10YXJyYXIzIiwiYSI6ImNrODF6N21kZDAxa2kzb255c3I4bnh5NWsifQ.CqUWmnyMb0nGVwAQYF0d6w\";\r\n  var mapType = \"\";\r\n  switch (props.type) {\r\n    case 1:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck824k9kf2i9t1iofd77sbalm\";\r\n      }\r\n      break;\r\n    case 2:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck81zu7cs2dp91iof46988lga\";\r\n      }\r\n      break;\r\n    default: {\r\n      // mapType = \"mapbox://styles/mapbox/dark-v10\";\r\n      mapType = \"mapbox://styles/mapbox/streets-v9\";\r\n      // mapType = \"mapbox://styles/mapbox/satellite-v9\";\r\n      // mapType = \"mapbox://styles/mapbox/streets-v11\";\r\n      // mapType = \"mapbox://styles/mapbox/light-v10\";\r\n    }\r\n  }\r\n  // const [lat, setLat] = useState(props.lat);\r\n  // const [lng, setLng] = useState(props.lng);\r\n  const [opr, setOpr] = useState(\"\");\r\n\r\n  const [viewport, setViewport] = useState({\r\n    latitude: props.latitude || 31,\r\n    longitude: props.longitude || 74,\r\n    width: props.width || \"100vw\",\r\n    height: props.height || \"100vh\",\r\n    zoom: props.zoomLevel,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setViewport({\r\n      ...viewport,\r\n      latitude: props.latitude,\r\n      longitude: props.longitude,\r\n      zoom: props.zoomLevel,\r\n    });\r\n  }, [props.zoomLevel, props.longitude, props.latitude]);\r\n\r\n  const [prev, setPrev] = useState(0);\r\n  const [prev2, setPrev2] = useState(0);\r\n  const [res, setRes] = useState(\"\");\r\n\r\n  const filterNature = (id) => {\r\n    let data = props.natures.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterPriority = (id) => {\r\n    let data = props.priorities.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterResponders = (id) => {\r\n    let data1 = [...props.online, ...props.offline, ...props.unknown];\r\n    let data = data1.filter((item) => {\r\n      if (item.db != null) {\r\n        return item.db.id == id;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterOperators = (id) => {\r\n    let data = props.operators.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterSupervisors = (id) => {\r\n    let data = props.supervisors.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const init = async () => {\r\n    // if (props.panic.length > prev) {\r\n    //   console.error(\"New Panic\");\r\n    // }\r\n    await props.getUsers();\r\n    await props.getPanics();\r\n    await props.getAllResponder();\r\n\r\n    // console.warning(\"Prev: \", prev);\r\n  };\r\n\r\n  let loop;\r\n\r\n  useEffect(() => {\r\n    loop = setInterval(async () => {\r\n      // console.log(\"Panic Loop\");\r\n      await init();\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(loop);\r\n    };\r\n  }, []);\r\n\r\n  const handleNewPanic = async () => {\r\n    await setPrev((item) => {\r\n      let p = [...props.panics];\r\n      // ToastsStore.success(JSON.stringify(p));\r\n      if (p.length > item) {\r\n        props.getCenter(props.panics);\r\n        Beep1();\r\n        ToastsStore.info(\"New Panic Alert has Arrived \");\r\n      }\r\n      return p.length;\r\n    });\r\n  };\r\n\r\n  const handleCusts = async () => {\r\n    await setPrev2((item) => {\r\n      let p = [...props.Fcustomers];\r\n      if (p.length > item) {\r\n        Beep3();\r\n        ToastsStore.info(\"New Application has Arrived \");\r\n      }\r\n      return p.length;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCusts();\r\n    return;\r\n  }, [props.Fcustomers]);\r\n\r\n  useEffect(() => {\r\n    // Beep1();\r\n    handleNewPanic();\r\n    return;\r\n  }, [props.panics]);\r\n\r\n  useEffect(() => {\r\n    // console.error(\"Prev: \", prev);\r\n    return;\r\n  }, [prev]);\r\n\r\n  // const IncreaseZoom = async () => {\r\n  //   if (viewport.zoom < 30) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom + 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // const DeccreaseZoom = async () => {\r\n  //   if (viewport.zoom > 5) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom - 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // var zoomer = false;\r\n  // const center = async (data) => {\r\n  //   if (zoomer == false) {\r\n  //     var lists = [];\r\n  //     for (let i = 0; i < data.length; i++) {\r\n  //       await lists.push({\r\n  //         latitude: Number(data[i].lat),\r\n  //         longitude: Number(data[i].lng),\r\n  //       });\r\n  //     }\r\n  //     if (lists.length > 0) {\r\n  //       console.log(\"Access: \", lists);\r\n  //       var url = URL + \"/panics/getCenter\";\r\n  //       axios\r\n  //         .post(url, { data: lists })\r\n  //         .then(async (response) => {\r\n  //           var info = response.data.result.data;\r\n  //           console.log(\"Access2: \", info);\r\n  //           await setViewport({\r\n  //             latitude: info.latitude,\r\n  //             longitude: info.longitude,\r\n  //             width: viewport.width,\r\n  //             height: viewport.height,\r\n  //             zoom: viewport.zoom,\r\n  //           });\r\n  //         })\r\n  //         .catch((e) => {\r\n  //           console.log(e);\r\n  //         });\r\n  //     }\r\n  //     zoomer = true;\r\n  //   }\r\n  // };\r\n\r\n  // const [list, setList] = useState([]);\r\n  // const [list2, setList2] = useState([]);\r\n  // const [list3, setList3] = useState([]);\r\n  // const [list4, setList4] = useState([]);\r\n  // const [list5, setList5] = useState([]);\r\n\r\n  const getOperss = () => {\r\n    let groupIds = props.groups.map((item) => item.id);\r\n    let result = props.operators.filter((item) => {\r\n      let group = Number(item.groupId);\r\n      if (_.includes(groupIds, group)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    // console.error(result);\r\n    return result;\r\n  };\r\n\r\n  const getResss = (data) => {\r\n    // console.error(\"Groups1: \", props.groups);\r\n    // console.error(\"All Groups: \", props.allGroups);\r\n    // console.error(\"Groups2: \", props.groups2);\r\n\r\n    let info = props.groups2.map((p) => {\r\n      let ele = p;\r\n      let grouper = ele.groupId;\r\n      let theGroup = props.allGroups.filter((item) => item.id == grouper);\r\n      if (theGroup && theGroup.length > 0) {\r\n        return theGroup[0];\r\n      }\r\n    });\r\n    let info2 = [];\r\n    if (info && info.length > 0) {\r\n      info2 = props.allGroups.filter((item) => info[0].id == item.groupId);\r\n    }\r\n    // console.error(\"Resp2: \", info2);\r\n    // for (let i = 0; i < props.group2.length; i++) {\r\n    // }\r\n    // console.error(\"Resp1: \", info);\r\n    let groupIds = info2.map((item) => item.id);\r\n    // console.error(\"Group1: \", groupIds);\r\n    // let admin = props.allGroups.filter((item) => _.includes(groupIds, item.id));\r\n    // console.error(\"Groups2: \", admin);\r\n    // console.error(\"Data: \", data);\r\n    let result = data.filter((item) => {\r\n      if (item.db != null) {\r\n        let group = Number(item.db.groupId);\r\n        // console.error(groupIds, group);\r\n        if (_.includes(groupIds, group)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    // console.error(result);\r\n    return result;\r\n  };\r\n\r\n  const getSpots = (\r\n    data,\r\n    features,\r\n    pin = \"./../../../pin/8.png\",\r\n    type = \"\"\r\n  ) => {\r\n    let icon = pin;\r\n    if (type == \"responder\") {\r\n      /////  responder code from here ////////////\r\n      return data.map((p) => {\r\n        return (\r\n          <Spot\r\n            key={p.id}\r\n            pin={icon}\r\n            lat={Number(p.lat)}\r\n            lng={Number(p.lng)}\r\n            features={features}\r\n            content={\r\n              <div style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}>\r\n                <p>\r\n                  <b> Name: </b>\r\n                  {p.db == null\r\n                    ? null\r\n                    : p.db.firstname + \" \" + p.db.lastname}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <b> Traccar: </b> {p.name || \"Anonymous\"}{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b> Contact: </b>\r\n                  {p.db == null ? p.contact || \"\" : p.db.contact}\r\n                </p>\r\n                <p>\r\n                  <b> Email: </b>\r\n                  {p.db == null ? null : p.db.email || \"\"}\r\n                </p>\r\n                <p>\r\n                  <b> Address: </b>\r\n                  {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                  <span style={{ lineHeight: 1 }}>\r\n                    {p.db == null ? null : p.db.address || \"\"}\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  <b> Type: </b>\r\n                  {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                  <span style={{ lineHeight: 1 }}>\r\n                    {p.db == null ? null : p.db.type || \"\"}\r\n                  </span>\r\n                </p>\r\n                {/* <p>\r\n                  <b> Nature: </b>\r\n                  {filterNature(p.natureId) == null\r\n                    ? null\r\n                    : filterNature(p.natureId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Priority: </b>\r\n                  {filterPriority(p.priorityId) == null\r\n                    ? null\r\n                    : filterPriority(p.priorityId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Responder: </b>\r\n                 \r\n                  {filterResponders(p.responderInvolved || 0) == null\r\n                    ? null\r\n                    : filterResponders(p.responderInvolved).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Operator: </b>\r\n                  \r\n                  {filterOperators(p.operatorInvolved || 0) == null\r\n                    ? null\r\n                    : filterOperators(p.operatorInvolved).firstname}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Supervisor: </b>\r\n                 \r\n                  {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                    ? null\r\n                    : filterSupervisors(p.supervisorInvolved).firstname}\r\n                </p> */}\r\n                {/* <div>{popButton(p)}</div> */}\r\n              </div>\r\n            }\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      return data.map((p) => {\r\n        if (p.isClose == true) {\r\n          return null;\r\n        } else {\r\n          return (\r\n            <Spot /////////// panic set from here\r\n              key={p.id}\r\n              pin={icon}\r\n              lat={Number(p.lat)}\r\n              lng={Number(p.lng)}\r\n              features={{ ...features, timer: new Date(p.createdAt) }}\r\n              content={\r\n                <div\r\n                  style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}\r\n                >\r\n                  <p>\r\n                    <b> Contact: </b>\r\n                    {p.contact}\r\n                  </p>\r\n\r\n                  <p>\r\n                    <b> Address: </b>\r\n                    {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                    <span style={{ lineHeight: 1 }}>{p.address || \"\"}</span>\r\n                  </p>\r\n                  <p>\r\n                    <b> Nature: </b>\r\n                    {filterNature(p.natureId) == null\r\n                      ? null\r\n                      : filterNature(p.natureId).name}\r\n                  </p>\r\n                  <p>\r\n                    <b> Priority: </b>\r\n                    {filterPriority(p.priorityId) == null\r\n                      ? null\r\n                      : filterPriority(p.priorityId).name}\r\n                  </p>\r\n                  <p style={{ lineHeight: \"15px\" }}>\r\n                    <b> Responder: </b>\r\n                    {/* {p.responderInvolved} */}\r\n                    {filterResponders(p.responderInvolved || 0) == null\r\n                      ? null\r\n                      : filterResponders(p.responderInvolved).name}{\" \"}\r\n                    &nbsp; (11.3 Km Away)\r\n                  </p>\r\n                  <p>\r\n                    <b> Operator: </b>\r\n                    {/* {p.operatorInvolved} */}\r\n                    {filterOperators(p.operatorInvolved || 0) == null\r\n                      ? null\r\n                      : filterOperators(p.operatorInvolved).firstname}\r\n                  </p>\r\n                  <p>\r\n                    <b> Supervisor: </b>\r\n                    {/* {p.supervisorInvolved} */}\r\n                    {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                      ? null\r\n                      : filterSupervisors(p.supervisorInvolved).firstname}\r\n                  </p>\r\n                  <p>\r\n                    <b> Utility Type </b>\r\n                    {/* {p.supervisorInvolved} */}\r\n                    <span style={{ lineHeight: 1 }}>\r\n                      {p.utility_type || \"\"}\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    <b> Comments </b>\r\n                    {/* {p.supervisorInvolved} */}\r\n                    <span style={{ lineHeight: 1 }}>{p.comment || \"\"}</span>\r\n                  </p>\r\n                  {p.customerRating && (\r\n                    <>\r\n                      <p>\r\n                        <b> Customer rating: </b> <br />\r\n                        <br />\r\n                        {getRating(p.customerRating)}\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                  <div>{getOper(p.operatorInvolved, p)}</div>\r\n                  <br />\r\n                  <div>\r\n                    {p.statusId == 5 ? (\r\n                      <button\r\n                        className=\"btn btn-success btn-xs btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.supervisorResolvePanic(p.id, {\r\n                            // statusId: 6,\r\n                          }); // Bilal\r\n                          // init();\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <i className=\"fa fa-check\"></i>\r\n                          &nbsp;\r\n                        </span>\r\n                        Resolve\r\n                      </button>\r\n                    ) : null}\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    {p.statusId == 1 ||\r\n                    p.statusId == 2 ||\r\n                    p.statusId == 3 ||\r\n                    p.statusId == 7 ||\r\n                    p.statusId == 6 ||\r\n                    p.statusId == 4 ||\r\n                    p.statusId == 5 ? (\r\n                      <button\r\n                        className=\"btn btn-xs btn-danger btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.closePanic(p.id, {\r\n                            userId: props.user.id,\r\n                          }); // Bilal\r\n                          // init();\r\n                          Beep2();\r\n                        }}\r\n                      >\r\n                        Close\r\n                      </button>\r\n                    ) : null}\r\n                    {p.statusId == 8 ? (\r\n                      <button\r\n                        className=\"btn btn-xs btn-warning btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.solvePanic(p.id, {\r\n                            userId: props.user.id,\r\n                          }); // Bilal\r\n                          // init();\r\n                          Beep2();\r\n                        }}\r\n                      >\r\n                        Pop The Panic Out\r\n                      </button>\r\n                    ) : null}\r\n                  </div>\r\n                  <div>{p.isCancelled == 1 ? <h3> Cancelled </h3> : null}</div>\r\n                </div>\r\n              }\r\n            />\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getOper = (data, item) => {\r\n    if (data) {\r\n      return null;\r\n    } else {\r\n      if (\r\n        item.statusId == 1 &&\r\n        (item.operatorInvolved == null || item.operatorInvolved == 0)\r\n      ) {\r\n        return (\r\n          <>\r\n            {/* <select\r\n              className=\"form-control\"\r\n              value={opr}\r\n              onChange={(e) => setOpr(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getOperators()}\r\n            </select> */}\r\n            {/* <br />\r\n            <button\r\n              className=\"btn btn-info btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                await props.updatePanics(item.id, {\r\n                  operatorInvolved: opr,\r\n                  // statusId: 2,\r\n                }); // Bilal\r\n                // init();\r\n                setOpr(\"\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Set Operator{\" \"}\r\n            </button>\r\n            <br /> */}\r\n            {/* 3rd button  */}\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                console.log(\"Assign 3rd button clicked\");\r\n                e.preventDefault();\r\n                await props.supervisorAcceptPanic(item.id, {\r\n                  userId: props.user.id,\r\n                  // operatorInvolved: 0,\r\n                  // statusId: 2,\r\n                }); // Bilal\r\n                init();\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (item.statusId == 1) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.updatePanics(item.id, {\r\n                operatorInvolved: props.user.id,\r\n                statusId: 2,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Confirm\r\n          </button>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.operatorInvolved != 0 &&\r\n        item.operatorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            {/* {  the select tag which is not working } */}\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getResponders2(\r\n                [...props.free, ...props.buzy].length > 0\r\n                  ? props.free\r\n                  : props.online,\r\n                \"white\"\r\n              )}\r\n              {getResponders2(\r\n                [...props.free, ...props.buzy].length > 0\r\n                  ? props.buzy\r\n                  : props.online,\r\n                \"#999\"\r\n              )}\r\n            </select>\r\n            <br />\r\n            {/* button one */}\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                console.log(\"Assign 1st button clicked\");\r\n                e.preventDefault();\r\n                alert(\"ok\");\r\n                await props.supervisorAssignPanicToRes(item.id, {\r\n                  contact: item.db?.contact,\r\n                  responderInvolved: Number(res),\r\n                  // statusId: 3,\r\n                }); // Bilal\r\n                await setRes(\"\");\r\n                // await init();\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.supervisorInvolved != 0 &&\r\n        item.supervisorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            {/* {this is the slect which is working } */}\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> Test None </option>\r\n              {[\r\n                ...getResponders2(\r\n                  [...props.free, ...props.buzy].length > 0\r\n                    ? props.free\r\n                    : props.online,\r\n                  \"white\"\r\n                ),\r\n                ...getResponders2(\r\n                  [...props.free, ...props.buzy].length > 0 ? props.buzy : [],\r\n                  \"#999\"\r\n                ),\r\n              ]}\r\n            </select>\r\n            <br />\r\n            {/* 2nd button */}\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                console.log(\"Assign 2nd button clicked\");\r\n                let ress = [\r\n                  ...props.online,\r\n                  ...props.offline,\r\n                  ...props.unknown,\r\n                ];\r\n                // console.error(\"Res: \", ress);\r\n                let Data = ress.filter((it) => it.id == Number(res));\r\n                // console.error(Data);\r\n                let abc = Data[0];\r\n\r\n                if (abc.db == null) {\r\n                  // alert(\"Responder is not available in the Database: \" + res);\r\n                } else {\r\n                  e.preventDefault();\r\n                  // console.error({ res, id: item.id });\r\n                  // alert(item.contact);\r\n                  await props.supervisorAssignPanicToRes(item.id, {\r\n                    contact: item.contact,\r\n                    responderInvolved: abc.db.id,\r\n                    // statusId: 3,\r\n                  }); // Bilal\r\n                  await setRes(\"\");\r\n                  // await init();\r\n                }\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 4 &&\r\n        item.responderInvolved != 0 &&\r\n        item.responderInvolved != null\r\n      ) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.supervisorResolvePanic(item.id, {\r\n                // statusId: props.user.roleId == 3 ? 5 : 6,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Resolve\r\n          </button>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  // const content = (p) => {\r\n  //   return (\r\n\r\n  //   );\r\n  // };\r\n\r\n  const getRating = (rate) => {\r\n    if (rate == 0) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 1) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 2) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 3) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 4) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getOperators = () => {\r\n    return getOperss().map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}>\r\n            {\" \"}\r\n            {item.firstname + \" \" + item.lastname}{\" \"}\r\n          </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const popButton = async (item) => {\r\n    return \"false\";\r\n  };\r\n\r\n  const getResponders2 = (data, color) => {\r\n    // let data = [...props.buzy, ...props.online];\r\n    const data234 = data.filter(function (responders) {\r\n      return responders.db.type === \"utility\";\r\n    });\r\n    let data2 = getResss(_.uniq(data234));\r\n    return data2.map((item, index) => {\r\n      if (item.db || true) {\r\n        // let color = item.status == \"online\"\r\n        return (\r\n          <React.Fragment key={item.id}>\r\n            <option style={{ background: color }} value={item.id}>\r\n              {item.name || \"\"}\r\n            </option>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  // const goPoint = async (pointer, set, list, data2 = null, cb = null) => {\r\n  //   if (pointer != null) {\r\n  //     await pointer(async (data) => {\r\n  //       if (data.length > list.length) {\r\n  //         await set([...data]);\r\n  //         var centers = [];\r\n  //         if (data2 == null) {\r\n  //           centers = [...data];\r\n  //         } else {\r\n  //           centers = [...data, ...data2];\r\n  //         }\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       } else {\r\n  //         var centers = [...data];\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       }\r\n  //     });\r\n  //   } else {\r\n  //     if (data2 != null && data2.length > 0) {\r\n  //       var centers = [...data2];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     } else {\r\n  //       var centers = [];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   setInterval(async () => {\r\n  //     if (props.getPoints != null) {\r\n  //       await goPoint(props.getPoints, setList, list, null, async (r) => {\r\n  //         console.log(\"Round 1: \", r);\r\n  //         if (props.getPoints2 != null) {\r\n  //           await goPoint(props.getPoints2, setList2, list2, r, async (r2) => {\r\n  //             console.log(\"Round 2: \", r2);\r\n  //             if (props.getPoints3 != null) {\r\n  //               await goPoint(props.getPoints3, setList3, list3, r2, null);\r\n  //             }\r\n  //           });\r\n  //         }\r\n  //       });\r\n  //     } else if (props.getPoints2 != null) {\r\n  //       goPoint(props.getPoints2, setList2, list2, null, null);\r\n  //     } else if (props.getPoints3 != null) {\r\n  //       goPoint(props.getPoints3, setList3, list3, null, null);\r\n  //     }\r\n  //   }, 1000);\r\n  // }, [props.changer, \"text\"]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        {/* <div style={{ position: \"absolute\", top: 50, right: 10, zIndex: 10 }}> */}\r\n        {/* <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              IncreaseZoom();\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              DeccreaseZoom();\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n        </div> */}\r\n        <ReactMapGL\r\n          {...viewport}\r\n          // latitude={lat}\r\n          // longitude={lng}\r\n          mapboxApiAccessToken={KEY}\r\n          mapStyle={mapType}\r\n          onViewportChange={(viewport) => {\r\n            setViewport(viewport);\r\n          }}\r\n        >\r\n          {CheckIfEmpty(props.inQueryPanics) &&\r\n            CheckIfEmpty(props.inQueryPanics[0].panicType) &&\r\n            props.inQueryPanics[0].panicType == \"utility\" &&\r\n            getSpots(\r\n              props.inQueryPanics,\r\n              {\r\n                shade: \"Yellow\",\r\n                spot: \"Yellow\",\r\n                showSpot: false,\r\n                buzz: true,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../../pins/utility.png\")\r\n            )}\r\n          {/* {CheckIfEmpty(props.inQueryPanics) &&\r\n            props.inQueryPanics[0].panicType == \"emergency\" &&\r\n            getSpots(\r\n              props.inQueryPanics,\r\n              {\r\n                shade: \"red\",\r\n                spot: \"green\",\r\n                showSpot: false,\r\n                buzz: true,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/13.png\")\r\n            )} */}\r\n          {/* {getSpots(\r\n            props.inQueryPanics,\r\n            {\r\n              shade: \"red\",\r\n              spot: \"green\",\r\n              showSpot: false,\r\n              buzz: true,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/13.png\")\r\n          )} */}\r\n          {/* my test commecnts */}\r\n          {CheckIfEmpty(props.confirmedByOperatorPanics) &&\r\n            CheckIfEmpty(props.confirmedByOperatorPanics[0].panicType) &&\r\n            props.confirmedByOperatorPanics[0].panicType == \"utility\" &&\r\n            getSpots(\r\n              props.confirmedByOperatorPanics,\r\n              {\r\n                shade: \"yellow\",\r\n                spot: \"green\",\r\n                showSpot: false,\r\n                buzz: true,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/14.jpg\")\r\n            )}\r\n          {CheckIfEmpty(props.assignedToResponderPanics) &&\r\n            CheckIfEmpty(props.assignedToResponderPanics[0].panicType) &&\r\n            props.assignedToResponderPanics[0].panicType == \"utility\" &&\r\n            getSpots(\r\n              props.assignedToResponderPanics,\r\n              {\r\n                shade: \"yellow\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/8.png\")\r\n            )}\r\n          {CheckIfEmpty(props.confirmedByResponderPanics) &&\r\n            CheckIfEmpty(props.confirmedByResponderPanics[0].panicType) &&\r\n            props.confirmedByResponderPanics[0].panicType == \"utility\" &&\r\n            getSpots(\r\n              props.confirmedByResponderPanics,\r\n              {\r\n                shade: \"lightgreen\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/10.png\")\r\n            )}\r\n          {CheckIfEmpty(props.resolvedByResponderPanics) &&\r\n            CheckIfEmpty(props.resolvedByResponderPanics[0].panicType) &&\r\n            props.resolvedByResponderPanics[0].panicType == \"utility\" &&\r\n            getSpots(\r\n              props.resolvedByResponderPanics,\r\n              {\r\n                shade: \"lightgreen\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/15.png\")\r\n            )}\r\n          {CheckIfEmpty(props.resolvedByOperatorPanics) &&\r\n            CheckIfEmpty(props.resolvedByOperatorPanics[0].panicType) &&\r\n            props.resolvedByOperatorPanics[0].panicType == \"utility\" &&\r\n            getSpots(\r\n              props.resolvedByOperatorPanics,\r\n              {\r\n                shade: \"green\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/17.png\")\r\n            )}\r\n          {CheckIfEmpty(props.closedBySupervisorPanics) &&\r\n            CheckIfEmpty(props.closedBySupervisorPanics[0].panicType) &&\r\n            props.closedBySupervisorPanics[0].panicType == \"utility\" &&\r\n            getSpots(\r\n              props.closedBySupervisorPanics,\r\n              {\r\n                shade: \"green\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/18.png\")\r\n            )}\r\n          {CheckIfEmpty(props.closedByCustomerPanics) &&\r\n            CheckIfEmpty(props.closedByCustomerPanics[0].panicType) &&\r\n            props.closedByCustomerPanics[0].panicType == \"utility\" &&\r\n            getSpots(\r\n              props.closedByCustomerPanics,\r\n              {\r\n                shade: \"black\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/18.png\")\r\n            )}\r\n\r\n          {CheckIfEmpty(props.online) &&\r\n            CheckIfEmpty(props.online[0].db) &&\r\n            props.online[0].db.type == \"utility\" &&\r\n            getSpots(\r\n              props.online.filter(function (online) {\r\n                return online.db.type == \"utility\";\r\n              }),\r\n              {\r\n                shade: \"lightgreen\",\r\n                spot: \"darkgreen\",\r\n                showSpot: true,\r\n                buzz: false,\r\n              },\r\n              require(\"./../../../../pins/12.png\"),\r\n              \"responder\"\r\n            )}\r\n          {CheckIfEmpty(props.offline) &&\r\n            CheckIfEmpty(props.offline[0].db) &&\r\n            props.offline[0].db.type == \"utility\" &&\r\n            getSpots(\r\n              props.offline.filter(function (offline) {\r\n                return offline.db.type == \"utility\";\r\n              }),\r\n              {\r\n                shade: \"pink\",\r\n                spot: \"red\",\r\n                showSpot: true,\r\n                buzz: false,\r\n              },\r\n              require(\"./../../../../pins/12.png\"),\r\n              \"responder\"\r\n            )}\r\n\r\n          {/* my test coments */}\r\n          {/* {CheckIfEmpty(props.unknown) &&\r\n            props.unknown[0].db.type == \"utility\" &&\r\n            getSpots(\r\n              props.unknown,\r\n              {\r\n                shade: \"yellow\",\r\n                spot: \"orange\",\r\n                showSpot: true,\r\n                buzz: false,\r\n              },\r\n              require(\"./../../../../pins/12.png\"),\r\n              \"responder\"\r\n            )} */}\r\n          {/* {getSpots(list2, \"/images/pin2.png\")} */}\r\n          {/* {getSpots(list3, \"/images/pin3.png\")} */}\r\n        </ReactMapGL>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  customers: state.customers,\r\n  Fcustomers: state.customers.filter((item) => item.isSubmitted == true),\r\n  natures: state.natures,\r\n  priorities: state.priorities,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n  buzy: state.buzyResponders,\r\n  free: state.freeResponders,\r\n  panics: state.panics,\r\n  operators: state.operators,\r\n  supervisors: state.supervisors,\r\n  inQueryPanics: state.inQueryPanics,\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  assignedToResponderPanics: state.assignedToResponderPanics,\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  closedByCustomerPanics: state.closedByCustomerPanics,\r\n  zoomLevel: state.zoomLevel,\r\n  latitude: state.latitude,\r\n  longitude: state.longitude,\r\n  allGroups: state.groups,\r\n  groups: state.groups.filter((item) => item.groupId == state.logger.groupId),\r\n  groups2: state.groups.filter((item) => {\r\n    let sprvsr = item.id == state.logger.groupId;\r\n    if (sprvsr) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getPanics: () => GetPanics(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  getNatures: () => GetNatures(dispatch),\r\n  getCenter: (coords) => GetCenter(dispatch, coords),\r\n  getAllResponder: () => GetAllResponder(dispatch),\r\n  getPriorities: () => GetPriorities(dispatch),\r\n  updatePanics: (id, data) => UpdatePanics(dispatch, id, data),\r\n  supervisorAcceptPanic: (id, data) =>\r\n    SupervisorAcceptPanic_UpdatePanics(dispatch, id, data),\r\n  supervisorAssignPanicToRes: (id, data) =>\r\n    SupervisorAssignPanicToRes_UpdatePanics(dispatch, id, data),\r\n  supervisorResolvePanic: (id, data) =>\r\n    SupervisorResolvePanic_UpdatePanics(dispatch, id, data),\r\n  closePanic: (id, data) => ClosePanic_UpdatePanics(dispatch, id, data),\r\n  solvePanic: (id, data) => SolvePanic_UpdatePanics(dispatch, id, data),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\ResponderView\\Create\\Create.jsx",["2376","2377","2378","2379","2380","2381","2382","2383"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Services\\Create\\Create.jsx",["2384","2385","2386","2387","2388","2389","2390"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Services\\List\\List.jsx",["2391","2392","2393","2394"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Natures\\Create\\Create.jsx",["2395","2396","2397","2398","2399","2400","2401"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Services\\Create\\Create.jsx",["2402","2403","2404","2405","2406","2407","2408"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Services\\List\\List.jsx",["2409","2410","2411","2412"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Natures\\List\\List.jsx",["2413","2414","2415","2416"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Priorities\\Create\\Create.jsx",["2417","2418","2419","2420","2421","2422","2423"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetNatures,\r\n  CreateNatures,\r\n  UpdateNatures,\r\n  UserLogout,\r\n  GetTraccarGroups,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Priorities Create\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  // const [groupId, setGroupId] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getTraccarGroups();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    let data = props.natures.filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setName(data.name);\r\n      // setGroupId(data.groupId);\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  // const getGroups = () => {\r\n  //   return props.groups.map((item, index) => {\r\n  //     return (\r\n  //       <React.Fragment key={index}>\r\n  //         <option value={item.id}> {item.name} </option>\r\n  //       </React.Fragment>\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setName(\"\");\r\n\r\n    // setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    if (props.id != \"\") {\r\n      await props.UpdateNatures(props.id, {\r\n        name,\r\n        // userId: 1, // Number(groupId) == 0 ? 1 : Number(groupId),\r\n      });\r\n    } else {\r\n      await props.CreateNatures({\r\n        name,\r\n        // userId: 1, // Number(groupId) == 0 ? 1 : Number(groupId),\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      props.getNatures();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter First Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n\r\n        {/* <select\r\n          className=\"form-control\"\r\n          value={groupId}\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br /> */}\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n  // admin: state.admin,\r\n  natures: state.natures,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getNatures: () => GetNatures(dispatch),\r\n  // getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n  CreateNatures: (data) => CreateNatures(dispatch, data),\r\n  UpdateNatures: (id, data) => UpdateNatures(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Priorities\\List\\List.jsx",["2424","2425","2426","2427","2428"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetPriorities,\r\n  DelPriorities,\r\n  DelPanics,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst List = (props) => {\r\n  console.log(\"Supervisor - Priorities List\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const del = async (id) => {\r\n    await props.delPriorities(id);\r\n    setTimeout(() => {\r\n      props.getPriorities();\r\n    }, 500);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    props.setId(id);\r\n    props.setPage(\"add\");\r\n  };\r\n\r\n  const getTableData = () => {\r\n    return props.priorities.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.name} </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ height: \"400px\", overflow: \"auto\" }}>\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> - </th>\r\n                <th> - </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData()}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return <>{getTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  priorities: state.priorities,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getPriorities: () => GetPriorities(dispatch),\r\n  delPriorities: (id) => DelPriorities(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Groups\\List\\List.jsx",["2429","2430","2431","2432"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Groups\\Create\\Create.jsx",["2433","2434","2435","2436","2437"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetTraccarGroups,\r\n  CreateTraccarGroups,\r\n  UpdateTraccarGroups,\r\n  UserLogout,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Group Create\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [groupId, setGroupId] = useState(props.user.groupId + \"\" || \"\");\r\n\r\n  useEffect(() => {\r\n    let data = props.groups.filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setName(data.name);\r\n      setGroupId(data.groupId == 0 ? \"\" : data.groupId);\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  const getGroups = () => {\r\n    return props.groups.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setName(\"\");\r\n    setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    // console.error({ id: props.id, name, groupId });\r\n    if (props.id != \"\") {\r\n      await props.updateTraccarGroups(props.id, { name, groupId });\r\n    } else {\r\n      await props.createTraccarGroups({ name, groupId });\r\n    }\r\n    setTimeout(() => {\r\n      props.getTraccarGroups();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          value={groupId}\r\n          disabled\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br />\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n  createTraccarGroups: (data) => CreateTraccarGroups(dispatch, data),\r\n  updateTraccarGroups: (id, data) => UpdateTraccarGroups(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Reports\\Reports.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Subscriptions\\Create\\Create.jsx",["2438","2439","2440","2441","2442","2443"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Subscriptions\\List\\List.jsx",["2444","2445","2446","2447"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Natures\\Create\\Create.jsx",["2448","2449","2450","2451","2452","2453","2454"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Natures\\List\\List.jsx",["2455","2456","2457","2458"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Priorities\\List\\List.jsx",["2459","2460","2461","2462","2463"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Priorities\\Create\\Create.jsx",["2464","2465","2466","2467","2468","2469","2470"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\StatusBar\\StatusBar.jsx",["2471"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Reports from \"../Reports/Reports\";\r\n\r\nconst StatusBar = (props) => {\r\n  console.log(\"Supervisor - Status Bar\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getSelection = () => {\r\n    if (open) {\r\n      return (\r\n        <>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">{props.panics.length} </span>\r\n            &nbsp; Panics\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.cancelledPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Cancelled Panics\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.confirmedByOperatorPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Confirmed By Operator\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.assignedToResponderPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Assigned To Responder\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.confirmedByResponderPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Confirmed By Responder\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.resolvedByResponderPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Resolved By Responder\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.resolvedByOperatorPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Resolved By Operator\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.closedBySupervisorPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Closed By Supervisor\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.closedByCustomerPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Closed By Customer\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">{props.offline.length} </span>\r\n            &nbsp; Offline Responders\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">{props.unknown.length} </span>\r\n            &nbsp; Unknown Responders\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">{props.online.length} </span>\r\n            &nbsp; Online Responders:\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <span>\r\n            <center>\r\n              <i className=\"fa fa-caret-down\"></i>\r\n            </center>\r\n          </span>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid theme\">\r\n        <div className=\"\" style={{ padding: \"10px\" }}>\r\n          <div\r\n            className=\"row\"\r\n            style={{\r\n              borderLeft: \"1px solid #fff\",\r\n              borderRight: \"1px solid #fff\",\r\n              padding: \"0px 0px 0px 0px\",\r\n            }}\r\n            onClick={() => setOpen((item) => !item)}\r\n          >\r\n            {getSelection()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  // natures: state.natures,\r\n  // priorities: state.priorities,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n  panics: state.panics,\r\n  // operators: state.operators,\r\n  // supervisors: state.supervisors,\r\n  inQueryPanics: state.inQueryPanics,\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  assignedToResponderPanics: state.assignedToResponderPanics,\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  closedByCustomerPanics: state.closedByCustomerPanics,\r\n  cancelledPanics: state.cancelledPanics,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusBar);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Map\\Map1.jsx",["2472","2473","2474","2475","2476","2477","2478","2479","2480","2481","2482","2483","2484","2485","2486","2487","2488","2489","2490","2491","2492","2493","2494","2495","2496","2497","2498","2499","2500","2501","2502","2503","2504","2505","2506","2507","2508","2509","2510","2511","2512","2513","2514","2515","2516"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetUsers,\r\n  GetPanics,\r\n  GetNatures,\r\n  GetPriorities,\r\n  UpdatePanics,\r\n  GetAllResponder,\r\n  changeZoom,\r\n  GetCenter,\r\n} from \"../../../../../actions/index\";\r\nimport ReactMapGL from \"react-map-gl\";\r\nimport Spot from \"./Spot\";\r\nimport { Beep1, Beep2, Beep3, Beep4 } from \"../../../../../Beeper/Beeper\";\r\nimport { ToastsStore } from \"react-toasts\";\r\nimport { getCenter } from \"geolib\";\r\n// import axios from \"axios\";\r\n// import { URL } from \"../../config/config\";\r\nimport _ from \"lodash\";\r\n\r\nconst Map = (props) => {\r\n  const count = useRef(0);\r\n  count.current++;\r\n\r\n  console.log(\"Supervisor Main Map: \" + count.current);\r\n\r\n  const KEY =\r\n    \"pk.eyJ1IjoiemFlZW10YXJyYXIzIiwiYSI6ImNrODF6N21kZDAxa2kzb255c3I4bnh5NWsifQ.CqUWmnyMb0nGVwAQYF0d6w\";\r\n  var mapType = \"\";\r\n  switch (props.type) {\r\n    case 1:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck824k9kf2i9t1iofd77sbalm\";\r\n      }\r\n      break;\r\n    case 2:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck81zu7cs2dp91iof46988lga\";\r\n      }\r\n      break;\r\n    default: {\r\n      // mapType = \"mapbox://styles/mapbox/dark-v10\";\r\n      mapType = \"mapbox://styles/mapbox/streets-v9\";\r\n      // mapType = \"mapbox://styles/mapbox/satellite-v9\";\r\n      // mapType = \"mapbox://styles/mapbox/streets-v11\";\r\n      // mapType = \"mapbox://styles/mapbox/light-v10\";\r\n    }\r\n  }\r\n  // const [lat, setLat] = useState(props.lat);\r\n  // const [lng, setLng] = useState(props.lng);\r\n  const [opr, setOpr] = useState(\"\");\r\n\r\n  const [viewport, setViewport] = useState({\r\n    latitude: props.latitude || 31,\r\n    longitude: props.longitude || 74,\r\n    width: props.width || \"100vw\",\r\n    height: props.height || \"100vh\",\r\n    zoom: props.zoomLevel,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setViewport({\r\n      ...viewport,\r\n      latitude: props.latitude,\r\n      longitude: props.longitude,\r\n      zoom: props.zoomLevel,\r\n    });\r\n  }, [props.zoomLevel, props.longitude, props.latitude]);\r\n\r\n  const [prev, setPrev] = useState(0);\r\n  const [prev2, setPrev2] = useState(0);\r\n  const [res, setRes] = useState(\"\");\r\n\r\n  const filterNature = (id) => {\r\n    let data = props.natures.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterPriority = (id) => {\r\n    let data = props.priorities.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterResponders = (id) => {\r\n    let data1 = [...props.online, ...props.offline, ...props.unknown];\r\n    let data = data1.filter((item) => {\r\n      if (item.db != null) {\r\n        return item.db.id == id;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterOperators = (id) => {\r\n    let data = props.operators.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterSupervisors = (id) => {\r\n    let data = props.supervisors.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const init = async () => {\r\n    // if (props.panic.length > prev) {\r\n    //   console.error(\"New Panic\");\r\n    // }\r\n    await props.getUsers();\r\n    await props.getPanics();\r\n    await props.getAllResponder();\r\n\r\n    // console.warning(\"Prev: \", prev);\r\n  };\r\n\r\n  let loop;\r\n\r\n  useEffect(() => {\r\n    loop = setInterval(async () => {\r\n      console.log(\"Panic Loop\");\r\n      await init();\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(loop);\r\n    };\r\n  }, []);\r\n\r\n  const handleNewPanic = async () => {\r\n    await setPrev((item) => {\r\n      let p = [...props.panics];\r\n      // ToastsStore.success(JSON.stringify(p));\r\n      if (p.length > item) {\r\n        props.getCenter(props.panics);\r\n        Beep1();\r\n        ToastsStore.info(\"New Panic Alert has Arrived \");\r\n      }\r\n      return p.length;\r\n    });\r\n  };\r\n\r\n  const handleCusts = async () => {\r\n    await setPrev2((item) => {\r\n      let p = [...props.Fcustomers];\r\n      if (p.length > item) {\r\n        Beep3();\r\n        ToastsStore.info(\"New Application has Arrived \");\r\n      }\r\n      return p.length;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCusts();\r\n    return;\r\n  }, [props.Fcustomers]);\r\n\r\n  useEffect(() => {\r\n    // Beep1();\r\n    handleNewPanic();\r\n    return;\r\n  }, [props.panics]);\r\n\r\n  useEffect(() => {\r\n    // console.error(\"Prev: \", prev);\r\n    return;\r\n  }, [prev]);\r\n\r\n  // const IncreaseZoom = async () => {\r\n  //   if (viewport.zoom < 30) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom + 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // const DeccreaseZoom = async () => {\r\n  //   if (viewport.zoom > 5) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom - 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // var zoomer = false;\r\n  // const center = async (data) => {\r\n  //   if (zoomer == false) {\r\n  //     var lists = [];\r\n  //     for (let i = 0; i < data.length; i++) {\r\n  //       await lists.push({\r\n  //         latitude: Number(data[i].lat),\r\n  //         longitude: Number(data[i].lng),\r\n  //       });\r\n  //     }\r\n  //     if (lists.length > 0) {\r\n  //       console.log(\"Access: \", lists);\r\n  //       var url = URL + \"/panics/getCenter\";\r\n  //       axios\r\n  //         .post(url, { data: lists })\r\n  //         .then(async (response) => {\r\n  //           var info = response.data.result.data;\r\n  //           console.log(\"Access2: \", info);\r\n  //           await setViewport({\r\n  //             latitude: info.latitude,\r\n  //             longitude: info.longitude,\r\n  //             width: viewport.width,\r\n  //             height: viewport.height,\r\n  //             zoom: viewport.zoom,\r\n  //           });\r\n  //         })\r\n  //         .catch((e) => {\r\n  //           console.log(e);\r\n  //         });\r\n  //     }\r\n  //     zoomer = true;\r\n  //   }\r\n  // };\r\n\r\n  // const [list, setList] = useState([]);\r\n  // const [list2, setList2] = useState([]);\r\n  // const [list3, setList3] = useState([]);\r\n  // const [list4, setList4] = useState([]);\r\n  // const [list5, setList5] = useState([]);\r\n\r\n  const getSpots = (\r\n    data,\r\n    features,\r\n    pin = \"./../../../pin/8.png\",\r\n    type = \"\"\r\n  ) => {\r\n    let icon = pin;\r\n    if (type == \"responder\") {\r\n      return data.map((p) => {\r\n        return (\r\n          <Spot\r\n            key={p.id}\r\n            pin={icon}\r\n            lat={Number(p.lat)}\r\n            lng={Number(p.lng)}\r\n            features={features}\r\n            content={\r\n              <div style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}>\r\n                <p>\r\n                  <b> Name: </b>\r\n                  {p.db == null\r\n                    ? null\r\n                    : p.db.firstname + \" \" + p.db.lastname}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <b> Traccar: </b> {p.name || \"Anonymous\"}{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b> Contact: </b>\r\n                  {p.db == null ? p.contact || \"\" : p.db.contact}\r\n                </p>\r\n                <p>\r\n                  <b> Email: </b>\r\n                  {p.db == null ? null : p.db.email || \"\"}\r\n                </p>\r\n                <p>\r\n                  <b> Address: </b>\r\n                  {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                  <span style={{ lineHeight: 1 }}>\r\n                    {p.db == null ? null : p.db.address || \"\"}\r\n                  </span>\r\n                </p>\r\n                {/* <p>\r\n                  <b> Nature: </b>\r\n                  {filterNature(p.natureId) == null\r\n                    ? null\r\n                    : filterNature(p.natureId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Priority: </b>\r\n                  {filterPriority(p.priorityId) == null\r\n                    ? null\r\n                    : filterPriority(p.priorityId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Responder: </b>\r\n                 \r\n                  {filterResponders(p.responderInvolved || 0) == null\r\n                    ? null\r\n                    : filterResponders(p.responderInvolved).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Operator: </b>\r\n                  \r\n                  {filterOperators(p.operatorInvolved || 0) == null\r\n                    ? null\r\n                    : filterOperators(p.operatorInvolved).firstname}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Supervisor: </b>\r\n                 \r\n                  {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                    ? null\r\n                    : filterSupervisors(p.supervisorInvolved).firstname}\r\n                </p> */}\r\n                {/* <div>{popButton(p)}</div> */}\r\n              </div>\r\n            }\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      return data.map((p) => {\r\n        if (p.isClose == true) {\r\n          return null;\r\n        } else {\r\n          return (\r\n            <Spot\r\n              key={p.id}\r\n              pin={icon}\r\n              lat={Number(p.lat)}\r\n              lng={Number(p.lng)}\r\n              features={{ ...features, timer: new Date(p.createdAt) }}\r\n              content={\r\n                <div\r\n                  style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}\r\n                >\r\n                  <p>\r\n                    <b> Contact: </b>\r\n                    {p.contact}\r\n                  </p>\r\n\r\n                  <p>\r\n                    <b> Address: </b>\r\n                    {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                    <span style={{ lineHeight: 1 }}>{p.address || \"\"}</span>\r\n                  </p>\r\n                  <p>\r\n                    <b> Nature: </b>\r\n                    {filterNature(p.natureId) == null\r\n                      ? null\r\n                      : filterNature(p.natureId).name}\r\n                  </p>\r\n                  <p>\r\n                    <b> Priority: </b>\r\n                    {filterPriority(p.priorityId) == null\r\n                      ? null\r\n                      : filterPriority(p.priorityId).name}\r\n                  </p>\r\n                  <p style={{ lineHeight: \"15px\" }}>\r\n                    <b> Responder: </b>\r\n                    {/* {p.responderInvolved} */}\r\n                    {filterResponders(p.responderInvolved || 0) == null\r\n                      ? null\r\n                      : filterResponders(p.responderInvolved).name}{\" \"}\r\n                    &nbsp; (11.3 Km Away)\r\n                  </p>\r\n                  <p>\r\n                    <b> Operator: </b>\r\n                    {/* {p.operatorInvolved} */}\r\n                    {filterOperators(p.operatorInvolved || 0) == null\r\n                      ? null\r\n                      : filterOperators(p.operatorInvolved).firstname}\r\n                  </p>\r\n                  <p>\r\n                    <b> Supervisor: </b>\r\n                    {/* {p.supervisorInvolved} */}\r\n                    {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                      ? null\r\n                      : filterSupervisors(p.supervisorInvolved).firstname}\r\n                  </p>\r\n                  {p.customerRating && (\r\n                    <>\r\n                      <p>\r\n                        <b> Customer rating: </b> <br />\r\n                        <br />\r\n                        {getRating(p.customerRating)}\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                  <div>{getOper(p.operatorInvolved, p)}</div>\r\n                  <br />\r\n                  <div>\r\n                    {p.statusId == 5 ? (\r\n                      <button\r\n                        className=\"btn btn-success btn-xs btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.updatePanics(p.id, {\r\n                            statusId: 6,\r\n                          }); // Bilal\r\n                          // init();\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <i className=\"fa fa-check\"></i>\r\n                          &nbsp;\r\n                        </span>\r\n                        Resolve\r\n                      </button>\r\n                    ) : null}\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    {p.statusId == 1 ||\r\n                    p.statusId == 2 ||\r\n                    p.statusId == 3 ||\r\n                    p.statusId == 7 ||\r\n                    p.statusId == 6 ||\r\n                    p.statusId == 8 ||\r\n                    p.statusId == 4 ||\r\n                    p.statusId == 5 ? (\r\n                      <button\r\n                        className=\"btn btn-xs btn-danger btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.updatePanics(p.id, {\r\n                            isClose: true,\r\n                          }); // Bilal\r\n                          // init();\r\n                          Beep2();\r\n                        }}\r\n                      >\r\n                        Close\r\n                      </button>\r\n                    ) : null}\r\n                  </div>\r\n                  <div>{p.isCancelled == 1 ? <h3> Cancelled </h3> : null}</div>\r\n                </div>\r\n              }\r\n            />\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getOper = (data, item) => {\r\n    if (data) {\r\n      return null;\r\n    } else {\r\n      if (\r\n        item.statusId == 1 &&\r\n        (item.operatorInvolved == null || item.operatorInvolved == 0)\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={opr}\r\n              onChange={(e) => setOpr(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getOperators()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-info btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                await props.updatePanics(item.id, {\r\n                  operatorInvolved: opr,\r\n                  // statusId: 2,\r\n                }); // Bilal\r\n                // init();\r\n                setOpr(\"\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Set Operator{\" \"}\r\n            </button>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                await props.updatePanics(item.id, {\r\n                  supervisorInvolved: props.user.id,\r\n                  statusId: 2,\r\n                }); // Bilal\r\n                init();\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Self Confirm\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (item.statusId == 1) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.updatePanics(item.id, {\r\n                operatorInvolved: props.user.id,\r\n                statusId: 2,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Confirm\r\n          </button>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.operatorInvolved != 0 &&\r\n        item.operatorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getResponders2()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                // alert(\"ok\");\r\n                await props.updatePanics(item.id, {\r\n                  responderInvolved: Number(res),\r\n                  statusId: 3,\r\n                }); // Bilal\r\n                await setRes(\"\");\r\n                // await init();\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.supervisorInvolved != 0 &&\r\n        item.supervisorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getResponders2()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                let ress = [\r\n                  ...props.online,\r\n                  ...props.offline,\r\n                  ...props.unknown,\r\n                ];\r\n                // console.error(\"Res: \", ress);\r\n                let Data = ress.filter((it) => it.id == Number(res));\r\n                console.error(Data);\r\n                let abc = Data[0];\r\n\r\n                if (abc.db == null) {\r\n                  // alert(\"Responder is not available in the Database: \" + res);\r\n                } else {\r\n                  e.preventDefault();\r\n                  // console.error({ res, id: item.id });\r\n                  await props.updatePanics(item.id, {\r\n                    responderInvolved: abc.db.id,\r\n                    statusId: 3,\r\n                  }); // Bilal\r\n                  await setRes(\"\");\r\n                  // await init();\r\n                }\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 4 &&\r\n        item.responderInvolved != 0 &&\r\n        item.responderInvolved != null\r\n      ) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.updatePanics(item.id, {\r\n                statusId: props.user.roleId == 3 ? 5 : 6,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Resolve\r\n          </button>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  // const content = (p) => {\r\n  //   return (\r\n\r\n  //   );\r\n  // };\r\n\r\n  const getRating = (rate) => {\r\n    if (rate == 0) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 1) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 2) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 3) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 4) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getOperators = () => {\r\n    return props.operators.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}>\r\n            {\" \"}\r\n            {item.firstname + \" \" + item.lastname}{\" \"}\r\n          </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const popButton = async (item) => {\r\n    return \"false\";\r\n  };\r\n\r\n  const getResponders2 = () => {\r\n    let data = [...props.buzy, ...props.online];\r\n    let data2 = _.uniq(data);\r\n    return data2.map((item, index) => {\r\n      if (item.db || true) {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <option value={item.id}>{item.name || \"\"}</option>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  // const goPoint = async (pointer, set, list, data2 = null, cb = null) => {\r\n  //   if (pointer != null) {\r\n  //     await pointer(async (data) => {\r\n  //       if (data.length > list.length) {\r\n  //         await set([...data]);\r\n  //         var centers = [];\r\n  //         if (data2 == null) {\r\n  //           centers = [...data];\r\n  //         } else {\r\n  //           centers = [...data, ...data2];\r\n  //         }\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       } else {\r\n  //         var centers = [...data];\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       }\r\n  //     });\r\n  //   } else {\r\n  //     if (data2 != null && data2.length > 0) {\r\n  //       var centers = [...data2];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     } else {\r\n  //       var centers = [];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   setInterval(async () => {\r\n  //     if (props.getPoints != null) {\r\n  //       await goPoint(props.getPoints, setList, list, null, async (r) => {\r\n  //         console.log(\"Round 1: \", r);\r\n  //         if (props.getPoints2 != null) {\r\n  //           await goPoint(props.getPoints2, setList2, list2, r, async (r2) => {\r\n  //             console.log(\"Round 2: \", r2);\r\n  //             if (props.getPoints3 != null) {\r\n  //               await goPoint(props.getPoints3, setList3, list3, r2, null);\r\n  //             }\r\n  //           });\r\n  //         }\r\n  //       });\r\n  //     } else if (props.getPoints2 != null) {\r\n  //       goPoint(props.getPoints2, setList2, list2, null, null);\r\n  //     } else if (props.getPoints3 != null) {\r\n  //       goPoint(props.getPoints3, setList3, list3, null, null);\r\n  //     }\r\n  //   }, 1000);\r\n  // }, [props.changer, \"text\"]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        {/* <div style={{ position: \"absolute\", top: 50, right: 10, zIndex: 10 }}> */}\r\n        {/* <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              IncreaseZoom();\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              DeccreaseZoom();\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n        </div> */}\r\n        <ReactMapGL\r\n          {...viewport}\r\n          // latitude={lat}\r\n          // longitude={lng}\r\n          mapboxApiAccessToken={KEY}\r\n          mapStyle={mapType}\r\n          onViewportChange={(viewport) => {\r\n            setViewport(viewport);\r\n          }}\r\n        >\r\n          {getSpots(\r\n            props.inQueryPanics,\r\n            {\r\n              shade: \"red\",\r\n              spot: \"green\",\r\n              showSpot: false,\r\n              buzz: true,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/13.png\")\r\n          )}\r\n          {getSpots(\r\n            props.confirmedByOperatorPanics,\r\n            {\r\n              shade: \"blue\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/8.png\")\r\n          )}\r\n          {getSpots(\r\n            props.assignedToResponderPanics,\r\n            {\r\n              shade: \"yellow\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/8.png\")\r\n          )}\r\n          {getSpots(\r\n            props.confirmedByResponderPanics,\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/10.png\")\r\n          )}\r\n          {getSpots(\r\n            props.resolvedByResponderPanics,\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/15.png\")\r\n          )}\r\n          {getSpots(\r\n            props.resolvedByOperatorPanics,\r\n            {\r\n              shade: \"green\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/17.png\")\r\n          )}\r\n          {getSpots(\r\n            props.closedBySupervisorPanics,\r\n            {\r\n              shade: \"green\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/18.png\")\r\n          )}\r\n          {getSpots(\r\n            props.closedByCustomerPanics,\r\n            {\r\n              shade: \"black\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/18.png\")\r\n          )}\r\n          {getSpots(\r\n            props.online,\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"darkgreen\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {getSpots(\r\n            props.offline,\r\n            {\r\n              shade: \"pink\",\r\n              spot: \"red\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {getSpots(\r\n            props.unknown,\r\n            {\r\n              shade: \"yellow\",\r\n              spot: \"orange\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {/* {getSpots(list2, \"/images/pin2.png\")} */}\r\n          {/* {getSpots(list3, \"/images/pin3.png\")} */}\r\n        </ReactMapGL>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  customers: state.customers,\r\n  Fcustomers: state.customers.filter((item) => item.isSubmitted == true),\r\n  natures: state.natures,\r\n  priorities: state.priorities,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n  buzy: state.buzyResponders,\r\n  panics: state.panics,\r\n  operators: state.operators,\r\n  supervisors: state.supervisors,\r\n  inQueryPanics: state.inQueryPanics,\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  assignedToResponderPanics: state.assignedToResponderPanics,\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  closedByCustomerPanics: state.closedByCustomerPanics,\r\n  zoomLevel: state.zoomLevel,\r\n  latitude: state.latitude,\r\n  longitude: state.longitude,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getPanics: () => GetPanics(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  getNatures: () => GetNatures(dispatch),\r\n  getCenter: (coords) => GetCenter(dispatch, coords),\r\n  getAllResponder: () => GetAllResponder(dispatch),\r\n  getPriorities: () => GetPriorities(dispatch),\r\n  updatePanics: (id, data) => UpdatePanics(dispatch, id, data),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Supervisor\\Create\\Create.jsx",["2517","2518","2519","2520","2521"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Supervisor\\List\\List.jsx",["2522","2523","2524","2525"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Geofence\\Map\\Map.jsx",["2526","2527","2528","2529","2530","2531","2532","2533","2534","2535"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Operator\\Create\\Create.jsx",["2536","2537","2538","2539","2540"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Users\\Create\\Create.jsx",["2541","2542","2543","2544","2545","2546"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetUsers,\r\n  CreateAdmin,\r\n  UpdateUsers,\r\n  UserLogout,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Super Admin Groups Create\");\r\n\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [groupId, setGroupId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let data = props.admin.filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setFirstname(data.firstname);\r\n      setLastname(data.lastname);\r\n      setContact(data.contact);\r\n      setEmail(data.email);\r\n      setPassword(data.password);\r\n      setGroupId(data.groupId);\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  const getGroups = () => {\r\n    return props.groups.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setFirstname(\"\");\r\n    setLastname(\"\");\r\n    setContact(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    if (groupId != \"\") {\r\n      if (props.id != \"\") {\r\n        await props.updateUsers(props.id, {\r\n          firstname,\r\n          lastname,\r\n          contact,\r\n          email,\r\n          password,\r\n          groupId,\r\n        });\r\n      } else {\r\n        await props.createAdmin({\r\n          firstname,\r\n          lastname,\r\n          contact,\r\n          email,\r\n          password,\r\n          groupId,\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        props.getUsers();\r\n        Empty();\r\n        props.setPage(\"main\");\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter First Name \"\r\n          className=\"form-control\"\r\n          value={firstname}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Last Name \"\r\n          className=\"form-control\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Contact \"\r\n          className=\"form-control\"\r\n          value={contact}\r\n          onChange={(e) => setContact(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Email \"\r\n          className=\"form-control\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\" Enter Password \"\r\n          className=\"form-control\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          value={groupId}\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n          // disabled\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br />\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups.filter((item) => item.groupId == state.logger.groupId),\r\n  admin: state.admin,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  createAdmin: (data) => CreateAdmin(dispatch, data),\r\n  updateUsers: (id, data) => UpdateUsers(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Operator\\List\\List.jsx",["2547","2548","2549","2550","2551"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetUsers,\r\n  DelUsers,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst List = (props) => {\r\n  console.log(\"Supervisor - Operator List\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const del = async (id) => {\r\n    await props.delUsers(id);\r\n    setTimeout(() => {\r\n      props.getUsers();\r\n    }, 500);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    props.setId(id);\r\n    props.setPage(\"add\");\r\n  };\r\n\r\n  const getTableData = () => {\r\n    return props.operators.map((item, index) => {\r\n      let color = item.userActivation == 1 ? \"lightgreen\" : \"#eee\";\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr style={{ background: color }}>\r\n            <td> {item.id} </td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td> {item.password} </td>\r\n            <td> {item.groupId} </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ height: \"400px\", overflow: \"auto\" }}>\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Password </th>\r\n                <th> Group </th>\r\n                <th> - </th>\r\n                <th> - </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData()}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return <>{getTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n  operators: state.operators,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  delUsers: (id) => DelUsers(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Users\\List\\List.jsx",["2552","2553","2554"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetUsers,\r\n  DelUsers,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst List = (props) => {\r\n  console.log(\"Super Admin Users List Component\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const del = async (id) => {\r\n    await props.delUsers(id);\r\n    setTimeout(() => {\r\n      props.getUsers();\r\n    }, 100);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    props.setId(id);\r\n    props.setPage(\"add\");\r\n  };\r\n\r\n  const getTableData = () => {\r\n    return props.admin.reverse().map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td> {item.password} </td>\r\n            <td> {item.groupId} </td>\r\n            <td>\r\n              {\" \"}\r\n              {item.userActivation ? (\r\n                <i className=\"fa fa-toggle-on\"></i>\r\n              ) : (\r\n                <i className=\"fa fa-toggle-off\"></i>\r\n              )}{\" \"}\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ height: \"400px\", overflow: \"auto\" }}>\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Password </th>\r\n                <th> Group </th>\r\n                <th> Status </th>\r\n                <th> - </th>\r\n                <th> - </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData()}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return <>{getTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n  admin: state.admin,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  delUsers: (id) => DelUsers(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\Helpers\\utils.js",["2555","2556","2557","2558"],"module.exports.CheckIfEmpty = (data) => {\r\n  if (\r\n    data != null &&\r\n    data != 0 &&\r\n    data != \"\" &&\r\n    data != {} &&\r\n    typeof data != \"undefined\" &&\r\n    data != []\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Supervisor\\Create\\Create.jsx",["2559","2560","2561","2562","2563"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\ResponderView\\Create\\Create.jsx",["2564","2565","2566","2567","2568","2569","2570","2571","2572","2573"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Supervisor\\List\\List.jsx",["2574","2575","2576","2577"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Services\\List\\List.jsx",["2578","2579","2580","2581"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Services\\Create\\Create.jsx",["2582","2583","2584","2585","2586","2587","2588"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Reports\\Reports.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Groups\\Create\\Create.jsx",["2589","2590","2591","2592","2593"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Map\\Spot.jsx",["2594","2595"],"import React, { useState } from \"react\";\r\nimport { Marker, Popup } from \"react-map-gl\";\r\nimport Pin from \"./Pin\";\r\n\r\nconst Spot = (props) => {\r\n  //console.log(\"props from spot.jsx\", props);\r\n  const myPop = (\r\n    // <Popup\r\n    //   latitude={props.lat}\r\n    //   longitude={props.lng}\r\n    //   onClose={() => {\r\n    //     if (props.caller)\r\n    //       props.caller(() => {\r\n    //         setPop(false);\r\n    //       });\r\n    //     else setPop(false);\r\n    //   }}\r\n    //   style={{ padding: 0, margin: 0 }}\r\n    // >\r\n    //   <div> {props.content || null} </div>\r\n    // </Popup>\r\n    <div\r\n      className=\"\"\r\n      style={{\r\n        backgroundColor: \"#fff\",\r\n        minWidth: 200,\r\n        padding: 10,\r\n        position: \"absolute\",\r\n        top: 50,\r\n        left: 0,\r\n        lineHeight: \"5px\",\r\n      }}\r\n    >\r\n      <span style={{ zIndex: 1000000 }}>\r\n        <span className=\"pull-right\" onClick={() => setPop(false)}>\r\n          <i className=\"fa fa-remove\"></i>\r\n        </span>\r\n        <div className=\"clearfix\"></div>\r\n      </span>\r\n\r\n      {props.content || null}\r\n    </div>\r\n  );\r\n  const [pop, setPop] = useState(false);\r\n  const getPop = () => {\r\n    if (pop == true) {\r\n      if (props.content == null) {\r\n        return null;\r\n      } else {\r\n        return myPop;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Marker\r\n        latitude={Number(props.lat) || 31}\r\n        longitude={Number(props.lng) || 74}\r\n      >\r\n        {getPop()}\r\n        <Pin setPop={setPop} pin={props.pin} features={props.features || {}} />\r\n      </Marker>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Spot;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Notifications\\private notifications\\Notification.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Reports\\Reports.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Groups\\List\\List.jsx",["2596","2597","2598","2599"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Subscriptions\\Create\\Create.jsx",["2600","2601","2602","2603","2604","2605"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Subscriptions\\List\\List.jsx",["2606","2607","2608","2609"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Priorities\\Create\\Create.jsx",["2610","2611","2612","2613","2614","2615","2616"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Priorities\\List\\List.jsx",["2617","2618","2619","2620","2621"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Natures\\Create\\Create.jsx",["2622","2623","2624","2625","2626","2627","2628"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Geofence\\Map\\Map.jsx",["2629","2630","2631","2632","2633","2634","2635","2636","2637","2638"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Operator\\List\\List.jsx",["2639","2640","2641","2642","2643"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\StatusBar\\StatusBar.jsx",["2644"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Map\\Map1.jsx",["2645","2646","2647","2648","2649","2650","2651","2652","2653","2654","2655","2656","2657","2658","2659","2660","2661","2662","2663","2664","2665","2666","2667","2668","2669","2670","2671","2672","2673","2674","2675","2676","2677","2678","2679","2680","2681","2682","2683","2684","2685"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetUsers,\r\n  GetPanics,\r\n  GetNatures,\r\n  GetPriorities,\r\n  UpdatePanics,\r\n  GetAllResponder,\r\n  changeZoom,\r\n  GetCenter,\r\n} from \"../../../../../actions/index\";\r\nimport ReactMapGL from \"react-map-gl\";\r\nimport Spot from \"./Spot\";\r\nimport { Beep1, Beep2, Beep3, Beep4 } from \"../../../../../Beeper/Beeper\";\r\nimport { ToastsStore } from \"react-toasts\";\r\nimport { getCenter } from \"geolib\";\r\n// import axios from \"axios\";\r\n// import { URL } from \"../../config/config\";\r\nimport _ from \"lodash\";\r\n\r\nconst Map = (props) => {\r\n  const count = useRef(0);\r\n  count.current++;\r\n\r\n  console.log(\"Supervisor Main Map: \" + count.current);\r\n\r\n  const KEY =\r\n    \"pk.eyJ1IjoiemFlZW10YXJyYXIzIiwiYSI6ImNrODF6N21kZDAxa2kzb255c3I4bnh5NWsifQ.CqUWmnyMb0nGVwAQYF0d6w\";\r\n  var mapType = \"\";\r\n  switch (props.type) {\r\n    case 1:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck824k9kf2i9t1iofd77sbalm\";\r\n      }\r\n      break;\r\n    case 2:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck81zu7cs2dp91iof46988lga\";\r\n      }\r\n      break;\r\n    default: {\r\n      // mapType = \"mapbox://styles/mapbox/dark-v10\";\r\n      mapType = \"mapbox://styles/mapbox/streets-v9\";\r\n      // mapType = \"mapbox://styles/mapbox/satellite-v9\";\r\n      // mapType = \"mapbox://styles/mapbox/streets-v11\";\r\n      // mapType = \"mapbox://styles/mapbox/light-v10\";\r\n    }\r\n  }\r\n  // const [lat, setLat] = useState(props.lat);\r\n  // const [lng, setLng] = useState(props.lng);\r\n  const [opr, setOpr] = useState(\"\");\r\n\r\n  const [viewport, setViewport] = useState({\r\n    latitude: props.latitude || 31,\r\n    longitude: props.longitude || 74,\r\n    width: props.width || \"100vw\",\r\n    height: props.height || \"100vh\",\r\n    zoom: props.zoomLevel,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setViewport({\r\n      ...viewport,\r\n      latitude: props.latitude,\r\n      longitude: props.longitude,\r\n      zoom: props.zoomLevel,\r\n    });\r\n  }, [props.zoomLevel, props.longitude, props.latitude]);\r\n\r\n  const [prev, setPrev] = useState(0);\r\n  const [prev2, setPrev2] = useState(0);\r\n  const [res, setRes] = useState(\"\");\r\n\r\n  const filterNature = (id) => {\r\n    let data = props.natures.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterPriority = (id) => {\r\n    let data = props.priorities.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterResponders = (id) => {\r\n    let data1 = [...props.online, ...props.offline, ...props.unknown];\r\n    let data = data1.filter((item) => {\r\n      if (item.db != null) {\r\n        return item.db.id == id;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterOperators = (id) => {\r\n    let data = props.operators.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterSupervisors = (id) => {\r\n    let data = props.supervisors.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const init = async () => {\r\n    // if (props.panic.length > prev) {\r\n    //   console.error(\"New Panic\");\r\n    // }\r\n    await props.getUsers();\r\n    await props.getPanics();\r\n    await props.getAllResponder();\r\n\r\n    // console.warning(\"Prev: \", prev);\r\n  };\r\n\r\n  let loop;\r\n\r\n  useEffect(() => {\r\n    loop = setInterval(async () => {\r\n      console.log(\"Panic Loop\");\r\n      await init();\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(loop);\r\n    };\r\n  }, []);\r\n\r\n  const handleNewPanic = async () => {\r\n    await setPrev((item) => {\r\n      let p = [...props.panics];\r\n      // ToastsStore.success(JSON.stringify(p));\r\n      if (p.length > item) {\r\n        props.getCenter(props.panics);\r\n        Beep1();\r\n        ToastsStore.info(\"New Panic Alert has Arrived \");\r\n      }\r\n      return p.length;\r\n    });\r\n  };\r\n\r\n  const handleCusts = async () => {\r\n    await setPrev2((item) => {\r\n      let p = [...props.Fcustomers];\r\n      if (p.length > item) {\r\n        Beep3();\r\n        ToastsStore.info(\"New Application has Arrived \");\r\n      }\r\n      return p.length;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCusts();\r\n    return;\r\n  }, [props.Fcustomers]);\r\n\r\n  useEffect(() => {\r\n    // Beep1();\r\n    handleNewPanic();\r\n    return;\r\n  }, [props.panics]);\r\n\r\n  useEffect(() => {\r\n    // console.error(\"Prev: \", prev);\r\n    return;\r\n  }, [prev]);\r\n\r\n  // const IncreaseZoom = async () => {\r\n  //   if (viewport.zoom < 30) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom + 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // const DeccreaseZoom = async () => {\r\n  //   if (viewport.zoom > 5) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom - 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // var zoomer = false;\r\n  // const center = async (data) => {\r\n  //   if (zoomer == false) {\r\n  //     var lists = [];\r\n  //     for (let i = 0; i < data.length; i++) {\r\n  //       await lists.push({\r\n  //         latitude: Number(data[i].lat),\r\n  //         longitude: Number(data[i].lng),\r\n  //       });\r\n  //     }\r\n  //     if (lists.length > 0) {\r\n  //       console.log(\"Access: \", lists);\r\n  //       var url = URL + \"/panics/getCenter\";\r\n  //       axios\r\n  //         .post(url, { data: lists })\r\n  //         .then(async (response) => {\r\n  //           var info = response.data.result.data;\r\n  //           console.log(\"Access2: \", info);\r\n  //           await setViewport({\r\n  //             latitude: info.latitude,\r\n  //             longitude: info.longitude,\r\n  //             width: viewport.width,\r\n  //             height: viewport.height,\r\n  //             zoom: viewport.zoom,\r\n  //           });\r\n  //         })\r\n  //         .catch((e) => {\r\n  //           console.log(e);\r\n  //         });\r\n  //     }\r\n  //     zoomer = true;\r\n  //   }\r\n  // };\r\n\r\n  // const [list, setList] = useState([]);\r\n  // const [list2, setList2] = useState([]);\r\n  // const [list3, setList3] = useState([]);\r\n  // const [list4, setList4] = useState([]);\r\n  // const [list5, setList5] = useState([]);\r\n\r\n  const getResss = (data) => {\r\n    // console.error(\"Groups1: \", props.groups);\r\n    // console.error(\"All Groups: \", props.allGroups);\r\n    // console.error(\"Groups2: \", props.groups2);\r\n\r\n    // let info = props.groups2.map((p) => {\r\n    //   let ele = p;\r\n    //   let grouper = ele.groupId;\r\n    //   let theGroup = props.allGroups.filter((item) => item.id == grouper);\r\n    //   if (theGroup && theGroup.length > 0) {\r\n    //     return theGroup[0];\r\n    //   }\r\n    // });\r\n    // let info2 = [];\r\n    // if (info && info.length > 0) {\r\n    //   info2 = props.allGroups.filter((item) => info[0].id == item.groupId);\r\n    // }\r\n    // console.error(\"Resp2: \", info2);\r\n    // for (let i = 0; i < props.group2.length; i++) {\r\n    // }\r\n    // console.error(\"Resp1: \", info);\r\n    let groupIds = props.groups2.map((item) => item.id);\r\n    // console.error(\"Group1: \", groupIds);\r\n    // let admin = props.allGroups.filter((item) => _.includes(groupIds, item.id));\r\n    // console.error(\"Groups2: \", admin);\r\n    // console.error(\"Data: \", data);\r\n    let result = data.filter((item) => {\r\n      if (item.db != null) {\r\n        let group = Number(item.db.groupId);\r\n        // console.error(groupIds, group);\r\n        console.error(\"Data: \", item);\r\n        if (_.includes(groupIds, group)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    // console.error(result);\r\n\r\n    return [];\r\n    return result;\r\n  };\r\n\r\n  const getSpots = (\r\n    data,\r\n    features,\r\n    pin = \"./../../../pin/8.png\",\r\n    type = \"\"\r\n  ) => {\r\n    let icon = pin;\r\n    if (type == \"responder\") {\r\n      return data.map((p) => {\r\n        return (\r\n          <Spot\r\n            key={p.id}\r\n            pin={icon}\r\n            lat={Number(p.lat)}\r\n            lng={Number(p.lng)}\r\n            features={features}\r\n            content={\r\n              <div style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}>\r\n                <p>\r\n                  <b> Name: </b>\r\n                  {p.db == null\r\n                    ? null\r\n                    : p.db.firstname + \" \" + p.db.lastname}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <b> Traccar: </b> {p.name || \"Anonymous\"}{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b> Contact: </b>\r\n                  {p.db == null ? p.contact || \"\" : p.db.contact}\r\n                </p>\r\n                <p>\r\n                  <b> Email: </b>\r\n                  {p.db == null ? null : p.db.email || \"\"}\r\n                </p>\r\n                <p>\r\n                  <b> Address: </b>\r\n                  {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                  <span style={{ lineHeight: 1 }}>\r\n                    {p.db == null ? null : p.db.address || \"\"}\r\n                  </span>\r\n                </p>\r\n                {/* <p>\r\n                  <b> Nature: </b>\r\n                  {filterNature(p.natureId) == null\r\n                    ? null\r\n                    : filterNature(p.natureId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Priority: </b>\r\n                  {filterPriority(p.priorityId) == null\r\n                    ? null\r\n                    : filterPriority(p.priorityId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Responder: </b>\r\n                 \r\n                  {filterResponders(p.responderInvolved || 0) == null\r\n                    ? null\r\n                    : filterResponders(p.responderInvolved).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Operator: </b>\r\n                  \r\n                  {filterOperators(p.operatorInvolved || 0) == null\r\n                    ? null\r\n                    : filterOperators(p.operatorInvolved).firstname}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Supervisor: </b>\r\n                 \r\n                  {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                    ? null\r\n                    : filterSupervisors(p.supervisorInvolved).firstname}\r\n                </p> */}\r\n                {/* <div>{popButton(p)}</div> */}\r\n              </div>\r\n            }\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      return data.map((p) => {\r\n        if (p.isClose == true) {\r\n          return null;\r\n        } else {\r\n          return (\r\n            <Spot\r\n              key={p.id}\r\n              pin={icon}\r\n              lat={Number(p.lat)}\r\n              lng={Number(p.lng)}\r\n              features={{ ...features, timer: new Date(p.createdAt) }}\r\n              content={\r\n                <div\r\n                  style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}\r\n                >\r\n                  <p>\r\n                    <b> Contact: </b>\r\n                    {p.contact}\r\n                  </p>\r\n\r\n                  <p>\r\n                    <b> Address: </b>\r\n                    {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                    <span style={{ lineHeight: 1 }}>{p.address || \"\"}</span>\r\n                  </p>\r\n                  <p>\r\n                    <b> Nature: </b>\r\n                    {filterNature(p.natureId) == null\r\n                      ? null\r\n                      : filterNature(p.natureId).name}\r\n                  </p>\r\n                  <p>\r\n                    <b> Priority: </b>\r\n                    {filterPriority(p.priorityId) == null\r\n                      ? null\r\n                      : filterPriority(p.priorityId).name}\r\n                  </p>\r\n                  <p style={{ lineHeight: \"15px\" }}>\r\n                    <b> Responder: </b>\r\n                    {/* {p.responderInvolved} */}\r\n                    {filterResponders(p.responderInvolved || 0) == null\r\n                      ? null\r\n                      : filterResponders(p.responderInvolved).name}{\" \"}\r\n                    &nbsp; (11.3 Km Away)\r\n                  </p>\r\n                  <p>\r\n                    <b> Operator: </b>\r\n                    {/* {p.operatorInvolved} */}\r\n                    {filterOperators(p.operatorInvolved || 0) == null\r\n                      ? null\r\n                      : filterOperators(p.operatorInvolved).firstname}\r\n                  </p>\r\n                  <p>\r\n                    <b> Supervisor: </b>\r\n                    {/* {p.supervisorInvolved} */}\r\n                    {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                      ? null\r\n                      : filterSupervisors(p.supervisorInvolved).firstname}\r\n                  </p>\r\n                  {p.customerRating && (\r\n                    <>\r\n                      <p>\r\n                        <b> Customer rating: </b> <br />\r\n                        <br />\r\n                        {getRating(p.customerRating)}\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                  {/* <div>{getOper(p.operatorInvolved, p)}</div> */}\r\n                  {/* <br />\r\n                  <div>\r\n                    {p.statusId == 5 ? (\r\n                      <button\r\n                        className=\"btn btn-success btn-xs btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.updatePanics(p.id, {\r\n                            statusId: 6,\r\n                          }); // Bilal\r\n                          // init();\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <i className=\"fa fa-check\"></i>\r\n                          &nbsp;\r\n                        </span>\r\n                        Resolve\r\n                      </button>\r\n                    ) : null}\r\n                  </div> */}\r\n                  <br />\r\n                  {/* <div>\r\n                    {p.statusId == 1 ||\r\n                    p.statusId == 2 ||\r\n                    p.statusId == 3 ||\r\n                    p.statusId == 7 ||\r\n                    p.statusId == 6 ||\r\n                    p.statusId == 8 ||\r\n                    p.statusId == 4 ||\r\n                    p.statusId == 5 ? (\r\n                      <button\r\n                        className=\"btn btn-xs btn-danger btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.updatePanics(p.id, {\r\n                            isClose: true,\r\n                          }); // Bilal\r\n                          // init();\r\n                          Beep2();\r\n                        }}\r\n                      >\r\n                        Close\r\n                      </button>\r\n                    ) : null}\r\n                  </div> */}\r\n                  <div>{p.isCancelled == 1 ? <h3> Cancelled </h3> : null}</div>\r\n                </div>\r\n              }\r\n            />\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getOper = (data, item) => {\r\n    if (data) {\r\n      return null;\r\n    } else {\r\n      if (\r\n        item.statusId == 1 &&\r\n        (item.operatorInvolved == null || item.operatorInvolved == 0)\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={opr}\r\n              onChange={(e) => setOpr(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getOperators()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-info btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                await props.updatePanics(item.id, {\r\n                  operatorInvolved: opr,\r\n                  // statusId: 2,\r\n                }); // Bilal\r\n                // init();\r\n                setOpr(\"\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Set Operator{\" \"}\r\n            </button>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                await props.updatePanics(item.id, {\r\n                  supervisorInvolved: props.user.id,\r\n                  statusId: 2,\r\n                }); // Bilal\r\n                init();\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Self Confirm\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (item.statusId == 1) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.updatePanics(item.id, {\r\n                operatorInvolved: props.user.id,\r\n                statusId: 2,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Confirm\r\n          </button>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.operatorInvolved != 0 &&\r\n        item.operatorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getResponders2()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                // alert(\"ok\");\r\n                await props.updatePanics(item.id, {\r\n                  responderInvolved: Number(res),\r\n                  statusId: 3,\r\n                }); // Bilal\r\n                await setRes(\"\");\r\n                // await init();\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.supervisorInvolved != 0 &&\r\n        item.supervisorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getResponders2()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                let ress = [\r\n                  ...props.online,\r\n                  ...props.offline,\r\n                  ...props.unknown,\r\n                ];\r\n                // console.error(\"Res: \", ress);\r\n                let Data = ress.filter((it) => it.id == Number(res));\r\n                console.error(Data);\r\n                let abc = Data[0];\r\n\r\n                if (abc.db == null) {\r\n                  // alert(\"Responder is not available in the Database: \" + res);\r\n                } else {\r\n                  e.preventDefault();\r\n                  // console.error({ res, id: item.id });\r\n                  await props.updatePanics(item.id, {\r\n                    responderInvolved: abc.db.id,\r\n                    statusId: 3,\r\n                  }); // Bilal\r\n                  await setRes(\"\");\r\n                  // await init();\r\n                }\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 4 &&\r\n        item.responderInvolved != 0 &&\r\n        item.responderInvolved != null\r\n      ) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.updatePanics(item.id, {\r\n                statusId: props.user.roleId == 3 ? 5 : 6,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Resolve\r\n          </button>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  // const content = (p) => {\r\n  //   return (\r\n\r\n  //   );\r\n  // };\r\n\r\n  const getRating = (rate) => {\r\n    if (rate == 0) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 1) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 2) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 3) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 4) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getOperators = () => {\r\n    return props.operators.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}>\r\n            {\" \"}\r\n            {item.firstname + \" \" + item.lastname}{\" \"}\r\n          </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const popButton = async (item) => {\r\n    return \"false\";\r\n  };\r\n\r\n  const getResponders2 = () => {\r\n    let data = [...props.buzy, ...props.online];\r\n    let data2 = _.uniq(data);\r\n    return data2.map((item, index) => {\r\n      if (item.db || true) {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <option value={item.id}>{item.name || \"\"}</option>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  // const goPoint = async (pointer, set, list, data2 = null, cb = null) => {\r\n  //   if (pointer != null) {\r\n  //     await pointer(async (data) => {\r\n  //       if (data.length > list.length) {\r\n  //         await set([...data]);\r\n  //         var centers = [];\r\n  //         if (data2 == null) {\r\n  //           centers = [...data];\r\n  //         } else {\r\n  //           centers = [...data, ...data2];\r\n  //         }\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       } else {\r\n  //         var centers = [...data];\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       }\r\n  //     });\r\n  //   } else {\r\n  //     if (data2 != null && data2.length > 0) {\r\n  //       var centers = [...data2];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     } else {\r\n  //       var centers = [];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   setInterval(async () => {\r\n  //     if (props.getPoints != null) {\r\n  //       await goPoint(props.getPoints, setList, list, null, async (r) => {\r\n  //         console.log(\"Round 1: \", r);\r\n  //         if (props.getPoints2 != null) {\r\n  //           await goPoint(props.getPoints2, setList2, list2, r, async (r2) => {\r\n  //             console.log(\"Round 2: \", r2);\r\n  //             if (props.getPoints3 != null) {\r\n  //               await goPoint(props.getPoints3, setList3, list3, r2, null);\r\n  //             }\r\n  //           });\r\n  //         }\r\n  //       });\r\n  //     } else if (props.getPoints2 != null) {\r\n  //       goPoint(props.getPoints2, setList2, list2, null, null);\r\n  //     } else if (props.getPoints3 != null) {\r\n  //       goPoint(props.getPoints3, setList3, list3, null, null);\r\n  //     }\r\n  //   }, 1000);\r\n  // }, [props.changer, \"text\"]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        {/* <div style={{ position: \"absolute\", top: 50, right: 10, zIndex: 10 }}> */}\r\n        {/* <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              IncreaseZoom();\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              DeccreaseZoom();\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n        </div> */}\r\n        <ReactMapGL\r\n          {...viewport}\r\n          // latitude={lat}\r\n          // longitude={lng}\r\n          mapboxApiAccessToken={KEY}\r\n          mapStyle={mapType}\r\n          onViewportChange={(viewport) => {\r\n            setViewport(viewport);\r\n          }}\r\n        >\r\n          {getSpots(\r\n            props.inQueryPanics,\r\n            {\r\n              shade: \"red\",\r\n              spot: \"green\",\r\n              showSpot: false,\r\n              buzz: true,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/13.png\")\r\n          )}\r\n          {getSpots(\r\n            props.confirmedByOperatorPanics,\r\n            {\r\n              shade: \"blue\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/8.png\")\r\n          )}\r\n          {getSpots(\r\n            props.assignedToResponderPanics,\r\n            {\r\n              shade: \"yellow\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/8.png\")\r\n          )}\r\n          {getSpots(\r\n            props.confirmedByResponderPanics,\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/10.png\")\r\n          )}\r\n          {getSpots(\r\n            props.resolvedByResponderPanics,\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/15.png\")\r\n          )}\r\n          {getSpots(\r\n            props.resolvedByOperatorPanics,\r\n            {\r\n              shade: \"green\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/17.png\")\r\n          )}\r\n          {getSpots(\r\n            props.closedBySupervisorPanics,\r\n            {\r\n              shade: \"green\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/18.png\")\r\n          )}\r\n          {getSpots(\r\n            props.closedByCustomerPanics,\r\n            {\r\n              shade: \"black\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/18.png\")\r\n          )}\r\n          {getSpots(\r\n            getResss(props.online),\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"darkgreen\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {getSpots(\r\n            getResss(props.offline),\r\n            {\r\n              shade: \"pink\",\r\n              spot: \"red\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {getSpots(\r\n            getResss(props.unknown),\r\n            {\r\n              shade: \"yellow\",\r\n              spot: \"orange\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {/* {getSpots(list2, \"/images/pin2.png\")} */}\r\n          {/* {getSpots(list3, \"/images/pin3.png\")} */}\r\n        </ReactMapGL>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  customers: state.customers,\r\n  Fcustomers: state.customers.filter((item) => item.isSubmitted == true),\r\n  natures: state.natures,\r\n  priorities: state.priorities,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n  buzy: state.buzyResponders,\r\n  panics: state.panics,\r\n  operators: state.operators,\r\n  supervisors: state.supervisors,\r\n  inQueryPanics: state.inQueryPanics,\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  assignedToResponderPanics: state.assignedToResponderPanics,\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  closedByCustomerPanics: state.closedByCustomerPanics,\r\n  zoomLevel: state.zoomLevel,\r\n  latitude: state.latitude,\r\n  longitude: state.longitude,\r\n  allGroups: state.groups,\r\n  groups: state.groups.filter((item) => item.groupId == state.logger.groupId),\r\n  groups2: state.groups.filter((item) => {\r\n    let sprvsr = item.id == state.logger.groupId;\r\n    if (sprvsr) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getPanics: () => GetPanics(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  getNatures: () => GetNatures(dispatch),\r\n  getCenter: (coords) => GetCenter(dispatch, coords),\r\n  getAllResponder: () => GetAllResponder(dispatch),\r\n  getPriorities: () => GetPriorities(dispatch),\r\n  updatePanics: (id, data) => UpdatePanics(dispatch, id, data),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Users\\Create\\Create.jsx",["2686","2687","2688","2689"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Operator\\Create\\Create.jsx",["2690","2691","2692","2693","2694"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Natures\\List\\List.jsx",["2695","2696","2697","2698"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Users\\List\\List.jsx",["2699","2700","2701"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Priorities\\List\\List.jsx",["2702","2703","2704","2705","2706"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Priorities\\Create\\Create.jsx",["2707","2708","2709","2710","2711","2712","2713"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Reports\\Reports.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Subscriptions\\Create\\Create.jsx",["2714","2715","2716","2717","2718","2719"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Groups\\List\\List.jsx",["2720","2721","2722","2723"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Groups\\Create\\Create.jsx",["2724","2725","2726","2727","2728"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetTraccarGroups,\r\n  CreateTraccarGroups,\r\n  UpdateTraccarGroups,\r\n  UserLogout,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Group Create\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [groupId, setGroupId] = useState(props.user.groupId + \"\" || \"\");\r\n\r\n  useEffect(() => {\r\n    let data = props.groups.filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setName(data.name);\r\n      setGroupId(data.groupId == 0 ? \"\" : data.groupId);\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  const getGroups = () => {\r\n    return props.groups.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setName(\"\");\r\n    setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    // console.error({ id: props.id, name, groupId });\r\n    if (props.id != \"\") {\r\n      await props.updateTraccarGroups(props.id, { name, groupId });\r\n    } else {\r\n      await props.createTraccarGroups({ name, groupId });\r\n    }\r\n    setTimeout(() => {\r\n      props.getTraccarGroups();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          value={groupId}\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n          disabled\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br />\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups, // .filter((item) => item.groupId == state.logger.groupId),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n  createTraccarGroups: (data) => CreateTraccarGroups(dispatch, data),\r\n  updateTraccarGroups: (id, data) => UpdateTraccarGroups(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Subscriptions\\List\\List.jsx",["2729","2730","2731","2732"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\StatusBar\\StatusBar.jsx",["2733"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Map\\Map1.jsx",["2734","2735","2736","2737","2738","2739","2740","2741","2742","2743","2744","2745","2746","2747","2748","2749","2750","2751","2752","2753","2754","2755","2756","2757","2758","2759","2760","2761","2762","2763","2764","2765","2766","2767","2768","2769","2770","2771","2772","2773","2774","2775","2776","2777","2778","2779","2780","2781","2782","2783","2784","2785","2786","2787","2788","2789","2790","2791","2792","2793","2794","2795","2796","2797"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { CheckIfEmpty } from \"../../../../../Helpers/utils\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetUsers,\r\n  GetPanics,\r\n  GetNatures,\r\n  GetPriorities,\r\n  UpdatePanics,\r\n  SupervisorAcceptPanic_UpdatePanics,\r\n  SupervisorAssignPanicToRes_UpdatePanics,\r\n  SupervisorResolvePanic_UpdatePanics,\r\n  ClosePanic_UpdatePanics,\r\n  SolvePanic_UpdatePanics,\r\n  GetAllResponder,\r\n  changeZoom,\r\n  GetCenter,\r\n} from \"../../../../../actions/index\";\r\nimport ReactMapGL from \"react-map-gl\";\r\nimport Spot from \"./Spot\";\r\nimport { Beep1, Beep2, Beep3, Beep4 } from \"../../../../../Beeper/Beeper\";\r\nimport { ToastsStore } from \"react-toasts\";\r\nimport { getCenter } from \"geolib\";\r\n// import axios from \"axios\";\r\n// import { URL } from \"../../config/config\";\r\nimport _ from \"lodash\";\r\n\r\nconst Map = (props) => {\r\n  const count = useRef(0);\r\n  count.current++;\r\n\r\n  console.log(\"Supervisor Main Map: \" + count.current);\r\n\r\n  const KEY =\r\n    \"pk.eyJ1IjoiemFlZW10YXJyYXIzIiwiYSI6ImNrODF6N21kZDAxa2kzb255c3I4bnh5NWsifQ.CqUWmnyMb0nGVwAQYF0d6w\";\r\n  var mapType = \"\";\r\n  switch (props.type) {\r\n    case 1:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck824k9kf2i9t1iofd77sbalm\";\r\n      }\r\n      break;\r\n    case 2:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck81zu7cs2dp91iof46988lga\";\r\n      }\r\n      break;\r\n    default: {\r\n      // mapType = \"mapbox://styles/mapbox/dark-v10\";\r\n      mapType = \"mapbox://styles/mapbox/streets-v9\";\r\n      // mapType = \"mapbox://styles/mapbox/satellite-v9\";\r\n      // mapType = \"mapbox://styles/mapbox/streets-v11\";\r\n      // mapType = \"mapbox://styles/mapbox/light-v10\";\r\n    }\r\n  }\r\n  // const [lat, setLat] = useState(props.lat);\r\n  // const [lng, setLng] = useState(props.lng);\r\n  const [opr, setOpr] = useState(\"\");\r\n\r\n  const [viewport, setViewport] = useState({\r\n    latitude: props.latitude || 31,\r\n    longitude: props.longitude || 74,\r\n    width: props.width || \"100vw\",\r\n    height: props.height || \"100vh\",\r\n    zoom: props.zoomLevel,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setViewport({\r\n      ...viewport,\r\n      latitude: props.latitude,\r\n      longitude: props.longitude,\r\n      zoom: props.zoomLevel,\r\n    });\r\n  }, [props.zoomLevel, props.longitude, props.latitude]);\r\n\r\n  const [prev, setPrev] = useState(0);\r\n  const [prev2, setPrev2] = useState(0);\r\n  const [res, setRes] = useState(\"\");\r\n\r\n  const filterNature = (id) => {\r\n    let data = props.natures.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterPriority = (id) => {\r\n    let data = props.priorities.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterResponders = (id) => {\r\n    let data1 = [...props.online, ...props.offline, ...props.unknown];\r\n    let data = data1.filter((item) => {\r\n      if (item.db != null) {\r\n        return item.db.id == id;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterOperators = (id) => {\r\n    let data = props.operators.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterSupervisors = (id) => {\r\n    let data = props.supervisors.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const init = async () => {\r\n    // if (props.panic.length > prev) {\r\n    //   console.error(\"New Panic\");\r\n    // }\r\n    await props.getUsers();\r\n    await props.getPanics();\r\n    await props.getAllResponder();\r\n\r\n    // console.warning(\"Prev: \", prev);\r\n  };\r\n\r\n  let loop;\r\n\r\n  useEffect(() => {\r\n    loop = setInterval(async () => {\r\n      // console.log(\"Panic Loop\");\r\n      await init();\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(loop);\r\n    };\r\n  }, []);\r\n\r\n  const handleNewPanic = async () => {\r\n    await setPrev((item) => {\r\n      let p = [...props.panics];\r\n      // ToastsStore.success(JSON.stringify(p));\r\n      if (p.length > item) {\r\n        props.getCenter(props.panics);\r\n        Beep1();\r\n        ToastsStore.info(\"New Panic Alert has Arrived \");\r\n      }\r\n      return p.length;\r\n    });\r\n  };\r\n\r\n  const handleCusts = async () => {\r\n    await setPrev2((item) => {\r\n      let p = [...props.Fcustomers];\r\n      if (p.length > item) {\r\n        Beep3();\r\n        ToastsStore.info(\"New Application has Arrived \");\r\n      }\r\n      return p.length;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCusts();\r\n    return;\r\n  }, [props.Fcustomers]);\r\n\r\n  useEffect(() => {\r\n    // Beep1();\r\n    handleNewPanic();\r\n    return;\r\n  }, [props.panics]);\r\n\r\n  useEffect(() => {\r\n    // console.error(\"Prev: \", prev);\r\n    return;\r\n  }, [prev]);\r\n\r\n  // const IncreaseZoom = async () => {\r\n  //   if (viewport.zoom < 30) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom + 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // const DeccreaseZoom = async () => {\r\n  //   if (viewport.zoom > 5) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom - 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // var zoomer = false;\r\n  // const center = async (data) => {\r\n  //   if (zoomer == false) {\r\n  //     var lists = [];\r\n  //     for (let i = 0; i < data.length; i++) {\r\n  //       await lists.push({\r\n  //         latitude: Number(data[i].lat),\r\n  //         longitude: Number(data[i].lng),\r\n  //       });\r\n  //     }\r\n  //     if (lists.length > 0) {\r\n  //       console.log(\"Access: \", lists);\r\n  //       var url = URL + \"/panics/getCenter\";\r\n  //       axios\r\n  //         .post(url, { data: lists })\r\n  //         .then(async (response) => {\r\n  //           var info = response.data.result.data;\r\n  //           console.log(\"Access2: \", info);\r\n  //           await setViewport({\r\n  //             latitude: info.latitude,\r\n  //             longitude: info.longitude,\r\n  //             width: viewport.width,\r\n  //             height: viewport.height,\r\n  //             zoom: viewport.zoom,\r\n  //           });\r\n  //         })\r\n  //         .catch((e) => {\r\n  //           console.log(e);\r\n  //         });\r\n  //     }\r\n  //     zoomer = true;\r\n  //   }\r\n  // };\r\n\r\n  // const [list, setList] = useState([]);\r\n  // const [list2, setList2] = useState([]);\r\n  // const [list3, setList3] = useState([]);\r\n  // const [list4, setList4] = useState([]);\r\n  // const [list5, setList5] = useState([]);\r\n\r\n  const getOperss = () => {\r\n    let groupIds = props.groups.map((item) => item.id);\r\n    let result = props.operators.filter((item) => {\r\n      let group = Number(item.groupId);\r\n      if (_.includes(groupIds, group)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    // console.error(result);\r\n    return result;\r\n  };\r\n\r\n  const getResss = (data) => {\r\n    // console.error(\"Groups1: \", props.groups);\r\n    // console.error(\"All Groups: \", props.allGroups);\r\n    // console.error(\"Groups2: \", props.groups2);\r\n\r\n    let info = props.groups2.map((p) => {\r\n      let ele = p;\r\n      let grouper = ele.groupId;\r\n      let theGroup = props.allGroups.filter((item) => item.id == grouper);\r\n      if (theGroup && theGroup.length > 0) {\r\n        return theGroup[0];\r\n      }\r\n    });\r\n    let info2 = [];\r\n    if (info && info.length > 0) {\r\n      info2 = props.allGroups.filter((item) => info[0].id == item.groupId);\r\n    }\r\n    // console.error(\"Resp2: \", info2);\r\n    // for (let i = 0; i < props.group2.length; i++) {\r\n    // }\r\n    // console.error(\"Resp1: \", info);\r\n    let groupIds = info2.map((item) => item.id);\r\n    // console.error(\"Group1: \", groupIds);\r\n    // let admin = props.allGroups.filter((item) => _.includes(groupIds, item.id));\r\n    // console.error(\"Groups2: \", admin);\r\n    // console.error(\"Data: \", data);\r\n    let result = data.filter((item) => {\r\n      if (item.db != null) {\r\n        let group = Number(item.db.groupId);\r\n        // console.error(groupIds, group);\r\n        if (_.includes(groupIds, group)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    // console.error(result);\r\n    return result;\r\n  };\r\n\r\n  const getSpots = (\r\n    data,\r\n    features,\r\n    pin = \"./../../../pin/8.png\",\r\n    type = \"\"\r\n  ) => {\r\n    let icon = pin;\r\n    if (type == \"responder\") {\r\n      /////  responder code from here ////////////\r\n      return data.map((p) => {\r\n        return (\r\n          <Spot\r\n            key={p.id}\r\n            pin={icon}\r\n            lat={Number(p.lat)}\r\n            lng={Number(p.lng)}\r\n            features={features}\r\n            content={\r\n              <div style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}>\r\n                <p>\r\n                  <b> Name: </b>\r\n                  {p.db == null\r\n                    ? null\r\n                    : p.db.firstname + \" \" + p.db.lastname}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <b> Traccar: </b> {p.name || \"Anonymous\"}{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b> Contact: </b>\r\n                  {p.db == null ? p.contact || \"\" : p.db.contact}\r\n                </p>\r\n                <p>\r\n                  <b> Email: </b>\r\n                  {p.db == null ? null : p.db.email || \"\"}\r\n                </p>\r\n                <p>\r\n                  <b> Address: </b>\r\n                  {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                  <span style={{ lineHeight: 1 }}>\r\n                    {p.db == null ? null : p.db.address || \"\"}\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  <b> Type: </b>\r\n                  {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                  <span style={{ lineHeight: 1 }}>\r\n                    {p.db == null ? null : p.db.type || \"\"}\r\n                  </span>\r\n                </p>\r\n                {/* <p>\r\n                  <b> Nature: </b>\r\n                  {filterNature(p.natureId) == null\r\n                    ? null\r\n                    : filterNature(p.natureId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Priority: </b>\r\n                  {filterPriority(p.priorityId) == null\r\n                    ? null\r\n                    : filterPriority(p.priorityId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Responder: </b>\r\n                 \r\n                  {filterResponders(p.responderInvolved || 0) == null\r\n                    ? null\r\n                    : filterResponders(p.responderInvolved).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Operator: </b>\r\n                  \r\n                  {filterOperators(p.operatorInvolved || 0) == null\r\n                    ? null\r\n                    : filterOperators(p.operatorInvolved).firstname}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Supervisor: </b>\r\n                 \r\n                  {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                    ? null\r\n                    : filterSupervisors(p.supervisorInvolved).firstname}\r\n                </p> */}\r\n                {/* <div>{popButton(p)}</div> */}\r\n              </div>\r\n            }\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      return data.map((p) => {\r\n        if (p.isClose == true) {\r\n          return null;\r\n        } else {\r\n          return (\r\n            <Spot /////////// panic set from here\r\n              key={p.id}\r\n              pin={icon}\r\n              lat={Number(p.lat)}\r\n              lng={Number(p.lng)}\r\n              features={{ ...features, timer: new Date(p.createdAt) }}\r\n              content={\r\n                <div\r\n                  style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}\r\n                >\r\n                  <p>\r\n                    <b> Contact: </b>\r\n                    {p.contact}\r\n                  </p>\r\n\r\n                  <p>\r\n                    <b> Address: </b>\r\n                    {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                    <span style={{ lineHeight: 1 }}>{p.address || \"\"}</span>\r\n                  </p>\r\n                  <p>\r\n                    <b> Nature: </b>\r\n                    {filterNature(p.natureId) == null\r\n                      ? null\r\n                      : filterNature(p.natureId).name}\r\n                  </p>\r\n                  <p>\r\n                    <b> Priority: </b>\r\n                    {filterPriority(p.priorityId) == null\r\n                      ? null\r\n                      : filterPriority(p.priorityId).name}\r\n                  </p>\r\n                  <p style={{ lineHeight: \"15px\" }}>\r\n                    <b> Responder: </b>\r\n                    {/* {p.responderInvolved} */}\r\n                    {filterResponders(p.responderInvolved || 0) == null\r\n                      ? null\r\n                      : filterResponders(p.responderInvolved).name}{\" \"}\r\n                    &nbsp; (11.3 Km Away)\r\n                  </p>\r\n                  <p>\r\n                    <b> Operator: </b>\r\n                    {/* {p.operatorInvolved} */}\r\n                    {filterOperators(p.operatorInvolved || 0) == null\r\n                      ? null\r\n                      : filterOperators(p.operatorInvolved).firstname}\r\n                  </p>\r\n                  <p>\r\n                    <b> Supervisor: </b>\r\n                    {/* {p.supervisorInvolved} */}\r\n                    {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                      ? null\r\n                      : filterSupervisors(p.supervisorInvolved).firstname}\r\n                  </p>\r\n                  <p>\r\n                    <b> Utility Type </b>\r\n                    {/* {p.supervisorInvolved} */}\r\n                    <span style={{ lineHeight: 1 }}>\r\n                      {p.utility_type || \"\"}\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    <b> Comments </b>\r\n                    {/* {p.supervisorInvolved} */}\r\n                    <span style={{ lineHeight: 1 }}>{p.comment || \"\"}</span>\r\n                  </p>\r\n                  {p.customerRating && (\r\n                    <>\r\n                      <p>\r\n                        <b> Customer rating: </b> <br />\r\n                        <br />\r\n                        {getRating(p.customerRating)}\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                  <div>{getOper(p.operatorInvolved, p)}</div>\r\n                  <br />\r\n                  <div>\r\n                    {p.statusId == 5 ? (\r\n                      <button\r\n                        className=\"btn btn-success btn-xs btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.supervisorResolvePanic(p.id, {\r\n                            // statusId: 6,\r\n                          }); // Bilal\r\n                          // init();\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <i className=\"fa fa-check\"></i>\r\n                          &nbsp;\r\n                        </span>\r\n                        Resolve\r\n                      </button>\r\n                    ) : null}\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    {p.statusId == 1 ||\r\n                    p.statusId == 2 ||\r\n                    p.statusId == 3 ||\r\n                    p.statusId == 7 ||\r\n                    p.statusId == 6 ||\r\n                    p.statusId == 4 ||\r\n                    p.statusId == 5 ? (\r\n                      <button\r\n                        className=\"btn btn-xs btn-danger btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.closePanic(p.id, {\r\n                            userId: props.user.id,\r\n                          }); // Bilal\r\n                          // init();\r\n                          Beep2();\r\n                        }}\r\n                      >\r\n                        Close\r\n                      </button>\r\n                    ) : null}\r\n                    {p.statusId == 8 ? (\r\n                      <button\r\n                        className=\"btn btn-xs btn-warning btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.solvePanic(p.id, {\r\n                            userId: props.user.id,\r\n                          }); // Bilal\r\n                          // init();\r\n                          Beep2();\r\n                        }}\r\n                      >\r\n                        Pop The Panic Out\r\n                      </button>\r\n                    ) : null}\r\n                  </div>\r\n                  <div>{p.isCancelled == 1 ? <h3> Cancelled </h3> : null}</div>\r\n                </div>\r\n              }\r\n            />\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getOper = (data, item) => {\r\n    if (data) {\r\n      return null;\r\n    } else {\r\n      if (\r\n        item.statusId == 1 &&\r\n        (item.operatorInvolved == null || item.operatorInvolved == 0)\r\n      ) {\r\n        return (\r\n          <>\r\n            {/* <select\r\n              className=\"form-control\"\r\n              value={opr}\r\n              onChange={(e) => setOpr(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getOperators()}\r\n            </select> */}\r\n            {/* <br />\r\n            <button\r\n              className=\"btn btn-info btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                await props.updatePanics(item.id, {\r\n                  operatorInvolved: opr,\r\n                  // statusId: 2,\r\n                }); // Bilal\r\n                // init();\r\n                setOpr(\"\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Set Operator{\" \"}\r\n            </button>\r\n            <br /> */}\r\n            {/* 3rd button  */}\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                console.log(\"Assign 3rd button clicked\");\r\n                e.preventDefault();\r\n                await props.supervisorAcceptPanic(item.id, {\r\n                  userId: props.user.id,\r\n                  // operatorInvolved: 0,\r\n                  // statusId: 2,\r\n                }); // Bilal\r\n                init();\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (item.statusId == 1) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.updatePanics(item.id, {\r\n                operatorInvolved: props.user.id,\r\n                statusId: 2,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Confirm\r\n          </button>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.operatorInvolved != 0 &&\r\n        item.operatorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {/* {console.log(\r\n                \"//////////////////////////////////////////////////////////////////////////props.free////////////////////////////////\",\r\n                props.free\r\n              )} */}\r\n              {/* {console.log(\r\n                \"//////////////////////////////////////////////////////////////////////////props.online////////////////////////////////\",\r\n                props.online\r\n              )} */}\r\n              {getResponders2(\r\n                [...props.free, ...props.buzy].length > 0\r\n                  ? props.free\r\n                  : props.online,\r\n                \"white\"\r\n              )}\r\n              {getResponders2(\r\n                [...props.free, ...props.buzy].length > 0\r\n                  ? props.buzy\r\n                  : props.online,\r\n                \"#999\"\r\n              )}\r\n            </select>\r\n            <br />\r\n            {/* button one */}\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                console.log(\"Assign 1st button clicked\");\r\n                e.preventDefault();\r\n                alert(\"ok\");\r\n                await props.supervisorAssignPanicToRes(item.id, {\r\n                  contact: item.db?.contact,\r\n                  responderInvolved: Number(res),\r\n                  // statusId: 3,\r\n                }); // Bilal\r\n                await setRes(\"\");\r\n                // await init();\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.supervisorInvolved != 0 &&\r\n        item.supervisorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {[\r\n                ...getResponders2(\r\n                  [...props.free, ...props.buzy].length > 0\r\n                    ? props.free\r\n                    : props.online,\r\n                  \"white\"\r\n                ),\r\n                ...getResponders2(\r\n                  [...props.free, ...props.buzy].length > 0 ? props.buzy : [],\r\n                  \"#999\"\r\n                ),\r\n              ]}\r\n            </select>\r\n            <br />\r\n            {/* 2nd button */}\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                console.log(\"Assign 2nd button clicked\");\r\n                let ress = [\r\n                  ...props.online,\r\n                  ...props.offline,\r\n                  ...props.unknown,\r\n                ];\r\n                // console.error(\"Res: \", ress);\r\n                let Data = ress.filter((it) => it.id == Number(res));\r\n                // console.error(Data);\r\n                let abc = Data[0];\r\n\r\n                if (abc.db == null) {\r\n                  // alert(\"Responder is not available in the Database: \" + res);\r\n                } else {\r\n                  e.preventDefault();\r\n                  // console.error({ res, id: item.id });\r\n                  // alert(item.contact);\r\n                  await props.supervisorAssignPanicToRes(item.id, {\r\n                    contact: item.contact,\r\n                    responderInvolved: abc.db.id,\r\n                    // statusId: 3,\r\n                  }); // Bilal\r\n                  await setRes(\"\");\r\n                  // await init();\r\n                }\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 4 &&\r\n        item.responderInvolved != 0 &&\r\n        item.responderInvolved != null\r\n      ) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.supervisorResolvePanic(item.id, {\r\n                // statusId: props.user.roleId == 3 ? 5 : 6,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Resolve\r\n          </button>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  // const content = (p) => {\r\n  //   return (\r\n\r\n  //   );\r\n  // };\r\n\r\n  const getRating = (rate) => {\r\n    if (rate == 0) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 1) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 2) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 3) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 4) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getOperators = () => {\r\n    return getOperss().map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}>\r\n            {\" \"}\r\n            {item.firstname + \" \" + item.lastname}{\" \"}\r\n          </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const popButton = async (item) => {\r\n    return \"false\";\r\n  };\r\n\r\n  const getResponders2 = (data, color) => {\r\n    // let data = [...props.buzy, ...props.online];\r\n    const data234 = data.filter(function (responders) {\r\n      //window.alert(data);\r\n      return responders.db.type === \"emergency\";\r\n    });\r\n    let data2 = getResss(_.uniq(data234));\r\n    return data2.map((item, index) => {\r\n      if (item.db || true) {\r\n        // let color = item.status == \"online\"\r\n        return (\r\n          <React.Fragment key={item.id}>\r\n            <option style={{ background: color }} value={item.id}>\r\n              {item.name || \"\"}\r\n            </option>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  // const goPoint = async (pointer, set, list, data2 = null, cb = null) => {\r\n  //   if (pointer != null) {\r\n  //     await pointer(async (data) => {\r\n  //       if (data.length > list.length) {\r\n  //         await set([...data]);\r\n  //         var centers = [];\r\n  //         if (data2 == null) {\r\n  //           centers = [...data];\r\n  //         } else {\r\n  //           centers = [...data, ...data2];\r\n  //         }\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       } else {\r\n  //         var centers = [...data];\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       }\r\n  //     });\r\n  //   } else {\r\n  //     if (data2 != null && data2.length > 0) {\r\n  //       var centers = [...data2];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     } else {\r\n  //       var centers = [];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   setInterval(async () => {\r\n  //     if (props.getPoints != null) {\r\n  //       await goPoint(props.getPoints, setList, list, null, async (r) => {\r\n  //         console.log(\"Round 1: \", r);\r\n  //         if (props.getPoints2 != null) {\r\n  //           await goPoint(props.getPoints2, setList2, list2, r, async (r2) => {\r\n  //             console.log(\"Round 2: \", r2);\r\n  //             if (props.getPoints3 != null) {\r\n  //               await goPoint(props.getPoints3, setList3, list3, r2, null);\r\n  //             }\r\n  //           });\r\n  //         }\r\n  //       });\r\n  //     } else if (props.getPoints2 != null) {\r\n  //       goPoint(props.getPoints2, setList2, list2, null, null);\r\n  //     } else if (props.getPoints3 != null) {\r\n  //       goPoint(props.getPoints3, setList3, list3, null, null);\r\n  //     }\r\n  //   }, 1000);\r\n  // }, [props.changer, \"text\"]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        {/* <div style={{ position: \"absolute\", top: 50, right: 10, zIndex: 10 }}> */}\r\n        {/* <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              IncreaseZoom();\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              DeccreaseZoom();\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n        </div> */}\r\n        <ReactMapGL\r\n          {...viewport}\r\n          // latitude={lat}\r\n          // longitude={lng}\r\n          mapboxApiAccessToken={KEY}\r\n          mapStyle={mapType}\r\n          onViewportChange={(viewport) => {\r\n            setViewport(viewport);\r\n          }}\r\n        >\r\n          {/* {CheckIfEmpty(props.inQueryPanics) &&\r\n            props.inQueryPanics[0].panicType == \"utility\" &&\r\n            getSpots(\r\n              props.inQueryPanics,\r\n              {\r\n                shade: \"Yellow\",\r\n                spot: \"Yellow\",\r\n                showSpot: false,\r\n                buzz: true,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/13.png\")\r\n            )} */}\r\n          {CheckIfEmpty(props.inQueryPanics) &&\r\n            CheckIfEmpty(props.inQueryPanics[0].panicType) &&\r\n            props.inQueryPanics[0].panicType == \"emergency\" &&\r\n            getSpots(\r\n              props.inQueryPanics,\r\n              {\r\n                shade: \"red\",\r\n                spot: \"green\",\r\n                showSpot: false,\r\n                buzz: true,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/13.png\")\r\n            )}\r\n          {CheckIfEmpty(props.confirmedByOperatorPanics) &&\r\n            CheckIfEmpty(props.confirmedByOperatorPanics[0].panicType) &&\r\n            props.confirmedByOperatorPanics[0].panicType == \"emergency\" &&\r\n            getSpots(\r\n              props.confirmedByOperatorPanics,\r\n              {\r\n                shade: \"blue\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/8.png\")\r\n            )}\r\n          {CheckIfEmpty(props.assignedToResponderPanics) &&\r\n            CheckIfEmpty(props.assignedToResponderPanics[0].panicType) &&\r\n            props.assignedToResponderPanics[0].panicType == \"emergency\" &&\r\n            getSpots(\r\n              props.assignedToResponderPanics,\r\n              {\r\n                shade: \"yellow\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/8.png\")\r\n            )}\r\n          {CheckIfEmpty(props.confirmedByResponderPanics) &&\r\n            CheckIfEmpty(props.confirmedByResponderPanics[0].panicType) &&\r\n            props.confirmedByResponderPanics[0].panicType == \"emergency\" &&\r\n            getSpots(\r\n              props.confirmedByResponderPanics,\r\n              {\r\n                shade: \"lightgreen\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/10.png\")\r\n            )}\r\n          {CheckIfEmpty(props.resolvedByResponderPanics) &&\r\n            CheckIfEmpty(props.resolvedByResponderPanics[0].panicType) &&\r\n            props.resolvedByResponderPanics[0].panicType == \"emergency\" &&\r\n            getSpots(\r\n              props.resolvedByResponderPanics,\r\n              {\r\n                shade: \"lightgreen\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/15.png\")\r\n            )}\r\n          {CheckIfEmpty(props.resolvedByOperatorPanics) &&\r\n            CheckIfEmpty(props.resolvedByOperatorPanics[0].panicType) &&\r\n            props.resolvedByOperatorPanics[0].panicType == \"emergency\" &&\r\n            getSpots(\r\n              props.resolvedByOperatorPanics,\r\n              {\r\n                shade: \"green\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/17.png\")\r\n            )}\r\n          {CheckIfEmpty(props.closedBySupervisorPanics) &&\r\n            CheckIfEmpty(props.closedBySupervisorPanics[0].panicType) &&\r\n            props.closedBySupervisorPanics[0].panicType == \"emergency\" &&\r\n            getSpots(\r\n              props.closedBySupervisorPanics,\r\n              {\r\n                shade: \"green\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/18.png\")\r\n            )}\r\n          {CheckIfEmpty(props.closedByCustomerPanics) &&\r\n            CheckIfEmpty(props.closedByCustomerPanics[0].panicType) &&\r\n            props.closedByCustomerPanics[0].panicType == \"emergency\" &&\r\n            getSpots(\r\n              props.closedByCustomerPanics,\r\n              {\r\n                shade: \"black\",\r\n                spot: \"blue\",\r\n                showSpot: false,\r\n                buzz: false,\r\n                showTimer: true,\r\n              },\r\n              require(\"./../../../../pins/18.png\")\r\n            )}\r\n          {/** checking responders spots */}\r\n\r\n          {CheckIfEmpty(props.online) &&\r\n            CheckIfEmpty(props.online[0].db) &&\r\n            props.online[0].db.type == \"emergency\" &&\r\n            getSpots(\r\n              props.online.filter(function (online) {\r\n                return online.db.type == \"emergency\";\r\n              }),\r\n              {\r\n                shade: \"lightgreen\",\r\n                spot: \"darkgreen\",\r\n                showSpot: true,\r\n                buzz: false,\r\n              },\r\n              require(\"./../../../../pins/12.png\"),\r\n              \"responder\"\r\n            )}\r\n          {/* props.offline.db.type == \"emergency\" && */}\r\n          {CheckIfEmpty(props.offline) &&\r\n            CheckIfEmpty(props.offline[0].db) &&\r\n            props.offline[0].db.type == \"emergency\" &&\r\n            getSpots(\r\n              props.offline.filter(function (offline) {\r\n                return offline.db.type == \"emergency\";\r\n              }),\r\n              {\r\n                shade: \"pink\",\r\n                spot: \"red\",\r\n                showSpot: true,\r\n                buzz: false,\r\n              },\r\n              require(\"./../../../../pins/12.png\"),\r\n              \"responder\"\r\n            )}\r\n          {/* props.unknown.db.type == \"emergency\" && */}\r\n          {/* {CheckIfEmpty(props.unknown) &&\r\n            props.unknown[0].db.type == \"emergency\" &&\r\n            getSpots(\r\n              props.unknown,\r\n              {\r\n                shade: \"yellow\",\r\n                spot: \"orange\",\r\n                showSpot: true,\r\n                buzz: false,\r\n              },\r\n              require(\"./../../../../pins/12.png\"),\r\n              \"responder\"\r\n            )} */}\r\n        </ReactMapGL>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  customers: state.customers,\r\n  Fcustomers: state.customers.filter((item) => item.isSubmitted == true),\r\n  natures: state.natures,\r\n  priorities: state.priorities,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n  buzy: state.buzyResponders,\r\n  free: state.freeResponders,\r\n  panics: state.panics,\r\n  operators: state.operators,\r\n  supervisors: state.supervisors,\r\n  inQueryPanics: state.inQueryPanics,\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  assignedToResponderPanics: state.assignedToResponderPanics,\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  closedByCustomerPanics: state.closedByCustomerPanics,\r\n  zoomLevel: state.zoomLevel,\r\n  latitude: state.latitude,\r\n  longitude: state.longitude,\r\n  allGroups: state.groups,\r\n  groups: state.groups.filter((item) => item.groupId == state.logger.groupId),\r\n  groups2: state.groups.filter((item) => {\r\n    let sprvsr = item.id == state.logger.groupId;\r\n    if (sprvsr) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getPanics: () => GetPanics(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  getNatures: () => GetNatures(dispatch),\r\n  getCenter: (coords) => GetCenter(dispatch, coords),\r\n  getAllResponder: () => GetAllResponder(dispatch),\r\n  getPriorities: () => GetPriorities(dispatch),\r\n  updatePanics: (id, data) => UpdatePanics(dispatch, id, data),\r\n  supervisorAcceptPanic: (id, data) =>\r\n    SupervisorAcceptPanic_UpdatePanics(dispatch, id, data),\r\n  supervisorAssignPanicToRes: (id, data) =>\r\n    SupervisorAssignPanicToRes_UpdatePanics(dispatch, id, data),\r\n  supervisorResolvePanic: (id, data) =>\r\n    SupervisorResolvePanic_UpdatePanics(dispatch, id, data),\r\n  closePanic: (id, data) => ClosePanic_UpdatePanics(dispatch, id, data),\r\n  solvePanic: (id, data) => SolvePanic_UpdatePanics(dispatch, id, data),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Natures\\List\\List.jsx",["2798","2799","2800","2801"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Natures\\Create\\Create.jsx",["2802","2803","2804","2805","2806","2807","2808"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Geofence\\Map\\Map.jsx",["2809","2810","2811","2812","2813","2814","2815","2816","2817","2818"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Operator\\Create\\Create.jsx",["2819","2820","2821","2822","2823"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Operator\\List\\List.jsx",["2824","2825","2826","2827","2828","2829","2830"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Services\\Create\\Create.jsx",["2831","2832","2833","2834","2835","2836","2837"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Map\\Spot.jsx",["2838","2839"],"import React, { useState } from \"react\";\r\nimport { Marker, Popup } from \"react-map-gl\";\r\nimport Pin from \"./Pin\";\r\n\r\nconst Spot = (props) => {\r\n  const myPop = (\r\n    // <Popup\r\n    //   latitude={props.lat}\r\n    //   longitude={props.lng}\r\n    //   onClose={() => {\r\n    //     if (props.caller)\r\n    //       props.caller(() => {\r\n    //         setPop(false);\r\n    //       });\r\n    //     else setPop(false);\r\n    //   }}\r\n    //   style={{ padding: 0, margin: 0 }}\r\n    // >\r\n    //   <div> {props.content || null} </div>\r\n    // </Popup>\r\n    <div\r\n      className=\"\"\r\n      style={{\r\n        backgroundColor: \"#fff\",\r\n        minWidth: 200,\r\n        padding: 10,\r\n        position: \"absolute\",\r\n        top: 50,\r\n        left: 0,\r\n        lineHeight: \"5px\",\r\n      }}\r\n    >\r\n      <span style={{ zIndex: 1000000 }}>\r\n        <span className=\"pull-right\" onClick={() => setPop(false)}>\r\n          <i className=\"fa fa-remove\"></i>\r\n        </span>\r\n        <div className=\"clearfix\"></div>\r\n      </span>\r\n\r\n      {props.content || null}\r\n    </div>\r\n  );\r\n  const [pop, setPop] = useState(false);\r\n  const getPop = () => {\r\n    if (pop == true) {\r\n      if (props.content == null) {\r\n        return null;\r\n      } else {\r\n        return myPop;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Marker\r\n        latitude={Number(props.lat) || 31}\r\n        longitude={Number(props.lng) || 74}\r\n      >\r\n        {getPop()}\r\n        <Pin setPop={setPop} pin={props.pin} features={props.features || {}} />\r\n      </Marker>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Spot;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Services\\List\\List.jsx",["2840","2841","2842","2843"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Users\\Create\\Create.jsx",["2844","2845","2846","2847"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Supervisor\\Create\\Create.jsx",["2848","2849","2850","2851","2852"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Users\\List\\List.jsx",["2853","2854","2855"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Geofence\\Geofence.jsx",["2856","2857","2858"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Supervisor\\List\\List.jsx",["2859","2860","2861","2862"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Operator\\Operator.jsx",["2863","2864","2865","2866","2867"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Supervisor\\Supervisor.jsx",["2868","2869","2870","2871","2872"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Wall\\Wall.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Map\\Pin.jsx",["2873","2874","2875","2876","2877","2878","2879","2880"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./map.css\";\r\nimport JavascriptTimeAgo from \"javascript-time-ago\";\r\nimport en from \"javascript-time-ago/locale/en\";\r\nimport ru from \"javascript-time-ago/locale/ru\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nJavascriptTimeAgo.addLocale(en);\r\nJavascriptTimeAgo.addLocale(ru);\r\n\r\nconst compareDate = (date1, date2, type = \"equal\") => {\r\n  let x = new Date(date1);\r\n  let y = new Date(date2);\r\n  if (type == \"greater\") {\r\n    return +x > +y;\r\n  } else if (type == \"lesser\") {\r\n    return +x < +y;\r\n  } else {\r\n    return +x == +y;\r\n  }\r\n};\r\n\r\nconst Pin = (props) => {\r\n  //console.log(\"props from pin.jsx\", props);\r\n  const pop = () => {\r\n    if (props.features.text || true) {\r\n      return (\r\n        <div\r\n          style={{\r\n            fontSize: \"12px\",\r\n            padding: \"5px\",\r\n            background: \"#fff\",\r\n            marginTop: \"-35px\",\r\n            fontWeight: \"bold\",\r\n            // display: \"inline\",\r\n            position: \"absolute\",\r\n            // top: 0,\r\n            // left: 0,\r\n          }}\r\n          className=\"text\"\r\n        >\r\n          Hello world\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {/* {console.log(\"props from pin supervisor:\", props.features.spot)} */}\r\n      <div style={{}}>\r\n        <div style={{ display: \"\", position: \"\" }}>\r\n          <div\r\n            style={{\r\n              display: \"inline\",\r\n              border: \"0px\",\r\n              width: \"100px\",\r\n              height: \"100px\",\r\n              borderRadius: \"200px\",\r\n              // background: \"#000\",\r\n              padding: \"50px\",\r\n              boxShadow:\r\n                \"0px 0px 20px \" +\r\n                (props.features.shade || \"transparent\") +\r\n                \" inset\",\r\n            }}\r\n            className={\r\n              props.features.buzz == true || props.features.buzz == \"true\"\r\n                ? \"bloomer\"\r\n                : \"inverse-bloomer\"\r\n            }\r\n          >\r\n            {props.features.showSpot || false ? (\r\n              <div\r\n                style={{\r\n                  width: \"10px\",\r\n                  height: \"10px\",\r\n                  borderRadius: \"200px\",\r\n                  background: \"props.features.spot\" || \"transparent\",\r\n                  position: \"absolute\",\r\n                  bottom: -2,\r\n                  right: -2,\r\n                  // top: 0,\r\n                  // left: 0,\r\n                }}\r\n              ></div>\r\n            ) : null}\r\n            {props.features.showTimer ? (\r\n              <div\r\n                className=\"badge\"\r\n                style={{\r\n                  // width: \"110px\",\r\n                  // // height: \"50px\",\r\n                  // padding: \"3px 7px\",\r\n                  border: \"1px solid #000\",\r\n                  borderRadius: \"200px\",\r\n                  background: \"#eee\",\r\n                  color: \"#000\",\r\n                  position: \"absolute\",\r\n                  top: -20,\r\n                  right: -60,\r\n                  fontSize: \"10px\",\r\n                  letterSpacing: \"0.1px\",\r\n                  wordSpacing: \"1px\",\r\n                  // top: 0,\r\n                  // left: 0,\r\n                }}\r\n              >\r\n                {<ReactTimeAgo date={new Date(props.features.timer)} /> || \"\"}\r\n              </div>\r\n            ) : null}\r\n            <img\r\n              src={props.pin.default}\r\n              alt=\"Marker Pin Icon\"\r\n              style={{ width: \"20px\", opacity: 1 }}\r\n              onClick={() => {\r\n                props.setPop(true);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {pop()} */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pin;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\TopBar\\TopBar.jsx",["2881","2882","2883","2884","2885","2886","2887","2888","2889","2890","2891","2892","2893","2894"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserLogout, changeZoom } from \"../../../../../actions/index\";\r\nimport TopMenu from \"../../../../../containers/TobMenu/TopMenu\";\r\n\r\nconst TopBar = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel - Top Menu\");\r\n\r\n  const setSiders = (data) => {\r\n    if (data == \"left\") {\r\n      let leftPin = localStorage.getItem(\"leftPin\");\r\n      if (leftPin) {\r\n        let newLeft = leftPin == \"false\" ? true : false;\r\n        // console.error(\"L:\", newLeft);\r\n        localStorage.setItem(\"leftPin\", newLeft);\r\n      } else {\r\n        let newLeft = true;\r\n        localStorage.setItem(\"leftPin\", newLeft);\r\n      }\r\n    } else if (data == \"right\") {\r\n      let rightPin = localStorage.getItem(\"rightPin\");\r\n      if (rightPin) {\r\n        let newRight = rightPin == \"false\" ? true : false;\r\n        localStorage.setItem(\"rightPin\", newRight);\r\n      } else {\r\n        let newRight = true;\r\n        localStorage.setItem(\"rightPin\", newRight);\r\n      }\r\n    } else {\r\n    }\r\n    window.open(\"http://localhost:3001/\", \"_self\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopMenu title=\"Main Screen Panel\">\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n          <li>\r\n            <a>\r\n              <span data-toggle=\"modal\" /* data-target=\"#logs\" title=\"Logs\" */>\r\n                <i\r\n                  className=\"fa fa-plus\"\r\n                  title=\"Zoom In\"\r\n                  onClick={() => props.changeZoom(props.zoomLevel - 1)}\r\n                ></i>\r\n                &nbsp;\r\n                <i\r\n                  className=\"fa fa-minus\"\r\n                  title=\"Zoom Out\"\r\n                  onClick={() => props.changeZoom(props.zoomLevel + 1)}\r\n                ></i>\r\n                &nbsp; Zoom &nbsp;\r\n                <span className=\"badge inverse-theme\"> {props.zoomLevel} </span>\r\n              </span>\r\n            </a>\r\n          </li>\r\n\r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle themer\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-bar-chart\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              Reports &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#responderReports\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Reponder Reports</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#operatorReports\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Operator Reports</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#supervisorReports\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Supervisor Reports</a>\r\n              </li>\r\n              <li data-toggle=\"modal\" data-target=\"#logs\" className=\"themer\">\r\n                <a> Panic Logs </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          {/* <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-users\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              Users &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#supervisor\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Supervisors</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#operator\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Operators</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#customers\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Customers</a>\r\n              </li>\r\n              <li\r\n                data-toggle=\"modal\"\r\n                data-target=\"#responderView\"\r\n                className=\"themer\"\r\n              >\r\n                <a>Responders</a>\r\n              </li>\r\n            </ul>\r\n          </li> */}\r\n\r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-user\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              {props.user.firstname.toUpperCase()} &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li data-toggle=\"modal\" data-target=\"#profile\">\r\n                <a>Profile</a>\r\n              </li>\r\n              <li>\r\n                <a onClick={props.logout}>Logout</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </TopMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  zoomLevel: state.zoomLevel,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Users\\Users.jsx",["2895","2896","2897"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\ResponderView\\ResponderView.jsx",["2898","2899"],"import React, { useEffect } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { GetAllResponder } from \"../../../../../actions/index\";\r\n\r\nconst ResponderView = (props) => {\r\n  console.log(\"Supervisor - Responder View\");\r\n\r\n  const init = async () => {\r\n    // await props.getResponders();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  const getTableData = (data) => {\r\n    return data.map((item, index) => {\r\n      if (item.db != null) {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <tr>\r\n              <td> {item.id} </td>\r\n              <td>\r\n                {\" \"}\r\n                {item.db.firstname + \" \" + item.db.lastname} ( {item.name} ){\" \"}\r\n              </td>\r\n              <td> {item.db.cnic} </td>\r\n              <td> {item.db.contact} </td>\r\n              <td> {item.db.email} </td>\r\n              <td> {item.db.password} </td>\r\n              <td> {item.lat} </td>\r\n              <td> {item.lng} </td>\r\n              <td> {item.db.address} </td>\r\n              <td> {item.db.userActivation} </td>\r\n              <td> {item.db.userAssignment} </td>\r\n              <td> {item.db.serviceId} </td>\r\n              <td> {item.db.subscriptionId} </td>\r\n              <td> {item.db.deviceId} </td>\r\n              <td> {item.db.custId} </td>\r\n              <td> {item.db.image} </td>\r\n              <td> {item.db.trackingId} </td>\r\n              <td> {item.db.uniqueId} </td>\r\n              {/* <td> </td> */}\r\n              {/* <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => edit(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => del(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                  </button>\r\n                </td> */}\r\n            </tr>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> CNIC </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Password </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Address </th>\r\n                <th> User Activation </th>\r\n                <th> User Assignment </th>\r\n                <th> Service </th>\r\n                <th> Subscription </th>\r\n                <th> Device </th>\r\n                <th> Parent </th>\r\n                <th> Image </th>\r\n                <th> Tracking Id </th>\r\n                <th> Unique </th>\r\n                {/* <th> - </th>\r\n                    <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"responderView\"}\r\n        title={{ name: \"Responders\", symbol: \"car\" }}\r\n      >\r\n        {getTable([...props.online, ...props.offline, ...props.unknown])}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // customers: state.customers,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponderView);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Geo\\Geo.jsx",["2900","2901","2902","2903","2904","2905","2906"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  FetchAllGeofences,\r\n  AddGeofences,\r\n} from \"../../../../../actions/index\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\n\r\nimport MapGL, {\r\n  Marker,\r\n  FullscreenControl,\r\n  NavigationControl,\r\n} from \"@urbica/react-map-gl\";\r\nimport Draw from \"@urbica/react-map-gl-draw\";\r\n// import \"./style.css\";\r\nimport \"./style.css\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nconst Geo = (props) => {\r\n  console.log(\"Supervisor - Single Geo\");\r\n\r\n  const [data, setData] = useState({\r\n    type: \"FeatureCollection\",\r\n    features: [],\r\n  });\r\n  const [map, setMap] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [service, setService] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.fetchAllGeofences();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    // let coords;\r\n    // coords = props.traccarGeofences.map((item) => item.coords);\r\n    let point = {\r\n      id: 140,\r\n      type: \"Feature\",\r\n      properties: {\r\n        // color: \"red\",\r\n        // backgroundColor: \"red\",\r\n        // background: \"red\",\r\n        // line: \"red\",\r\n        // lineColor: \"red\",\r\n      },\r\n      geometry: {\r\n        coordinates: [props.geoLng, props.geoLat],\r\n        type: \"Point\",\r\n      },\r\n    };\r\n    if (Array.isArray(props.traccarGeofences)) {\r\n      let struct = {\r\n        type: \"FeatureCollection\",\r\n        features: [...props.traccarGeofences, point],\r\n      };\r\n      setData(struct);\r\n    }\r\n    return;\r\n  }, [props.traccarGeofences]);\r\n\r\n  // useEffect(() => {\r\n  //   if (service != \"\" && name != \"\") {\r\n  //     setMap(true);\r\n  //   } else {\r\n  //     setMap(false);\r\n  //   }\r\n  // }, [service, name]);\r\n\r\n  let MAPBOX_ACCESS_TOKEN =\r\n    \"pk.eyJ1IjoiemFlZW10YXJyYXIzIiwiYSI6ImNrODF6N21kZDAxa2kzb255c3I4bnh5NWsifQ.CqUWmnyMb0nGVwAQYF0d6w\";\r\n  let mapStyle = \"mapbox://styles/zaeemtarrar3/ck824k9kf2i9t1iofd77sbalm\"; // \"mapbox://styles/mapbox/streets-v9\";\r\n\r\n  const getMap = () => {\r\n    if (map) {\r\n      return (\r\n        <MapGL\r\n          initialState={{ data }}\r\n          style={{ width: \"100%\", height: \"500px\" }}\r\n          mapStyle={mapStyle}\r\n          accessToken={MAPBOX_ACCESS_TOKEN}\r\n          latitude={props.lat || 31.4676}\r\n          longitude={props.lng || 74.3209}\r\n          zoom={props.zoomLevel || 10}\r\n        >\r\n          <Draw\r\n            //   onDrawCreate={({ features }) => setFts(features)}\r\n            //   onDrawUpdate={({ features }) => setFts(features)}\r\n            data={data}\r\n            onDrawSelectionChange={(data) => {\r\n              console.log(\r\n                \"Selected : \" + JSON.stringify(data.features[0], null, 2)\r\n              );\r\n            }}\r\n            onDrawDelete={async (data) => {\r\n              // var id = data.features[0].id;\r\n              // await deleteGeofences(\"admin\", \"L@s3rjet9045\", id, async (data) => {\r\n              //   // alert(\"Deleted !\");\r\n              //   await fetchPoints();\r\n              //   status = \"del\";\r\n              // });\r\n            }}\r\n            onDrawCreate={async (d) => {\r\n              var limit = d.features.length;\r\n              if (limit - 1 == 0) {\r\n                limit = 0;\r\n              } else {\r\n                limit = limit - 1;\r\n              }\r\n              var last = d.features[limit].geometry.coordinates[0];\r\n              // console.error(last);\r\n              alert(JSON.stringify({ data: last, limit }));\r\n              //props.reset();\r\n              await props.addGeofences(service, name, last);\r\n              await props.fetchAllGeofences();\r\n              setService(\"\");\r\n              setName(\"\");\r\n            }}\r\n            onDrawUpdate={(d) => {\r\n              // var id = d.features[0].id;\r\n              // // if (service != 0) {\r\n              // var limit = d.features.length;\r\n              // if (limit - 1 == 0) {\r\n              //   limit = 0;\r\n              // } else {\r\n              //   limit = limit - 1;\r\n              // }\r\n              // var last = d.features[limit].geometry.coordinates[0];\r\n              // alert(last);\r\n              //   // console.error(last);\r\n              //   // alert(JSON.stringify({ data: last, limit }));\r\n              //   //props.reset();\r\n              // updateGeofences(\r\n              //   id,\r\n              //   \"admin\",\r\n              //   \"L@s3rjet9045\",\r\n              //   service,\r\n              //   name,\r\n              //   last,\r\n              //   async () => {\r\n              //     // alert(JSON.stringify(last));\r\n              //     await fetchPoints();\r\n              //     status = \"add\";\r\n              //     setService(0);\r\n              //     setMapShow(false);\r\n              //   }\r\n              // );\r\n              // }\r\n            }}\r\n            onChange={(d) => {}}\r\n          />\r\n          {/* {props.children} */}\r\n          <div className=\"nav\">\r\n            <NavigationControl />\r\n          </div>\r\n          <div className=\"fullscreen\">\r\n            <FullscreenControl />\r\n          </div>\r\n        </MapGL>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  //   const fetchServices = () => {\r\n  //     return props.services.map((item, index) => {\r\n  //       return (\r\n  //         <React.Fragment key={index}>\r\n  //           <option value={item.id}> {item.name} </option>\r\n  //         </React.Fragment>\r\n  //       );\r\n  //     });\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name=\"geo\"\r\n        title={{\r\n          name: \"Geofence View \" + props.geoLat + \":\" + props.geoLng,\r\n          symbol: \"globe\",\r\n        }}\r\n      >\r\n        <div className=\"\" onMouseEnter={() => setMap(true)}>\r\n          <br />\r\n          {getMap()}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // user: state.logger,\r\n  traccarGeofences: state.traccarGeofences,\r\n  geoLat: state.geoLat,\r\n  geoLng: state.geoLng,\r\n  zoomLevel: state.zoomLevel,\r\n  // services: state.services,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // fetchAllGeofences: () => FetchAllGeofences(dispatch),\r\n  // addGeofences: (id, name, coords) => AddGeofences(dispatch, id, name, coords),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Geo);\r\n\r\n// export default Geo;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\GeoView\\GeoView.jsx",["2907","2908","2909","2910","2911","2912"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Customers\\Customers.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Panics\\Panics.jsx",["2913","2914","2915","2916","2917","2918","2919","2920","2921","2922","2923","2924","2925","2926","2927"],"import React, { useEffect } from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport Circle from \"react-circle\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserLogout, GetPanics, GetCenter } from \"../../../../../actions/index\";\r\n\r\nconst Panics = (props) => {\r\n  console.log(\"Supervisor - Panics Widget\");\r\n\r\n  const init = async () => {\r\n    // await props.getPanics();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  const getTableData = (data) => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr\r\n            onDoubleClick={() =>\r\n              props.getCenter([\r\n                {\r\n                  latitude: Number(item.lat),\r\n                  longitude: Number(item.lng),\r\n                },\r\n              ])\r\n            }\r\n          >\r\n            <td> {item.id} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.nature.name} </td>\r\n            <td> {item.priority.name} </td>\r\n            <td> {item.lat} </td>\r\n            <td> {item.lng} </td>\r\n            <td> </td>\r\n            {/* <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td> */}\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Contact </th>\r\n                <th> Nature </th>\r\n                <th> Priority </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                {/* <th> - </th>\r\n                <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getLength = (data) => {\r\n    if (data.length > 0) {\r\n      return (Number(data.length) / Number(props.panics.length)) * 100;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const getStyles = (bg) => {\r\n    return buildStyles({\r\n      rotation: 0.25,\r\n      strokeLinecap: \"butt\",\r\n      textSize: \"30px\",\r\n      pathTransitionDuration: 0.3,\r\n      pathColor: bg,\r\n      textColor: \"#369\",\r\n      trailColor: \"#d6d6d6\",\r\n      backgroundColor: \"#3e98c7\",\r\n      text: {\r\n        // Text color\r\n        fill: \"#f88\",\r\n        // Text size\r\n        fontSize: \"20px\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const panicLengthString = (data) => {\r\n    return Number(data.length) == 0 ? \"0\" : Number(data.length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ overflow: \"auto\", height: \"100vh\" }}>\r\n        <h4 style={{ textDecoration: \"underline\" }}>\r\n          <center> Panic Reports </center>\r\n        </h4>\r\n        <center className=\"inverse-theme\" style={{ padding: \"10px\" }}>\r\n          <div className=\"\" style={{ width: \"300px\" }}>\r\n            {/* <PieChart\r\n              data={[\r\n                { title: \"One\", value: 10, color: \"lightblue\" },\r\n                { title: \"Two\", value: 15, color: \"#919\" },\r\n                { title: \"Three\", value: 20, color: \"#419\" },\r\n                { title: \"Four\", value: 20, color: \"#999\" },\r\n              ]}\r\n            /> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.inQueryPanics)}\r\n                  text={panicLengthString(props.inQueryPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                In Query\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.confirmedByOperatorPanics)}\r\n                  text={panicLengthString(props.confirmedByOperatorPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Operator Confirmed\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.assignedToResponderPanics)}\r\n                  text={panicLengthString(props.assignedToResponderPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Assigned Responder\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                {\" \"}\r\n                <br />{\" \"}\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.confirmedByResponderPanics)}\r\n                  text={panicLengthString(props.confirmedByResponderPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Responder Confirmed\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.resolvedByResponderPanics)}\r\n                  text={panicLengthString(props.resolvedByResponderPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Responder Resolved\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.resolvedByOperatorPanics)}\r\n                  text={panicLengthString(props.resolvedByOperatorPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Operator Resolved\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                {\" \"}\r\n                <br />{\" \"}\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.closedBySupervisorPanics)}\r\n                  text={panicLengthString(props.closedBySupervisorPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Supervisor Closed\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.closedByCustomerPanics)}\r\n                  text={panicLengthString(props.closedByCustomerPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Customer Closed\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.cancelledPanics)}\r\n                  text={panicLengthString(props.cancelledPanics)}\r\n                  styles={getStyles(\"#369\")}\r\n                />\r\n                Cancelled\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </center>\r\n        {/* <h4\r\n          style={{ textDecoration: \"underline\" }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.panics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> All Panics </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>{getTable(props.panics)}</div> */}\r\n        <h4\r\n          style={{ textDecoration: \"underline\" }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.inQueryPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> InQuery Panics </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>\r\n          {getTable(props.inQueryPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ textDecoration: \"underline\" }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.confirmedByOperatorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> Confirmed By Operator Panics </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>\r\n          {getTable(props.confirmedByOperatorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ textDecoration: \"underline\" }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.assignedToResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> Assigned To Responder Panics </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>\r\n          {getTable(props.assignedToResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ textDecoration: \"underline\" }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.confirmedByResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> Confirmed By Responder Panics </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>\r\n          {getTable(props.confirmedByResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ textDecoration: \"underline\" }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.resolvedByResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> Resolved By Responder Panics </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>\r\n          {getTable(props.resolvedByResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ textDecoration: \"underline\" }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.resolvedByOperatorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> Resolved By Operator Panics </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>\r\n          {getTable(props.resolvedByOperatorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ textDecoration: \"underline\" }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.closedBySupervisorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> Closed By Supervisor Panics </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>\r\n          {getTable(props.closedBySupervisorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ textDecoration: \"underline\" }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.closedByCustomerPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> Closed By Customer Panics </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>\r\n          {getTable(props.closedByCustomerPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ textDecoration: \"underline\" }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.cancelledPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> Cancelled Panics </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>\r\n          {getTable(props.cancelledPanics)}\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  cancelledPanics: state.cancelledPanics,\r\n  panics: state.panics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  inQueryPanics: state.inQueryPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  assignedToResponderPanics: state.assignedToResponderPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  closedByCustomerPanics: state.closedByCustomerPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getPanics: () => GetPanics(dispatch),\r\n  getCenter: (data) => GetCenter(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Panics);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Applications\\Applications.jsx",["2928","2929","2930","2931","2932"],"import React, { useState } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ChangeGeoLatLng,\r\n  UpdateUsers,\r\n  GetUsers,\r\n} from \"../../../../../actions/index\";\r\n\r\nconst Applications = (props) => {\r\n  console.log(\"Supervisor - Customer Applications\");\r\n\r\n  const [filter, setFilter] = useState(false);\r\n\r\n  const getTableData = (data) => {\r\n    let info = data.reverse();\r\n    if (filter) {\r\n      info = info.filter((item) => item.approval == 1);\r\n    } else {\r\n      info = info.filter((item) => item.approval == null || item.approval == 0);\r\n    }\r\n    return info.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.cnic} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td> {item.password} </td>\r\n            <td> {item.lat} </td>\r\n            <td> {item.lng} </td>\r\n            <td> {item.address} </td>\r\n            <td> {item.userActivation} </td>\r\n            <td> {item.userAssignment} </td>\r\n            <td> {item.serviceId} </td>\r\n            <td>{item.subscriptionId}</td>\r\n            <td> {item.deviceId} </td>\r\n            <td> {item.custId} </td>\r\n            <td> {item.image} </td>\r\n            <td> {item.trackingId} </td>\r\n            <td> {item.uniqueId} </td>\r\n            <td>\r\n              <span\r\n                className=\"\"\r\n                onClick={() =>\r\n                  props.changeGeoLatLng({\r\n                    lat: Number(item.lat),\r\n                    lng: Number(item.lng),\r\n                  })\r\n                }\r\n                data-toggle=\"modal\"\r\n                data-target=\"#geo\"\r\n              >\r\n                <i className=\"fa fa-globe\"></i>\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <span\r\n                onClick={async () => {\r\n                  await props.updateUsers(item.id, {\r\n                    approval: item.approval == 1 ? 0 : 1,\r\n                  });\r\n                  await props.getUsers();\r\n                }}\r\n              >\r\n                {item.approval != null &&\r\n                item.approval != 0 &&\r\n                item.approval != false ? (\r\n                  <i className=\"fa fa-toggle-on\"></i>\r\n                ) : (\r\n                  <i className=\"fa fa-toggle-off\"></i>\r\n                )}\r\n              </span>\r\n            </td>\r\n            {/* <td> </td> */}\r\n            {/* <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => edit(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => del(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                  </button>\r\n                </td> */}\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> CNIC </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Password </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Address </th>\r\n                <th> User Activation </th>\r\n                <th> User Assignment </th>\r\n                <th> Service </th>\r\n                <th> Subscription </th>\r\n                <th> Device </th>\r\n                <th> Parent </th>\r\n                <th> Image </th>\r\n                <th> Tracking Id </th>\r\n                <th> Unique </th>\r\n                <th> Geofence </th>\r\n                <th> Approval </th>\r\n                {/* <th> - </th>\r\n                    <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"applications\"}\r\n        title={{ name: \"Applications\", symbol: \"file\" }}\r\n      >\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => setFilter((item) => !item)}\r\n          >\r\n            Filter\r\n          </button>\r\n        </div>\r\n        <br />\r\n        {getTable(props.customers)}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  customers: state.customers,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeGeoLatLng: (data) => ChangeGeoLatLng(dispatch, data),\r\n  updateUsers: (id, data) => UpdateUsers(dispatch, id, data),\r\n  getUsers: () => GetUsers(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Applications);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Profile\\Profile.jsx",["2933","2934","2935","2936"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UpdateUsers,\r\n  UserLogout,\r\n  UserLogin,\r\n} from \"../../../../../actions/index\";\r\n\r\nconst Profile = (props) => {\r\n  console.log(\"Supervisor - Profile\");\r\n\r\n  const [id, setId] = useState(props.user.id || 0);\r\n  const [firstname, setFirstname] = useState(props.user.firstname || \"\");\r\n  const [lastname, setLastname] = useState(props.user.lastname || \"\");\r\n  const [contact, setContact] = useState(props.user.contact || \"\");\r\n  const [email, setEmail] = useState(props.user.email || \"\");\r\n  const [cnic, setCnic] = useState(props.user.cnic || \"\");\r\n  const [password, setPassword] = useState(props.user.password || \"\");\r\n  const [address, setAddress] = useState(props.user.address || \"\");\r\n  // const [name,setName] = useState('');\r\n  // const [name,setName] = useState('');\r\n\r\n  useEffect(() => {\r\n    setFirstname(props.user.firstname || \"\");\r\n    setLastname(props.user.lastname || \"\");\r\n    setCnic(props.user.cnic || \"\");\r\n    setContact(props.user.contact || \"\");\r\n    setEmail(props.user.email || \"\");\r\n    setPassword(props.user.password || \"\");\r\n    // setAddress(props.user.address || \"\");\r\n    return;\r\n  }, [props.user]);\r\n\r\n  const update = async () => {\r\n    let data = {\r\n      firstname,\r\n      lastname,\r\n      contact,\r\n      cnic,\r\n      email,\r\n      password,\r\n      address,\r\n      userId: id,\r\n    };\r\n    console.log(\"Profile: \", data);\r\n    await props.updateUser(id, data);\r\n    setFirstname(props.user.firstname || \"\");\r\n    setLastname(props.user.lastname || \"\");\r\n    setCnic(props.user.cnic || \"\");\r\n    setContact(props.user.contact || \"\");\r\n    setEmail(props.user.email || \"\");\r\n    setPassword(props.user.password || \"\");\r\n    // setAddress(props.user.address || \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"profile\"}\r\n        title={{ name: \"User Profile\", symbol: \"user\" }}\r\n      >\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" First Name \"\r\n            value={firstname}\r\n            onChange={(e) => setFirstname(e.target.value)}\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" Last Name \"\r\n            value={lastname}\r\n            onChange={(e) => setLastname(e.target.value)}\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" CNIC \"\r\n            value={cnic}\r\n            onChange={(e) => setCnic(e.target.value)}\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" Contact \"\r\n            value={contact}\r\n            onChange={(e) => setContact(e.target.value)}\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" Email \"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <br />\r\n          {/* <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" Address \"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          />\r\n          <br /> */}\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\" Password \"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <br />\r\n          <div>\r\n            <button className=\"btn btn-primary\" onClick={update}>\r\n              {\" \"}\r\n              Update{\" \"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateUser: (id, data) => UpdateUsers(dispatch, id, data),\r\n  // login: (data) => UserLogin(dispatch, data),\r\n  // logout: () => UserLogout(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Logs\\Logs.jsx",["2937","2938","2939","2940","2941","2942","2943","2944","2945"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\n// import {  } from './../../../../../actions/index'\r\nimport JavascriptTimeAgo from \"javascript-time-ago\";\r\nimport en from \"javascript-time-ago/locale/en\";\r\nimport ru from \"javascript-time-ago/locale/ru\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nJavascriptTimeAgo.addLocale(en);\r\nJavascriptTimeAgo.addLocale(ru);\r\n\r\nconst compareDate = (date1, date2, type = \"equal\") => {\r\n  let x = new Date(date1);\r\n  let y = new Date(date2);\r\n  if (type == \"greater\") {\r\n    return +x > +y;\r\n  } else if (type == \"lesser\") {\r\n    return +x < +y;\r\n  } else {\r\n    return +x == +y;\r\n  }\r\n};\r\n\r\nconst Logs = (props) => {\r\n  console.log(\"Supervisor - Event Logs\");\r\n\r\n  const [start, setStart] = useState(\"\");\r\n  const [end, setEnd] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getPanics();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  // const filterNature = (id) => {\r\n  //   let data = props.natures.filter((item) => item.id == id);\r\n  //   if (data.length > 0) {\r\n  //     return data[0];\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  // const filterPriority = (id) => {\r\n  //   let data = props.priorities.filter((item) => item.id == id);\r\n  //   if (data.length > 0) {\r\n  //     return data[0];\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  const filterResponders = (id) => {\r\n    let data = props.online.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterOperators = (id) => {\r\n    let data = props.operators.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterSupervisors = (id) => {\r\n    let data = props.supervisors.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    return data.reverse().map((item, index) => {\r\n      let color = item.isCancelled ? \"red\" : \"transparent\";\r\n      if (start == \"\" || end == \"\") {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <tr style={{ background: color }}>\r\n              <td> {item.id} </td>\r\n              <td> {item.contact} </td>\r\n              <td> {item.nature.name} </td>\r\n              <td> {item.priority.name} </td>\r\n              <td> {item.lat} </td>\r\n              <td> {item.lng} </td>\r\n              <td> {item.isCancelled ? \"Yes\" : \"No\"} </td>\r\n              <td>\r\n                {filterOperators(item.operatorInvolved) == null\r\n                  ? null\r\n                  : filterOperators(item.operatorInvolved).firstname}\r\n              </td>\r\n              <td>\r\n                {filterSupervisors(item.supervisorInvolved) == null\r\n                  ? null\r\n                  : filterSupervisors(item.supervisorInvolved).firstname}\r\n              </td>\r\n              <td>\r\n                {\" \"}\r\n                {filterResponders(item.responderInvolved) == null\r\n                  ? null\r\n                  : filterResponders(item.responderInvolved).name}{\" \"}\r\n              </td>\r\n              <td>\r\n                {item.createdAt && (\r\n                  <ReactTimeAgo date={new Date(item.createdAt)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicConfirmedOprDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicConfirmedOprDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicConfirmedSuprDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicConfirmedSuprDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicAssignedResDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicAssignedResDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicConfirmedResDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicConfirmedResDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicResolvedResDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicResolvedResDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicResolvedOprDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicResolvedOprDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicClosedSuprDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicClosedSuprDate)} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {item.panicClosedCusDate && (\r\n                  <ReactTimeAgo date={new Date(item.panicClosedCusDate)} />\r\n                )}\r\n              </td>\r\n              {/* <td>\r\n                <button\r\n                  className=\"btn btn-xs btn-primary\"\r\n                  onClick={() => edit(item.id)}\r\n                >\r\n                  <i className=\"fa fa-pencil\"></i>\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-xs btn-primary\"\r\n                  onClick={() => del(item.id)}\r\n                >\r\n                  <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n              </td> */}\r\n            </tr>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        if (\r\n          compareDate(item.createdAt, start, \"greator\") &&\r\n          compareDate(item.createdAt, end, \"lesser\")\r\n        ) {\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <tr style={{ background: color }}>\r\n                <td> {item.id} </td>\r\n                <td> {item.contact} </td>\r\n                <td> {item.nature.name} </td>\r\n                <td> {item.priority.name} </td>\r\n                <td> {item.lat} </td>\r\n                <td> {item.lng} </td>\r\n                <td> {item.isCancelled ? \"Yes\" : \"No\"} </td>\r\n                <td>\r\n                  {filterOperators(item.operatorInvolved) == null\r\n                    ? null\r\n                    : filterOperators(item.operatorInvolved).firstname}\r\n                </td>\r\n                <td>\r\n                  {filterSupervisors(item.supervisorInvolved) == null\r\n                    ? null\r\n                    : filterSupervisors(item.supervisorInvolved).firstname}\r\n                </td>\r\n                <td>\r\n                  {\" \"}\r\n                  {filterResponders(item.responderInvolved) == null\r\n                    ? null\r\n                    : filterResponders(item.responderInvolved).name}{\" \"}\r\n                </td>\r\n                <td>\r\n                  {item.createdAt && (\r\n                    <ReactTimeAgo date={new Date(item.createdAt)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicConfirmedOprDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicConfirmedOprDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicConfirmedSuprDate && (\r\n                    <ReactTimeAgo\r\n                      date={new Date(item.panicConfirmedSuprDate)}\r\n                    />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicAssignedResDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicAssignedResDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicConfirmedResDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicConfirmedResDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicResolvedResDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicResolvedResDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicResolvedOprDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicResolvedOprDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicClosedSuprDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicClosedSuprDate)} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.panicClosedCusDate && (\r\n                    <ReactTimeAgo date={new Date(item.panicClosedCusDate)} />\r\n                  )}\r\n                </td>\r\n                {/* <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => edit(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-xs btn-primary\"\r\n                    onClick={() => del(item.id)}\r\n                  >\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                  </button>\r\n                </td> */}\r\n              </tr>\r\n            </React.Fragment>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={{ overflow: \"auto\", fontSize: \"11px\" }}\r\n          className=\"inverse-theme\"\r\n        >\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Contact </th>\r\n                <th> Nature </th>\r\n                <th> Priority </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Cancelled </th>\r\n                <th> Operator </th>\r\n                <th> Supervisor </th>\r\n                <th> Responder </th>\r\n                <th> Generated </th>\r\n                <th> Confirmed By Operator </th>\r\n                <th> Confirmed By Supervisor </th>\r\n                <th> Assigned To Responder </th>\r\n                <th> Confirmed Responder </th>\r\n                <th> Resolved By Responder </th>\r\n                <th> Resolved By Operator </th>\r\n                <th> Closed By Supervisor </th>\r\n                <th> Closed By Customer </th>\r\n                {/* <th> - </th>\r\n                    <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"logs\"}\r\n        title={{ name: \"Logs\", symbol: \"check\" }}\r\n      >\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"\">\r\n                {\" \"}\r\n                <b> From </b>{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                placeholder=\" From : 00/00/0000 \"\r\n                value={start}\r\n                onChange={(e) => setStart(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"\">\r\n                {\" \"}\r\n                <b> To </b>{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                placeholder=\" To : 00/00/0000 \"\r\n                value={end}\r\n                onChange={(e) => setEnd(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        {getTable(props.panics)}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  // natures: state.natures,\r\n  // priorities: state.priorities,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n  panics: state.panics,\r\n  operators: state.operators,\r\n  supervisors: state.supervisors,\r\n  // inQueryPanics: state.inQueryPanics,\r\n  // confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  // assignedToResponderPanics: state.assignedToResponderPanics,\r\n  // confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  // resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  // resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  // closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  // closedByCustomerPanics: state.closedByCustomerPanics,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Responders\\Responders.jsx",["2946","2947","2948","2949","2950","2951","2952","2953","2954","2955","2956","2957","2958","2959","2960","2961","2962","2963","2964","2965","2966","2967","2968","2969","2970","2971"],"import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetAllResponder,\r\n  GetCenter,\r\n} from \"./../../../../../actions/index\";\r\nimport Reports from \"../Reports/Reports\";\r\n// import Plot from \"react-plotly.js\";\r\nimport BarChart from \"react-bar-chart\";\r\nimport _ from \"lodash\";\r\nimport HSBar from \"react-horizontal-stacked-bar-chart\";\r\n\r\nconst Responders = (props) => {\r\n  console.log(\"Supervisor - Responder Widget\");\r\n\r\n  const OperatorWidget = useRef(\"\");\r\n  const lineGraphWidget = useRef(\"\");\r\n  const onlinRespWidget = useRef(\"\");\r\n  const offlinRespWidget = useRef(\"\");\r\n  const unknownRespWidget = useRef(\"\");\r\n  const buzyRespWidget = useRef(\"\");\r\n  const freeRespWidget = useRef(\"\");\r\n  const boundryRespWidget = useRef(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getResponders();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  const getTableData2 = (data) => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td>{item.id}</td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td>\r\n              {\" \"}\r\n              {item.userActivation ? (\r\n                <i className=\"fa fa-toggle-on\"></i>\r\n              ) : (\r\n                <i className=\"fa fa-toggle-off\"></i>\r\n              )}\r\n            </td>\r\n            {/* <td> {item.position.speed} </td> */}\r\n            <td> </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    let data2 = getResss(data);\r\n    return data2.map((item, index) => {\r\n      // let color = null;\r\n      // if (item.db) {\r\n      //   if (item.db.userActivation == true) {\r\n      //     color = \"green\";\r\n      //   } else {\r\n      //     color = \"transparent\";\r\n      //   }\r\n      // } else {\r\n      //   color = \"transparent\";\r\n      // }\r\n      // console.error(color);\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr\r\n            // style={{ background: \"red !important\" }}\r\n            onDoubleClick={() =>\r\n              props.getCenter([\r\n                { latitude: Number(item.lat), longitude: Number(item.lng) },\r\n              ])\r\n            }\r\n          >\r\n            <td> {item.id} </td>\r\n            <td> {item.name} </td>\r\n            <td> {item.db == null ? null : item.db.contact} </td>\r\n            <td> {item.position.latitude} </td>\r\n            <td> {item.position.longitude} </td>\r\n            <td> {item.position.speed} </td>\r\n            <td> </td>\r\n            {/* <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td> */}\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Speed </th>\r\n                {/* <th> - </th>\r\n                <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getTable2 = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Active </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData2(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getOperss = () => {\r\n    let groupIds = props.groups.map((item) => item.id);\r\n    let result = props.operators.filter((item) => {\r\n      let group = Number(item.groupId);\r\n      if (_.includes(groupIds, group)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    // console.error(result);\r\n    return result;\r\n  };\r\n\r\n  const getResss = (data) => {\r\n    // Supervisor\r\n    let info = props.groups2.map((p) => {\r\n      let ele = p;\r\n      let grouper = ele.groupId;\r\n      let theGroup = props.allGroups.filter((item) => item.id == grouper);\r\n      if (theGroup && theGroup.length > 0) {\r\n        return theGroup[0];\r\n      }\r\n    });\r\n    let info_num = info.map((item) => item.groupId);\r\n    let info2 = props.allGroups.filter((item) => {\r\n      // console.error(info_num, item.groupId);\r\n      if (_.includes(info_num, item.groupId)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    // console.error(_.uniq(info2, \"id\"));\r\n    // return [];\r\n    //Admin\r\n    // let info3 = [];\r\n    // if (info2 && info2.length > 0) {\r\n    //   info3 = props.allGroups.filter((item) => info2[0].id == item.groupId);\r\n    // }\r\n    let groupIds = info2.map((item) => item.id);\r\n    // console.error(groupIds);\r\n    let result = data.filter((item) => {\r\n      if (item.db != null) {\r\n        let group = Number(item.db.groupId);\r\n        if (_.includes(groupIds, group)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          overflow: \"auto\",\r\n          // scrollBehavior: \"inherit\",\r\n          direction: \"rtl\",\r\n          marginRight: \"10px\",\r\n        }}\r\n      >\r\n        <div style={{ direction: \"ltr\" }}>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                onlinRespWidget.current.style.display == \"none\" ||\r\n                onlinRespWidget.current.style.display == \"\"\r\n              ) {\r\n                onlinRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                onlinRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.online.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Online Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={onlinRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.online)}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                offlinRespWidget.current.style.display == \"none\" ||\r\n                offlinRespWidget.current.style.display == \"\"\r\n              ) {\r\n                offlinRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                offlinRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.offline.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Offline Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={offlinRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.offline)}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                unknownRespWidget.current.style.display == \"none\" ||\r\n                unknownRespWidget.current.style.display == \"\"\r\n              ) {\r\n                unknownRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                unknownRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.unknown.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Unknown Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={unknownRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.unknown)}\r\n          </div>\r\n\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                boundryRespWidget.current.style.display == \"none\" ||\r\n                boundryRespWidget.current.style.display == \"\"\r\n              ) {\r\n                boundryRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                boundryRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.outBound.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Cross Boundries&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={boundryRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.outBound, \"id\"))}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                buzyRespWidget.current.style.display == \"none\" ||\r\n                buzyRespWidget.current.style.display == \"\"\r\n              ) {\r\n                buzyRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                buzyRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.buzy.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Buzy Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={buzyRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.buzy, \"id\"))}\r\n          </div>\r\n\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                freeRespWidget.current.style.display == \"none\" ||\r\n                freeRespWidget.current.style.display == \"\"\r\n              ) {\r\n                freeRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                freeRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.free.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Free Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={freeRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.free, \"id\"))}\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  offline: state.offlineResponders,\r\n  online: state.onlineResponders,\r\n  unknown: state.unknownResponders,\r\n  outBound: state.outBoundResponders,\r\n  buzy: state.buzyResponders,\r\n  free: state.freeResponders,\r\n  allGroups: state.groups,\r\n  groups: state.groups.filter((item) => item.groupId == state.logger.groupId),\r\n  groups2: state.groups.filter((item) => {\r\n    let sprvsr = item.id == state.logger.groupId;\r\n    if (sprvsr) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }),\r\n  operators: state.operators,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getResponders: () => GetAllResponder(dispatch),\r\n  getCenter: (data) => GetCenter(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Responders);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Groups\\Groups.jsx",["2972","2973","2974"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Subscriptions\\Subscriptions.jsx",["2975","2976","2977","2978"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Map\\Spot.jsx",["2979","2980"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Operator\\Operator.jsx",["2981","2982","2983","2984","2985"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Priorities\\Priorities.jsx",["2986","2987","2988","2989","2990"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Geofence\\Geofence.jsx",["2991","2992","2993"],"import React, { useEffect } from \"react\";\r\nimport Modal from \"../../../../../containers/Modal/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserLogout, FetchAllGeofences } from \"../../../../../actions/index\";\r\nimport Map from \"./Map/Map\";\r\n\r\nconst Geofence = (props) => {\r\n  console.log(\"Supervisor - Geofence\");\r\n  return (\r\n    <>\r\n      <Modal\r\n        close={false}\r\n        big={true}\r\n        name={\"geofence\"}\r\n        title={{ name: \"Geofence\", symbol: \"globe\" }}\r\n      >\r\n        <Map />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // user: state.logger,\r\n  //   traccarGeofences: state.traccarGeofences,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  //   fetchAllGeofences: () => FetchAllGeofences(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Geofence);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Supervisor\\Supervisor.jsx",["2994","2995","2996","2997","2998"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Natures\\Natures.jsx",["2999","3000","3001","3002"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Services\\Services.jsx",["3003","3004","3005","3006"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Wall\\Wall.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Users\\Users.jsx",["3007","3008","3009"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\TopBar\\TopBar.jsx",["3010","3011","3012","3013","3014"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserLogout, changeZoom } from \"../../../../../actions/index\";\r\nimport TopMenu from \"../../../../../containers/TobMenu/TopMenu\";\r\n\r\nconst TopBar = (props) => {\r\n  console.log(\"Supervisor Dashboard Panel - Top Menu\");\r\n  return (\r\n    <>\r\n      <TopMenu title=\"Operator Panel\">\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n          <li>\r\n            <a>\r\n              <span data-toggle=\"modal\" /* data-target=\"#logs\" title=\"Logs\" */>\r\n                <i\r\n                  className=\"fa fa-plus\"\r\n                  title=\"Zoom In\"\r\n                  onClick={() => props.changeZoom(props.zoomLevel - 1)}\r\n                ></i>\r\n                &nbsp;\r\n                <i\r\n                  className=\"fa fa-minus\"\r\n                  title=\"Zoom Out\"\r\n                  onClick={() => props.changeZoom(props.zoomLevel + 1)}\r\n                ></i>\r\n                &nbsp; Zoom &nbsp;\r\n                <span className=\"badge inverse-theme\"> {props.zoomLevel} </span>\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a>\r\n              <span data-toggle=\"modal\" /* data-target=\"#logs\" title=\"Logs\" */>\r\n                <i\r\n                  className=\"fa fa-arrow-left\"\r\n                  title=\"Left Drawer\"\r\n                  onClick={() => props.setLeft((item) => !item)}\r\n                ></i>\r\n                &nbsp;\r\n                <i\r\n                  className=\"fa fa-arrow-right\"\r\n                  title=\"Right Drawer\"\r\n                  onClick={() => props.setRight((item) => !item)}\r\n                ></i>\r\n                &nbsp; Drawers\r\n              </span>\r\n            </a>\r\n          </li>\r\n\r\n          <li className=\"dropdown themer\">\r\n            <a\r\n              href=\"\"\r\n              className=\"dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              role=\"button\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-user\"></i>\r\n                <span> &nbsp; </span>\r\n              </span>\r\n              {props.user.firstname.toUpperCase()} &nbsp;\r\n              <span className=\"caret\"></span>\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li data-toggle=\"modal\" data-target=\"#profile\">\r\n                <a>Profile</a>\r\n              </li>\r\n              <li>\r\n                <a onClick={props.logout}>Logout</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </TopMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  zoomLevel: state.zoomLevel,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\ResponderView\\ResponderView.jsx",["3015","3016","3017","3018","3019","3020","3021"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Profile\\Profile.jsx",["3022","3023","3024","3025"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\GeoView\\GeoView.jsx",["3026","3027","3028","3029","3030","3031"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Customers\\Customers.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Geo\\Geo.jsx",["3032","3033","3034","3035","3036","3037","3038"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Applications\\Applications.jsx",["3039","3040","3041","3042","3043","3044"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Panics\\Panics.jsx",["3045","3046","3047","3048","3049","3050","3051","3052","3053","3054","3055","3056","3057","3058","3059","3060","3061","3062","3063","3064","3065","3066","3067","3068","3069","3070","3071","3072","3073","3074","3075"],"import React, { useEffect, useRef } from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport Circle from \"react-circle\";\r\nimport { connect } from \"react-redux\";\r\nimport { CheckIfEmpty } from \"../../../../../Helpers/utils\";\r\nimport {\r\n  UserLogout,\r\n  GetPanics,\r\n  GetCenter,\r\n} from \"./../../../../../actions/index\";\r\n\r\nconst Panics = (props) => {\r\n  console.log(\"Supervisor - Panics Widget\");\r\n\r\n  const panicWidget = useRef(\"\");\r\n  const inQueryWidget = useRef(\"\");\r\n  const confirmedByOperatorWidget = useRef(\"\");\r\n  const assignedToResponderWidget = useRef(\"\");\r\n  const confirmedByResponderWidget = useRef(\"\");\r\n  const resolvedByResponderWidget = useRef(\"\");\r\n  const resolvedByOperatorWidget = useRef(\"\");\r\n  const closedBySupervisorWidget = useRef(\"\");\r\n  const closedByCustomerWidget = useRef(\"\");\r\n  const cancelledWidget = useRef(\"\");\r\n  const closedWidget = useRef(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getPanics();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  const getTableData = (data) => {\r\n    return data.reverse().map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr\r\n            onDoubleClick={() =>\r\n              props.getCenter([\r\n                {\r\n                  latitude: Number(item.lat),\r\n                  longitude: Number(item.lng),\r\n                },\r\n              ])\r\n            }\r\n          >\r\n            <td> {item.id} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.nature.name} </td>\r\n            <td> {item.priority.name} </td>\r\n            <td> {item.lat} </td>\r\n            <td> {item.lng} </td>\r\n            <td> {item.createdAt} </td>\r\n            {/* <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td> */}\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme2\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Contact </th>\r\n                <th> Nature </th>\r\n                <th> Priority </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Date </th>\r\n                {/* <th> - </th>\r\n                <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getLength = (data) => {\r\n    const data2 = data.filter(function (data) {\r\n      return data.panicType == \"utility\";\r\n    });\r\n\r\n    if (data2.length > 0) {\r\n      return (Number(data2.length) / Number(props.panics.length)) * 100;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const getStyles = (bg) => {\r\n    return buildStyles({\r\n      rotation: 0.25,\r\n      strokeLinecap: \"butt\",\r\n      textSize: \"30px\",\r\n      pathTransitionDuration: 0.3,\r\n      pathColor: bg,\r\n      textColor: \"#666699\",\r\n      trailColor: \"#d6d6d6\",\r\n      backgroundColor: \"#3e98c7\",\r\n      text: {\r\n        // Text color\r\n        fill: \"#f88\",\r\n        // Text size\r\n        fontSize: \"20px\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const panicLengthString = (data) => {\r\n    const data2 = data.filter(function (data) {\r\n      return data.panicType == \"utility\";\r\n    });\r\n    return Number(data2.length) == 0 ? \"0\" : Number(data2.length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ overflow: \"auto\", height: \"100vh\" }}>\r\n        <div>\r\n          {/* <PieChart\r\n            data={[\r\n              { title: \"One\", value: 1, color: \"darkblue\" },\r\n              { title: \"One\", value: 2, color: \"blue\" },\r\n              { title: \"Two\", value: 3, color: \"cyan\" },\r\n              { title: \"Three\", value: 4, color: \"skyblue\" },\r\n              { title: \"Four\", value: 5, color: \"lightblue\" },\r\n              { title: \"Four\", value: 6, color: \"#eee\" },\r\n              { title: \"Four\", value: 7, color: \"#339\" },\r\n              { title: \"Four\", value: 8, color: \"#366\" },\r\n              { title: \"Four\", value: 9, color: \"#666699\" },\r\n            ]}\r\n          /> */}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              panicWidget.current.style.display == \"none\" ||\r\n              panicWidget.current.style.display == \"\"\r\n            ) {\r\n              panicWidget.current.style.display = \"block\";\r\n            } else {\r\n              panicWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Utility Reports&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <center\r\n          ref={panicWidget}\r\n          className=\"inverse-theme2\"\r\n          style={{ padding: \"5px\", display: \"block\" }}\r\n        >\r\n          <div className=\"\" style={{ width: \"350px\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.inQueryPanics)}\r\n                  text={panicLengthString(props.inQueryPanics)}\r\n                  styles={getStyles(\"#666699\")}\r\n                />\r\n                In Query\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.confirmedByOperatorPanics)}\r\n                  text={panicLengthString(props.confirmedByOperatorPanics)}\r\n                  styles={getStyles(\"#666699\")}\r\n                />\r\n                Operator Confirmed\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.assignedToResponderPanics)}\r\n                  text={panicLengthString(props.assignedToResponderPanics)}\r\n                  styles={getStyles(\"#666699\")}\r\n                />\r\n                Assigned Responder\r\n              </div>\r\n\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.confirmedByResponderPanics)}\r\n                  text={panicLengthString(props.confirmedByResponderPanics)}\r\n                  styles={getStyles(\"#666699\")}\r\n                />\r\n                Responder Confirmed\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.resolvedByResponderPanics)}\r\n                  text={panicLengthString(props.resolvedByResponderPanics)}\r\n                  styles={getStyles(\"#666699\")}\r\n                />\r\n                Responder Resolved\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.resolvedByOperatorPanics)}\r\n                  text={panicLengthString(props.resolvedByOperatorPanics)}\r\n                  styles={getStyles(\"#666699\")}\r\n                />\r\n                Operator Resolved\r\n              </div>\r\n\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.closedBySupervisorPanics)}\r\n                  text={panicLengthString(props.closedBySupervisorPanics)}\r\n                  styles={getStyles(\"#666699\")}\r\n                />\r\n                Supervisor Closed\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.closedByCustomerPanics)}\r\n                  text={panicLengthString(props.closedByCustomerPanics)}\r\n                  styles={getStyles(\"#666699\")}\r\n                />\r\n                Customer Closed\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.panics)}\r\n                  text={panicLengthString(props.panics)}\r\n                  styles={getStyles(\"#666699\")}\r\n                />\r\n                Total\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.cancelledPanics)}\r\n                  text={panicLengthString(props.cancelledPanics)}\r\n                  styles={getStyles(\"#666699\")}\r\n                />\r\n                Cancelled\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <CircularProgressbar\r\n                  value={getLength(props.closedPanics)}\r\n                  text={panicLengthString(props.closedPanics)}\r\n                  styles={getStyles(\"#666699\")}\r\n                />\r\n                Closed\r\n              </div>\r\n            </div>\r\n          </div>\r\n          &nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n        </center>\r\n\r\n        {/* <h4\r\n          style={{ padding: \"5px\",   }}\r\n          onClick={() =>\r\n            props.getCenter(\r\n              props.panics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center> All Panics&nbsp; <i className=\"fa fa-caret-down\" ></i> </center>\r\n        </h4>\r\n        <div style={{ marginLeft: \"15px\" }}>{getTable(props.panics)}</div> */}\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              inQueryWidget.current.style.display == \"none\" ||\r\n              inQueryWidget.current.style.display == \"\"\r\n            ) {\r\n              inQueryWidget.current.style.display = \"block\";\r\n            } else {\r\n              inQueryWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.inQueryPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            InQuery Utility&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={inQueryWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.inQueryPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              confirmedByOperatorWidget.current.style.display == \"none\" ||\r\n              confirmedByOperatorWidget.current.style.display == \"\"\r\n            ) {\r\n              confirmedByOperatorWidget.current.style.display = \"block\";\r\n            } else {\r\n              confirmedByOperatorWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.confirmedByOperatorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Confirmed By Operator Utility&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={confirmedByOperatorWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.confirmedByOperatorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              assignedToResponderWidget.current.style.display == \"none\" ||\r\n              assignedToResponderWidget.current.style.display == \"\"\r\n            ) {\r\n              assignedToResponderWidget.current.style.display = \"block\";\r\n            } else {\r\n              assignedToResponderWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.assignedToResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Assigned To Responder Utility&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={assignedToResponderWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.assignedToResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              confirmedByResponderWidget.current.style.display == \"none\" ||\r\n              confirmedByResponderWidget.current.style.display == \"\"\r\n            ) {\r\n              confirmedByResponderWidget.current.style.display = \"block\";\r\n            } else {\r\n              confirmedByResponderWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.confirmedByResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Confirmed By Responder Utility&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={confirmedByResponderWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.confirmedByResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              resolvedByResponderWidget.current.style.display == \"none\" ||\r\n              resolvedByResponderWidget.current.style.display == \"\"\r\n            ) {\r\n              resolvedByResponderWidget.current.style.display = \"block\";\r\n            } else {\r\n              resolvedByResponderWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.resolvedByResponderPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Resolved By Responder Utility&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={resolvedByResponderWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.resolvedByResponderPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              resolvedByOperatorWidget.current.style.display == \"none\" ||\r\n              resolvedByOperatorWidget.current.style.display == \"\"\r\n            ) {\r\n              resolvedByOperatorWidget.current.style.display = \"block\";\r\n            } else {\r\n              resolvedByOperatorWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.resolvedByOperatorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Resolved By Operator Utility&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={resolvedByOperatorWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.resolvedByOperatorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              closedBySupervisorWidget.current.style.display == \"none\" ||\r\n              closedBySupervisorWidget.current.style.display == \"\"\r\n            ) {\r\n              closedBySupervisorWidget.current.style.display = \"block\";\r\n            } else {\r\n              closedBySupervisorWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.closedBySupervisorPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Closed By Supervisor Utility&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={closedBySupervisorWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.closedBySupervisorPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              closedByCustomerWidget.current.style.display == \"none\" ||\r\n              closedByCustomerWidget.current.style.display == \"\"\r\n            ) {\r\n              closedByCustomerWidget.current.style.display = \"block\";\r\n            } else {\r\n              closedByCustomerWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.closedByCustomerPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Closed By Customer Utility&nbsp;{\" \"}\r\n            <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={closedByCustomerWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.closedByCustomerPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              cancelledWidget.current.style.display == \"none\" ||\r\n              cancelledWidget.current.style.display == \"\"\r\n            ) {\r\n              cancelledWidget.current.style.display = \"block\";\r\n            } else {\r\n              cancelledWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.cancelledPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Cancelled Utility&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div\r\n          ref={cancelledWidget}\r\n          style={{ marginLeft: \"15px\", display: \"none\" }}\r\n        >\r\n          {getTable(props.closedPanics)}\r\n        </div>\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            if (\r\n              closedWidget.current.style.display == \"none\" ||\r\n              closedWidget.current.style.display == \"\"\r\n            ) {\r\n              closedWidget.current.style.display = \"block\";\r\n            } else {\r\n              closedWidget.current.style.display = \"none\";\r\n            }\r\n          }}\r\n          onDoubleClick={() =>\r\n            props.getCenter(\r\n              props.cancelledPanics.map((item) => {\r\n                return { latitude: item.lat, longitude: item.lng };\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <center>\r\n            {\" \"}\r\n            Closed Utility&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <div ref={closedWidget} style={{ marginLeft: \"15px\", display: \"none\" }}>\r\n          {getTable(props.closedPanics)}\r\n        </div>\r\n        <br />\r\n\r\n        <br />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  panics: state.panics,\r\n  inQueryPanics: state.inQueryPanics,\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  assignedToResponderPanics: state.assignedToResponderPanics,\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  closedByCustomerPanics: state.closedByCustomerPanics,\r\n  cancelledPanics: state.cancelledPanics,\r\n  closedPanics: state.closedPanics,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getPanics: () => GetPanics(dispatch),\r\n  getCenter: (data) => GetCenter(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Panics);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Responders\\Responders.jsx",["3076","3077","3078","3079","3080","3081","3082","3083","3084","3085","3086","3087","3088","3089","3090","3091","3092","3093","3094","3095","3096","3097","3098","3099","3100","3101","3102","3103"],"import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  UserLogout,\r\n  GetAllResponder,\r\n  GetCenter,\r\n} from \"./../../../../../actions/index\";\r\nimport Reports from \"../Reports/Reports\";\r\n// import Plot from \"react-plotly.js\";\r\nimport BarChart from \"react-bar-chart\";\r\nimport _ from \"lodash\";\r\nimport HSBar from \"react-horizontal-stacked-bar-chart\";\r\nimport Notification from \"../Notifications/private notifications/Notification\";\r\n\r\nconst Responders = (props) => {\r\n  console.log(\"Supervisor - Responder Widget\");\r\n\r\n  const OperatorWidget = useRef(\"\");\r\n  const lineGraphWidget = useRef(\"\");\r\n  const onlinRespWidget = useRef(\"\");\r\n  const offlinRespWidget = useRef(\"\");\r\n  const unknownRespWidget = useRef(\"\");\r\n  const buzyRespWidget = useRef(\"\");\r\n  const freeRespWidget = useRef(\"\");\r\n  const boundryRespWidget = useRef(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.getResponders();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // init();\r\n    return;\r\n  }, []);\r\n\r\n  const getTableData2 = (data) => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td>{item.id}</td>\r\n            <td> {item.firstname + \" \" + item.lastname} </td>\r\n            <td> {item.contact} </td>\r\n            <td> {item.email} </td>\r\n            <td>\r\n              {\" \"}\r\n              {item.userActivation ? (\r\n                <i className=\"fa fa-toggle-on\"></i>\r\n              ) : (\r\n                <i className=\"fa fa-toggle-off\"></i>\r\n              )}\r\n            </td>\r\n            {/* <td> {item.position.speed} </td> */}\r\n            <td> </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTableData = (data) => {\r\n    let data2 = getResss(data);\r\n    let data365 = data2.filter(function (res) {\r\n      return res.db.type == \"utility\";\r\n    });\r\n    return data365.map((item, index) => {\r\n      //console.log(\"map fuctions of Items\", item);\r\n      // let color = null;\r\n      // if (item.db) {\r\n      //   if (item.db.userActivation == true) {\r\n      //     color = \"green\";\r\n      //   } else {\r\n      //     color = \"transparent\";\r\n      //   }\r\n      // } else {\r\n      //   color = \"transparent\";\r\n      // }\r\n      // console.error(color);\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr\r\n            // style={{ background: \"red !important\" }}\r\n            onDoubleClick={() =>\r\n              props.getCenter([\r\n                { latitude: Number(item.lat), longitude: Number(item.lng) },\r\n              ])\r\n            }\r\n          >\r\n            <td> {item.id} </td>\r\n            <td> {item.name} </td>\r\n            <td> {item.db == null ? null : item.db.contact} </td>\r\n            <td> {item.position.latitude} </td>\r\n            <td> {item.position.longitude} </td>\r\n            <td> {item.position.speed} </td>\r\n            <td> {item.db.type} </td>\r\n            <td> </td>\r\n            {/* <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td> */}\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme2\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Lat </th>\r\n                <th> Lng </th>\r\n                <th> Speed </th>\r\n                <th> type </th>\r\n                {/* <th> - </th>\r\n                <th> - </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getTable2 = (data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ overflow: \"auto\" }} className=\"inverse-theme2\">\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Contact </th>\r\n                <th> Email </th>\r\n                <th> Active </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData2(data)}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getOperss = () => {\r\n    let groupIds = props.groups.map((item) => item.id);\r\n    let result = props.operators.filter((item) => {\r\n      let group = Number(item.groupId);\r\n      if (_.includes(groupIds, group)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    // console.error(result);\r\n    return result;\r\n  };\r\n\r\n  const getResss = (data) => {\r\n    let info = props.groups2.map((p) => {\r\n      let ele = p;\r\n      let grouper = ele.groupId;\r\n      let theGroup = props.allGroups.filter((item) => item.id == grouper);\r\n      if (theGroup && theGroup.length > 0) {\r\n        return theGroup[0];\r\n      }\r\n    });\r\n    let info2 = [];\r\n    if (info && info.length > 0) {\r\n      info2 = props.allGroups.filter((item) => info[0].id == item.groupId);\r\n    }\r\n    let groupIds = info2.map((item) => item.id);\r\n    let result = data.filter((item) => {\r\n      if (item.db != null) {\r\n        let group = Number(item.db.groupId);\r\n        if (_.includes(groupIds, group)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          overflow: \"auto\",\r\n          // scrollBehavior: \"inherit\",\r\n          direction: \"rtl\",\r\n          marginRight: \"10px\",\r\n        }}\r\n      >\r\n        {/* my code for firebase */}\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            window.location = \"/privatenotification\";\r\n            // props.history.push(\"/notification\");\r\n            //<Redirect to=\"/notification\"></Redirect>;\r\n          }}\r\n        >\r\n          <center>\r\n            Private Notifications&nbsp; <i className=\"fa\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            window.location = \"/publicnotification\";\r\n            // props.history.push(\"/notification\");\r\n            //<Redirect to=\"/notification\"></Redirect>;\r\n          }}\r\n        >\r\n          <center>\r\n            Public Notifications&nbsp; <i className=\"fa\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        <h4\r\n          style={{ padding: \"5px\" }}\r\n          onClick={() => {\r\n            window.location = \"/usernotification\";\r\n            // props.history.push(\"/notification\");\r\n            //<Redirect to=\"/notification\"></Redirect>;\r\n          }}\r\n        >\r\n          <center>\r\n            User Notifications&nbsp; <i className=\"fa\"></i>{\" \"}\r\n          </center>\r\n        </h4>\r\n        <hr style={{ padding: 0, margin: 0 }} />\r\n        {/* end of my code */}\r\n        <div style={{ direction: \"ltr\" }}>\r\n          {/* <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                OperatorWidget.current.style.display == \"none\" ||\r\n                OperatorWidget.current.style.display == \"\"\r\n              ) {\r\n                OperatorWidget.current.style.display = \"block\";\r\n              } else {\r\n                OperatorWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Operators&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} /> */}\r\n          {/* 2nd comment */}\r\n          {/* <div ref={OperatorWidget} style={{ display: \"none\" }}>\r\n            {getTable2(getOperss())}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                lineGraphWidget.current.style.display == \"none\" ||\r\n                lineGraphWidget.current.style.display == \"\"\r\n              ) {\r\n                lineGraphWidget.current.style.display = \"block\";\r\n              } else {\r\n                lineGraphWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Responder Performance&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n\r\n          <hr style={{ padding: 0, margin: 0 }} /> */}\r\n          {/* <div\r\n            ref={lineGraphWidget}\r\n            style={{ display: \"block\" }}\r\n            className=\"inverse-theme2\"\r\n          >\r\n            <Reports />\r\n          </div> */}\r\n\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                onlinRespWidget.current.style.display == \"none\" ||\r\n                onlinRespWidget.current.style.display == \"\"\r\n              ) {\r\n                onlinRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                onlinRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.online.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Online Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={onlinRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.online)}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                offlinRespWidget.current.style.display == \"none\" ||\r\n                offlinRespWidget.current.style.display == \"\"\r\n              ) {\r\n                offlinRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                offlinRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.offline.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Offline Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={offlinRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.offline)}\r\n          </div>\r\n          {/* <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                unknownRespWidget.current.style.display == \"none\" ||\r\n                unknownRespWidget.current.style.display == \"\"\r\n              ) {\r\n                unknownRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                unknownRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.unknown.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              Unknown Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} /> */}\r\n          {/* <div ref={unknownRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(props.unknown)}\r\n          </div>\r\n\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                boundryRespWidget.current.style.display == \"none\" ||\r\n                boundryRespWidget.current.style.display == \"\"\r\n              ) {\r\n                boundryRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                boundryRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.outBound.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Cross Boundries&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4> */}\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={boundryRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.outBound, \"id\"))}\r\n          </div>\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                buzyRespWidget.current.style.display == \"none\" ||\r\n                buzyRespWidget.current.style.display == \"\"\r\n              ) {\r\n                buzyRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                buzyRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.buzy.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Buzy Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={buzyRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.buzy, \"id\"))}\r\n          </div>\r\n\r\n          <h4\r\n            style={{ padding: \"5px\" }}\r\n            onClick={() => {\r\n              if (\r\n                freeRespWidget.current.style.display == \"none\" ||\r\n                freeRespWidget.current.style.display == \"\"\r\n              ) {\r\n                freeRespWidget.current.style.display = \"block\";\r\n              } else {\r\n                freeRespWidget.current.style.display = \"none\";\r\n              }\r\n            }}\r\n            onDoubleClick={() =>\r\n              props.getCenter(\r\n                props.free.map((item) => {\r\n                  return { latitude: item.lat, longitude: item.lng };\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <center>\r\n              {\" \"}\r\n              Free Responders&nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n            </center>\r\n          </h4>\r\n          <hr style={{ padding: 0, margin: 0 }} />\r\n          <div ref={freeRespWidget} style={{ display: \"none\" }}>\r\n            {getTable(_.uniqBy(props.free, \"id\"))}\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n          {/* <center>\r\n            <BarChart\r\n              ylabel=\"Responders\"\r\n              width={400}\r\n              height={300}\r\n              margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\r\n              data={\r\n                // [3, 5, 1, 7, 9, 12, 4]\r\n                [\r\n                  { text: \"Resp1\", value: 500, barColor: \"red\" },\r\n                  { text: \"Resp2\", value: 300 },\r\n                  { text: \"Resp3\", value: 600 },\r\n                  { text: \"Resp4\", value: 200 },\r\n                  { text: \"Resp5\", value: 400 },\r\n                  { text: \"Resp6\", value: 700 },\r\n                  { text: \"Resp7\", value: 100 },\r\n                ]\r\n              }\r\n              // onBarClick={this.handleBarClick}\r\n            />\r\n            &nbsp; <i className=\"fa fa-caret-down\"></i>{\" \"}\r\n          </center> */}\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  offline: state.offlineResponders,\r\n  online: state.onlineResponders,\r\n  unknown: state.unknownResponders,\r\n  outBound: state.outBoundResponders,\r\n  buzy: state.buzyResponders,\r\n  free: state.freeResponders,\r\n  allGroups: state.groups,\r\n  groups: state.groups.filter((item) => item.groupId == state.logger.groupId),\r\n  groups2: state.groups.filter((item) => {\r\n    let sprvsr = item.id == state.logger.groupId;\r\n    if (sprvsr) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }),\r\n  operators: state.operators,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  // getResponders: () => GetAllResponder(dispatch),\r\n  getCenter: (data) => GetCenter(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Responders);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Logs\\Logs.jsx",["3104","3105","3106","3107","3108","3109","3110","3111","3112"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Groups\\Groups.jsx",["3113","3114","3115"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Subscriptions\\Subscriptions.jsx",["3116","3117","3118","3119"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Priorities\\Priorities.jsx",["3120","3121","3122","3123","3124"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Map\\Spot.jsx",["3125","3126"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\SuperAdmin2\\Map\\Pin.jsx",["3127","3128","3129","3130","3131","3132","3133","3134"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./map.css\";\r\nimport JavascriptTimeAgo from \"javascript-time-ago\";\r\nimport en from \"javascript-time-ago/locale/en\";\r\nimport ru from \"javascript-time-ago/locale/ru\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nJavascriptTimeAgo.addLocale(en);\r\nJavascriptTimeAgo.addLocale(ru);\r\n\r\nconst compareDate = (date1, date2, type = \"equal\") => {\r\n  let x = new Date(date1);\r\n  let y = new Date(date2);\r\n  if (type == \"greater\") {\r\n    return +x > +y;\r\n  } else if (type == \"lesser\") {\r\n    return +x < +y;\r\n  } else {\r\n    return +x == +y;\r\n  }\r\n};\r\n\r\nconst Pin = (props) => {\r\n  const pop = () => {\r\n    if (props.features.text || true) {\r\n      return (\r\n        <div\r\n          style={{\r\n            fontSize: \"12px\",\r\n            padding: \"5px\",\r\n            background: \"#fff\",\r\n            marginTop: \"-35px\",\r\n            fontWeight: \"bold\",\r\n            // display: \"inline\",\r\n            position: \"absolute\",\r\n            // top: 0,\r\n            // left: 0,\r\n          }}\r\n          className=\"text\"\r\n        >\r\n          Hello world\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{}}>\r\n        <div style={{ display: \"\", position: \"\" }}>\r\n          <div\r\n            style={{\r\n              display: \"inline\",\r\n              border: \"0px\",\r\n              width: \"100px\",\r\n              height: \"100px\",\r\n              borderRadius: \"200px\",\r\n              // background: \"#000\",\r\n              padding: \"50px\",\r\n              boxShadow:\r\n                \"0px 0px 20px \" +\r\n                (props.features.shade || \"transparent\") +\r\n                \" inset\",\r\n            }}\r\n            className={\r\n              props.features.buzz == true || props.features.buzz == \"true\"\r\n                ? \"bloomer\"\r\n                : \"inverse-bloomer\"\r\n            }\r\n          >\r\n            {props.features.showSpot || false ? (\r\n              <div\r\n                style={{\r\n                  width: \"10px\",\r\n                  height: \"10px\",\r\n                  borderRadius: \"200px\",\r\n                  background: props.features.spot || \"transparent\",\r\n                  position: \"absolute\",\r\n                  bottom: -2,\r\n                  right: -2,\r\n                  // top: 0,\r\n                  // left: 0,\r\n                }}\r\n              ></div>\r\n            ) : null}\r\n            {props.features.showTimer ? (\r\n              <div\r\n                className=\"badge\"\r\n                style={{\r\n                  // width: \"110px\",\r\n                  // // height: \"50px\",\r\n                  // padding: \"3px 7px\",\r\n                  border: \"1px solid #000\",\r\n                  borderRadius: \"200px\",\r\n                  background: \"#eee\",\r\n                  color: \"#000\",\r\n                  position: \"absolute\",\r\n                  top: -20,\r\n                  right: -60,\r\n                  fontSize: \"10px\",\r\n                  letterSpacing: \"0.1px\",\r\n                  wordSpacing: \"1px\",\r\n                  // top: 0,\r\n                  // left: 0,\r\n                }}\r\n              >\r\n                {<ReactTimeAgo date={new Date(props.features.timer)} /> || \"\"}\r\n              </div>\r\n            ) : null}\r\n            <img\r\n              src={props.pin}\r\n              alt=\"Marker Pin Icon\"\r\n              style={{ width: \"20px\", opacity: 1 }}\r\n              onClick={() => {\r\n                props.setPop(true);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {pop()} */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pin;\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\StatusBar\\StatusBar.jsx",["3135"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Map\\Map1.jsx",["3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetUsers,\r\n  GetPanics,\r\n  GetNatures,\r\n  GetPriorities,\r\n  UpdatePanics,\r\n  GetAllResponder,\r\n  changeZoom,\r\n  GetCenter,\r\n} from \"../../../../../actions/index\";\r\nimport ReactMapGL from \"react-map-gl\";\r\nimport Spot from \"./Spot\";\r\nimport { Beep1, Beep2, Beep3, Beep4 } from \"../../../../../Beeper/Beeper\";\r\nimport { ToastsStore } from \"react-toasts\";\r\nimport { getCenter } from \"geolib\";\r\n// import axios from \"axios\";\r\n// import { URL } from \"../../config/config\";\r\nimport _ from \"lodash\";\r\n\r\nconst Map = (props) => {\r\n  const count = useRef(0);\r\n  count.current++;\r\n\r\n  console.log(\"Supervisor Main Map: \" + count.current);\r\n\r\n  const KEY =\r\n    \"pk.eyJ1IjoiemFlZW10YXJyYXIzIiwiYSI6ImNrODF6N21kZDAxa2kzb255c3I4bnh5NWsifQ.CqUWmnyMb0nGVwAQYF0d6w\";\r\n  var mapType = \"\";\r\n  switch (props.type) {\r\n    case 1:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck824k9kf2i9t1iofd77sbalm\";\r\n      }\r\n      break;\r\n    case 2:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck81zu7cs2dp91iof46988lga\";\r\n      }\r\n      break;\r\n    default: {\r\n      // mapType = \"mapbox://styles/mapbox/dark-v10\";\r\n      mapType = \"mapbox://styles/mapbox/streets-v9\";\r\n      // mapType = \"mapbox://styles/mapbox/satellite-v9\";\r\n      // mapType = \"mapbox://styles/mapbox/streets-v11\";\r\n      // mapType = \"mapbox://styles/mapbox/light-v10\";\r\n    }\r\n  }\r\n  // const [lat, setLat] = useState(props.lat);\r\n  // const [lng, setLng] = useState(props.lng);\r\n  const [opr, setOpr] = useState(\"\");\r\n\r\n  const [viewport, setViewport] = useState({\r\n    latitude: props.latitude || 31,\r\n    longitude: props.longitude || 74,\r\n    width: props.width || \"100vw\",\r\n    height: props.height || \"100vh\",\r\n    zoom: props.zoomLevel,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setViewport({\r\n      ...viewport,\r\n      latitude: props.latitude,\r\n      longitude: props.longitude,\r\n      zoom: props.zoomLevel,\r\n    });\r\n  }, [props.zoomLevel, props.longitude, props.latitude]);\r\n\r\n  const [prev, setPrev] = useState(0);\r\n  const [prev2, setPrev2] = useState(0);\r\n  const [res, setRes] = useState(\"\");\r\n\r\n  const filterNature = (id) => {\r\n    let data = props.natures.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterPriority = (id) => {\r\n    let data = props.priorities.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterResponders = (id) => {\r\n    let data1 = [...props.online, ...props.offline, ...props.unknown];\r\n    let data = data1.filter((item) => {\r\n      if (item.db != null) {\r\n        return item.db.id == id;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterOperators = (id) => {\r\n    let data = props.operators.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterSupervisors = (id) => {\r\n    let data = props.supervisors.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const init = async () => {\r\n    // if (props.panic.length > prev) {\r\n    //   console.error(\"New Panic\");\r\n    // }\r\n    await props.getUsers();\r\n    await props.getPanics();\r\n    await props.getAllResponder();\r\n\r\n    // console.warning(\"Prev: \", prev);\r\n  };\r\n\r\n  let loop;\r\n\r\n  useEffect(() => {\r\n    loop = setInterval(async () => {\r\n      console.log(\"Panic Loop\");\r\n      await init();\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(loop);\r\n    };\r\n  }, []);\r\n\r\n  const handleNewPanic = async () => {\r\n    await setPrev((item) => {\r\n      let p = [...props.panics];\r\n      // ToastsStore.success(JSON.stringify(p));\r\n      if (p.length > item) {\r\n        props.getCenter(props.panics);\r\n        Beep1();\r\n        ToastsStore.info(\"New Panic Alert has Arrived \");\r\n      }\r\n      return p.length;\r\n    });\r\n  };\r\n\r\n  const handleCusts = async () => {\r\n    await setPrev2((item) => {\r\n      let p = [...props.Fcustomers];\r\n      if (p.length > item) {\r\n        Beep3();\r\n        ToastsStore.info(\"New Application has Arrived \");\r\n      }\r\n      return p.length;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCusts();\r\n    return;\r\n  }, [props.Fcustomers]);\r\n\r\n  useEffect(() => {\r\n    // Beep1();\r\n    handleNewPanic();\r\n    return;\r\n  }, [props.panics]);\r\n\r\n  useEffect(() => {\r\n    // console.error(\"Prev: \", prev);\r\n    return;\r\n  }, [prev]);\r\n\r\n  // const IncreaseZoom = async () => {\r\n  //   if (viewport.zoom < 30) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom + 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // const DeccreaseZoom = async () => {\r\n  //   if (viewport.zoom > 5) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom - 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // var zoomer = false;\r\n  // const center = async (data) => {\r\n  //   if (zoomer == false) {\r\n  //     var lists = [];\r\n  //     for (let i = 0; i < data.length; i++) {\r\n  //       await lists.push({\r\n  //         latitude: Number(data[i].lat),\r\n  //         longitude: Number(data[i].lng),\r\n  //       });\r\n  //     }\r\n  //     if (lists.length > 0) {\r\n  //       console.log(\"Access: \", lists);\r\n  //       var url = URL + \"/panics/getCenter\";\r\n  //       axios\r\n  //         .post(url, { data: lists })\r\n  //         .then(async (response) => {\r\n  //           var info = response.data.result.data;\r\n  //           console.log(\"Access2: \", info);\r\n  //           await setViewport({\r\n  //             latitude: info.latitude,\r\n  //             longitude: info.longitude,\r\n  //             width: viewport.width,\r\n  //             height: viewport.height,\r\n  //             zoom: viewport.zoom,\r\n  //           });\r\n  //         })\r\n  //         .catch((e) => {\r\n  //           console.log(e);\r\n  //         });\r\n  //     }\r\n  //     zoomer = true;\r\n  //   }\r\n  // };\r\n\r\n  // const [list, setList] = useState([]);\r\n  // const [list2, setList2] = useState([]);\r\n  // const [list3, setList3] = useState([]);\r\n  // const [list4, setList4] = useState([]);\r\n  // const [list5, setList5] = useState([]);\r\n\r\n  const getSpots = (\r\n    data,\r\n    features,\r\n    pin = \"./../../../pin/8.png\",\r\n    type = \"\"\r\n  ) => {\r\n    let icon = pin;\r\n    if (type == \"responder\") {\r\n      return data.map((p) => {\r\n        return (\r\n          <Spot\r\n            key={p.id}\r\n            pin={icon}\r\n            lat={Number(p.lat)}\r\n            lng={Number(p.lng)}\r\n            features={features}\r\n            content={\r\n              <div style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}>\r\n                <p>\r\n                  <b> Name: </b>\r\n                  {p.db == null\r\n                    ? null\r\n                    : p.db.firstname + \" \" + p.db.lastname}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <b> Traccar: </b> {p.name || \"Anonymous\"}{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b> Contact: </b>\r\n                  {p.db == null ? p.contact || \"\" : p.db.contact}\r\n                </p>\r\n                <p>\r\n                  <b> Email: </b>\r\n                  {p.db == null ? null : p.db.email || \"\"}\r\n                </p>\r\n                <p>\r\n                  <b> Address: </b>\r\n                  {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                  <span style={{ lineHeight: 1 }}>\r\n                    {p.db == null ? null : p.db.address || \"\"}\r\n                  </span>\r\n                </p>\r\n                {/* <p>\r\n                  <b> Nature: </b>\r\n                  {filterNature(p.natureId) == null\r\n                    ? null\r\n                    : filterNature(p.natureId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Priority: </b>\r\n                  {filterPriority(p.priorityId) == null\r\n                    ? null\r\n                    : filterPriority(p.priorityId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Responder: </b>\r\n                 \r\n                  {filterResponders(p.responderInvolved || 0) == null\r\n                    ? null\r\n                    : filterResponders(p.responderInvolved).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Operator: </b>\r\n                  \r\n                  {filterOperators(p.operatorInvolved || 0) == null\r\n                    ? null\r\n                    : filterOperators(p.operatorInvolved).firstname}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Supervisor: </b>\r\n                 \r\n                  {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                    ? null\r\n                    : filterSupervisors(p.supervisorInvolved).firstname}\r\n                </p> */}\r\n                {/* <div>{popButton(p)}</div> */}\r\n              </div>\r\n            }\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      return data.map((p) => {\r\n        if (p.isClose == true) {\r\n          return null;\r\n        } else {\r\n          return (\r\n            <Spot\r\n              key={p.id}\r\n              pin={icon}\r\n              lat={Number(p.lat)}\r\n              lng={Number(p.lng)}\r\n              features={{ ...features, timer: new Date(p.createdAt) }}\r\n              content={\r\n                <div\r\n                  style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}\r\n                >\r\n                  <p>\r\n                    <b> Contact: </b>\r\n                    {p.contact}\r\n                  </p>\r\n\r\n                  <p>\r\n                    <b> Address: </b>\r\n                    {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                    <span style={{ lineHeight: 1 }}>{p.address || \"\"}</span>\r\n                  </p>\r\n                  <p>\r\n                    <b> Nature: </b>\r\n                    {filterNature(p.natureId) == null\r\n                      ? null\r\n                      : filterNature(p.natureId).name}\r\n                  </p>\r\n                  <p>\r\n                    <b> Priority: </b>\r\n                    {filterPriority(p.priorityId) == null\r\n                      ? null\r\n                      : filterPriority(p.priorityId).name}\r\n                  </p>\r\n                  <p style={{ lineHeight: \"15px\" }}>\r\n                    <b> Responder: </b>\r\n                    {/* {p.responderInvolved} */}\r\n                    {filterResponders(p.responderInvolved || 0) == null\r\n                      ? null\r\n                      : filterResponders(p.responderInvolved).name}{\" \"}\r\n                    &nbsp; (11.3 Km Away)\r\n                  </p>\r\n                  <p>\r\n                    <b> Operator: </b>\r\n                    {/* {p.operatorInvolved} */}\r\n                    {filterOperators(p.operatorInvolved || 0) == null\r\n                      ? null\r\n                      : filterOperators(p.operatorInvolved).firstname}\r\n                  </p>\r\n                  <p>\r\n                    <b> Supervisor: </b>\r\n                    {/* {p.supervisorInvolved} */}\r\n                    {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                      ? null\r\n                      : filterSupervisors(p.supervisorInvolved).firstname}\r\n                  </p>\r\n                  {p.customerRating && (\r\n                    <>\r\n                      <p>\r\n                        <b> Customer rating: </b> <br />\r\n                        <br />\r\n                        {getRating(p.customerRating)}\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                  {/* <div>{getOper(p.operatorInvolved, p)}</div> */}\r\n                  {/* <br />\r\n                  <div>\r\n                    {p.statusId == 5 ? (\r\n                      <button\r\n                        className=\"btn btn-success btn-xs btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.updatePanics(p.id, {\r\n                            statusId: 6,\r\n                          }); // Bilal\r\n                          // init();\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <i className=\"fa fa-check\"></i>\r\n                          &nbsp;\r\n                        </span>\r\n                        Resolve\r\n                      </button>\r\n                    ) : null}\r\n                  </div> */}\r\n                  {/* <br />\r\n                  <div>\r\n                    {p.statusId == 1 ||\r\n                    p.statusId == 2 ||\r\n                    p.statusId == 3 ||\r\n                    p.statusId == 7 ||\r\n                    p.statusId == 6 ||\r\n                    p.statusId == 8 ||\r\n                    p.statusId == 4 ||\r\n                    p.statusId == 5 ? (\r\n                      <button\r\n                        className=\"btn btn-xs btn-danger btn-block\"\r\n                        onClick={async (e) => {\r\n                          e.preventDefault();\r\n                          await props.updatePanics(p.id, {\r\n                            isClose: true,\r\n                          }); // Bilal\r\n                          // init();\r\n                          Beep2();\r\n                        }}\r\n                      >\r\n                        Close\r\n                      </button>\r\n                    ) : null}\r\n                  </div> */}\r\n                  <div>{p.isCancelled == 1 ? <h3> Cancelled </h3> : null}</div>\r\n                </div>\r\n              }\r\n            />\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getOper = (data, item) => {\r\n    if (data) {\r\n      return null;\r\n    } else {\r\n      if (\r\n        item.statusId == 1 &&\r\n        (item.operatorInvolved == null || item.operatorInvolved == 0)\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={opr}\r\n              onChange={(e) => setOpr(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getOperators()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-info btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                await props.updatePanics(item.id, {\r\n                  operatorInvolved: opr,\r\n                  // statusId: 2,\r\n                }); // Bilal\r\n                // init();\r\n                setOpr(\"\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Set Operator{\" \"}\r\n            </button>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                await props.updatePanics(item.id, {\r\n                  supervisorInvolved: props.user.id,\r\n                  statusId: 2,\r\n                }); // Bilal\r\n                init();\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Self Confirm\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (item.statusId == 1) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.updatePanics(item.id, {\r\n                operatorInvolved: props.user.id,\r\n                statusId: 2,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Confirm\r\n          </button>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.operatorInvolved != 0 &&\r\n        item.operatorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getResponders2()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                // alert(\"ok\");\r\n                await props.updatePanics(item.id, {\r\n                  responderInvolved: Number(res),\r\n                  statusId: 3,\r\n                }); // Bilal\r\n                await setRes(\"\");\r\n                // await init();\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.supervisorInvolved != 0 &&\r\n        item.supervisorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getResponders2()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                let ress = [\r\n                  ...props.online,\r\n                  ...props.offline,\r\n                  ...props.unknown,\r\n                ];\r\n                // console.error(\"Res: \", ress);\r\n                let Data = ress.filter((it) => it.id == Number(res));\r\n                console.error(Data);\r\n                let abc = Data[0];\r\n\r\n                if (abc.db == null) {\r\n                  // alert(\"Responder is not available in the Database: \" + res);\r\n                } else {\r\n                  e.preventDefault();\r\n                  // console.error({ res, id: item.id });\r\n                  await props.updatePanics(item.id, {\r\n                    responderInvolved: abc.db.id,\r\n                    statusId: 3,\r\n                  }); // Bilal\r\n                  await setRes(\"\");\r\n                  // await init();\r\n                }\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 4 &&\r\n        item.responderInvolved != 0 &&\r\n        item.responderInvolved != null\r\n      ) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.updatePanics(item.id, {\r\n                statusId: props.user.roleId == 3 ? 5 : 6,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Resolve\r\n          </button>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  // const content = (p) => {\r\n  //   return (\r\n\r\n  //   );\r\n  // };\r\n\r\n  const getRating = (rate) => {\r\n    if (rate == 0) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 1) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 2) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 3) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else if (rate == 4) {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"#333\" }}></i>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n          <i className=\"fa fa-star\" style={{ color: \"gold\" }}></i>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getOperators = () => {\r\n    return props.operators.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}>\r\n            {\" \"}\r\n            {item.firstname + \" \" + item.lastname}{\" \"}\r\n          </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const popButton = async (item) => {\r\n    return \"false\";\r\n  };\r\n\r\n  const getResponders2 = () => {\r\n    let data = [...props.buzy, ...props.online];\r\n    let data2 = _.uniq(data);\r\n    return data2.map((item, index) => {\r\n      if (item.db || true) {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <option value={item.id}>{item.name || \"\"}</option>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  // const goPoint = async (pointer, set, list, data2 = null, cb = null) => {\r\n  //   if (pointer != null) {\r\n  //     await pointer(async (data) => {\r\n  //       if (data.length > list.length) {\r\n  //         await set([...data]);\r\n  //         var centers = [];\r\n  //         if (data2 == null) {\r\n  //           centers = [...data];\r\n  //         } else {\r\n  //           centers = [...data, ...data2];\r\n  //         }\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       } else {\r\n  //         var centers = [...data];\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       }\r\n  //     });\r\n  //   } else {\r\n  //     if (data2 != null && data2.length > 0) {\r\n  //       var centers = [...data2];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     } else {\r\n  //       var centers = [];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   setInterval(async () => {\r\n  //     if (props.getPoints != null) {\r\n  //       await goPoint(props.getPoints, setList, list, null, async (r) => {\r\n  //         console.log(\"Round 1: \", r);\r\n  //         if (props.getPoints2 != null) {\r\n  //           await goPoint(props.getPoints2, setList2, list2, r, async (r2) => {\r\n  //             console.log(\"Round 2: \", r2);\r\n  //             if (props.getPoints3 != null) {\r\n  //               await goPoint(props.getPoints3, setList3, list3, r2, null);\r\n  //             }\r\n  //           });\r\n  //         }\r\n  //       });\r\n  //     } else if (props.getPoints2 != null) {\r\n  //       goPoint(props.getPoints2, setList2, list2, null, null);\r\n  //     } else if (props.getPoints3 != null) {\r\n  //       goPoint(props.getPoints3, setList3, list3, null, null);\r\n  //     }\r\n  //   }, 1000);\r\n  // }, [props.changer, \"text\"]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        {/* <div style={{ position: \"absolute\", top: 50, right: 10, zIndex: 10 }}> */}\r\n        {/* <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              IncreaseZoom();\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              DeccreaseZoom();\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n        </div> */}\r\n        <ReactMapGL\r\n          {...viewport}\r\n          // latitude={lat}\r\n          // longitude={lng}\r\n          mapboxApiAccessToken={KEY}\r\n          mapStyle={mapType}\r\n          onViewportChange={(viewport) => {\r\n            setViewport(viewport);\r\n          }}\r\n        >\r\n          {getSpots(\r\n            props.inQueryPanics,\r\n            {\r\n              shade: \"red\",\r\n              spot: \"green\",\r\n              showSpot: false,\r\n              buzz: true,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/13.png\")\r\n          )}\r\n          {getSpots(\r\n            props.confirmedByOperatorPanics,\r\n            {\r\n              shade: \"blue\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/8.png\")\r\n          )}\r\n          {getSpots(\r\n            props.assignedToResponderPanics,\r\n            {\r\n              shade: \"yellow\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/8.png\")\r\n          )}\r\n          {getSpots(\r\n            props.confirmedByResponderPanics,\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/10.png\")\r\n          )}\r\n          {getSpots(\r\n            props.resolvedByResponderPanics,\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/15.png\")\r\n          )}\r\n          {getSpots(\r\n            props.resolvedByOperatorPanics,\r\n            {\r\n              shade: \"green\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/17.png\")\r\n          )}\r\n          {getSpots(\r\n            props.closedBySupervisorPanics,\r\n            {\r\n              shade: \"green\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/18.png\")\r\n          )}\r\n          {getSpots(\r\n            props.closedByCustomerPanics,\r\n            {\r\n              shade: \"black\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/18.png\")\r\n          )}\r\n          {getSpots(\r\n            props.online,\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"darkgreen\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {getSpots(\r\n            props.offline,\r\n            {\r\n              shade: \"pink\",\r\n              spot: \"red\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {getSpots(\r\n            props.unknown,\r\n            {\r\n              shade: \"yellow\",\r\n              spot: \"orange\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {/* {getSpots(list2, \"/images/pin2.png\")} */}\r\n          {/* {getSpots(list3, \"/images/pin3.png\")} */}\r\n        </ReactMapGL>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  customers: state.customers,\r\n  Fcustomers: state.customers.filter((item) => item.isSubmitted == true),\r\n  natures: state.natures,\r\n  priorities: state.priorities,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n  buzy: state.buzyResponders,\r\n  panics: state.panics,\r\n  operators: state.operators,\r\n  supervisors: state.supervisors,\r\n  inQueryPanics: state.inQueryPanics,\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics,\r\n  assignedToResponderPanics: state.assignedToResponderPanics,\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics,\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics,\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics,\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics,\r\n  closedByCustomerPanics: state.closedByCustomerPanics,\r\n  zoomLevel: state.zoomLevel,\r\n  latitude: state.latitude,\r\n  longitude: state.longitude,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getPanics: () => GetPanics(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  getNatures: () => GetNatures(dispatch),\r\n  getCenter: (coords) => GetCenter(dispatch, coords),\r\n  getAllResponder: () => GetAllResponder(dispatch),\r\n  getPriorities: () => GetPriorities(dispatch),\r\n  updatePanics: (id, data) => UpdatePanics(dispatch, id, data),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Supervisor\\Create\\Create.jsx",["3174","3175","3176","3177","3178"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Supervisor\\List\\List.jsx",["3179","3180","3181","3182"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Operator\\Create\\Create.jsx",["3183","3184","3185","3186","3187"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Operator\\List\\List.jsx",["3188","3189","3190","3191","3192"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Geofence\\Map\\Map.jsx",["3193","3194","3195","3196","3197","3198","3199","3200","3201","3202"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Admin\\Map\\Pin.jsx",["3203","3204","3205","3206","3207","3208","3209","3210"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Subscriptions\\Create\\Create.jsx",["3211","3212","3213","3214","3215","3216"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Subscriptions\\List\\List.jsx",["3217","3218","3219","3220"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Groups\\Create\\Create.jsx",["3221","3222","3223","3224"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetTraccarGroups,\r\n  CreateTraccarGroups,\r\n  UpdateTraccarGroups,\r\n  UserLogout,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst Create = (props) => {\r\n  console.log(\"Supervisor - Group Create\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [groupId, setGroupId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let data = props.groups.filter((item) => item.id == props.id);\r\n    data = data[0] || null;\r\n    if (data != null) {\r\n      setName(data.name);\r\n      setGroupId(data.groupId);\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  const getGroups = () => {\r\n    return props.groups.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const Empty = () => {\r\n    if (props.id != \"\") {\r\n      props.setId(\"\");\r\n    }\r\n    setName(\"\");\r\n    setGroupId(\"\");\r\n  };\r\n\r\n  const save = async () => {\r\n    if (props.id != \"\") {\r\n      await props.updateTraccarGroups(props.id, { name, groupId });\r\n    } else {\r\n      await props.createTraccarGroups({ name, groupId });\r\n    }\r\n    setTimeout(() => {\r\n      props.getTraccarGroups();\r\n      Empty();\r\n      props.setPage(\"main\");\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          value={groupId}\r\n          onChange={(e) => setGroupId(e.target.value)}\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {getGroups()}\r\n        </select>\r\n        <br />\r\n        <div>\r\n          <button className=\"btn btn-primary pull-right\" onClick={save}>\r\n            Save\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n  createTraccarGroups: (data) => CreateTraccarGroups(dispatch, data),\r\n  updateTraccarGroups: (id, data) => UpdateTraccarGroups(dispatch, id, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Groups\\List\\List.jsx",["3225","3226","3227"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserLogout } from \"../../../../../../actions/index\";\r\nimport {\r\n  GetTraccarGroups,\r\n  DelTraccarGroups,\r\n} from \"../../../../../../actions/index\";\r\n\r\nconst List = (props) => {\r\n  console.log(\"Supervisor - Group List\");\r\n\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  const del = async (id) => {\r\n    await props.delTraccarGroups(id);\r\n    setTimeout(() => {\r\n      props.getTraccarGroups();\r\n    }, 100);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    props.setId(id);\r\n    props.setPage(\"add\");\r\n  };\r\n\r\n  const getTableData = () => {\r\n    return props.groups.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <tr>\r\n            <td> {item.id} </td>\r\n            <td> {item.name} </td>\r\n            <td> {item.groupId} </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => edit(item.id)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-xs btn-primary\"\r\n                onClick={() => del(item.id)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTable = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ height: \"400px\", overflow: \"auto\" }}>\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <th> Id </th>\r\n                <th> Name </th>\r\n                <th> Group Id </th>\r\n                <th> - </th>\r\n                <th> - </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getTableData()}</tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return <>{getTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  groups: state.groups,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => UserLogout(dispatch),\r\n  getTraccarGroups: () => GetTraccarGroups(dispatch),\r\n  delTraccarGroups: (id) => DelTraccarGroups(dispatch, id),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Reports\\Reports.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Users\\Create\\Create.jsx",["3228","3229","3230","3231"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Users\\List\\List.jsx",["3232","3233","3234"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Operator\\Create\\Create.jsx",["3235","3236","3237","3238","3239"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Supervisor\\Create\\Create.jsx",["3240","3241","3242","3243","3244"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\ResponderView\\Create\\Create.jsx",["3245","3246","3247","3248","3249","3250","3251","3252"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Users\\Create\\Create.jsx",["3253","3254","3255","3256"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Users\\List\\List.jsx",["3257","3258","3259"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\StatusBar\\StatusBar.jsx",["3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Reports from \"../Reports/Reports\";\r\n\r\nconst StatusBar = (props) => {\r\n  console.log(\"Supervisor - Status Bar\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getSelection = () => {\r\n    if (open) {\r\n      return (\r\n        <>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">{props.panics.length} </span>\r\n            &nbsp; Panics\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.cancelledPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Cancelled Panics\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.confirmedByOperatorPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Confirmed By Operator\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.assignedToResponderPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Assigned To Responder\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.confirmedByResponderPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Confirmed By Responder\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.resolvedByResponderPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Resolved By Responder\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.resolvedByOperatorPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Resolved By Operator\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.closedBySupervisorPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Closed By Supervisor\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">\r\n              {props.closedByCustomerPanics.length}{\" \"}\r\n            </span>\r\n            &nbsp; Closed By Customer\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">{props.offline.length} </span>\r\n            &nbsp; Offline Responders\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">{props.unknown.length} </span>\r\n            &nbsp; Unknown Responders\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-6\">\r\n            <span className=\"badge inverse-theme\">{props.online.length} </span>\r\n            &nbsp; Online Responders:\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <span>\r\n            <center>\r\n              <i className=\"fa fa-arrow-down\"></i>\r\n            </center>\r\n          </span>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  return null;\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid theme\">\r\n        <div className=\"\" style={{ padding: \"10px\" }}>\r\n          <div\r\n            className=\"row\"\r\n            style={{\r\n              borderLeft: \"1px solid #fff\",\r\n              borderRight: \"1px solid #fff\",\r\n              padding: \"0px 0px 0px 0px\",\r\n            }}\r\n            onClick={() => setOpen((item) => !item)}\r\n          >\r\n            {getSelection()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  // natures: state.natures,\r\n  // priorities: state.priorities,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n  cancelledPanics: state.panics.filter(\r\n    (item) =>\r\n      item.operatorInvolved == state.logger.id && item.isCancelled == true\r\n  ),\r\n  panics: state.panics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  inQueryPanics: state.inQueryPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  assignedToResponderPanics: state.assignedToResponderPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  closedByCustomerPanics: state.closedByCustomerPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusBar);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Map\\Map1.jsx",["3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3296","3297","3298","3299","3300","3301","3302","3303","3304","3305","3306","3307","3308","3309","3310","3311","3312","3313","3314","3315","3316","3317"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  GetUsers,\r\n  GetPanics,\r\n  GetNatures,\r\n  GetPriorities,\r\n  UpdatePanics,\r\n  OperatorAcceptPanic_UpdatePanics,\r\n  OperatorAssignPanicToRes_UpdatePanics,\r\n  OperatorResolvePanic_UpdatePanics,\r\n  ClosePanic_UpdatePanics,\r\n  SolvePanic_UpdatePanics,\r\n  GetAllResponder,\r\n  changeZoom,\r\n  GetCenter,\r\n} from \"../../../../../actions/index\";\r\nimport ReactMapGL from \"react-map-gl\";\r\nimport Spot from \"./Spot\";\r\nimport { Beep1, Beep2, Beep3, Beep4 } from \"../../../../../Beeper/Beeper\";\r\nimport { ToastsStore } from \"react-toasts\";\r\nimport { getCenter } from \"geolib\";\r\n// import axios from \"axios\";\r\n// import { URL } from \"../../config/config\";\r\n\r\nconst Map = (props) => {\r\n  const count = useRef(0);\r\n  count.current++;\r\n\r\n  console.log(\"Supervisor Main Map: \" + count.current);\r\n\r\n  const KEY =\r\n    \"pk.eyJ1IjoiemFlZW10YXJyYXIzIiwiYSI6ImNrODF6N21kZDAxa2kzb255c3I4bnh5NWsifQ.CqUWmnyMb0nGVwAQYF0d6w\";\r\n  var mapType = \"\";\r\n  switch (props.type) {\r\n    case 1:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck824k9kf2i9t1iofd77sbalm\";\r\n      }\r\n      break;\r\n    case 2:\r\n      {\r\n        mapType = \"mapbox://styles/zaeemtarrar3/ck81zu7cs2dp91iof46988lga\";\r\n      }\r\n      break;\r\n    default: {\r\n      mapType = \"mapbox://styles/mapbox/streets-v9\";\r\n    }\r\n  }\r\n  // const [lat, setLat] = useState(props.lat);\r\n  // const [lng, setLng] = useState(props.lng);\r\n  const [opr, setOpr] = useState(\"\");\r\n\r\n  const [viewport, setViewport] = useState({\r\n    latitude: props.latitude || 31,\r\n    longitude: props.longitude || 74,\r\n    width: props.width || \"100vw\",\r\n    height: props.height || \"100vh\",\r\n    zoom: props.zoomLevel,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setViewport({\r\n      ...viewport,\r\n      latitude: props.latitude,\r\n      longitude: props.longitude,\r\n      zoom: props.zoomLevel,\r\n    });\r\n  }, [props.zoomLevel, props.longitude, props.latitude]);\r\n\r\n  const [prev, setPrev] = useState(0);\r\n  const [res, setRes] = useState(\"\");\r\n\r\n  const filterNature = (id) => {\r\n    let data = props.natures.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterPriority = (id) => {\r\n    let data = props.priorities.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterResponders = (id) => {\r\n    let data1 = [...props.online, ...props.offline, ...props.unknown];\r\n    let data = data1.filter((item) => {\r\n      if (item.db != null) {\r\n        return item.db.id == id;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterOperators = (id) => {\r\n    let data = props.operators.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filterSupervisors = (id) => {\r\n    let data = props.supervisors.filter((item) => item.id == id);\r\n    if (data.length > 0) {\r\n      return data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const init = async () => {\r\n    // if (props.panic.length > prev) {\r\n    //   console.error(\"New Panic\");\r\n    // }\r\n    await props.getUsers();\r\n    await props.getPanics();\r\n    await props.getAllResponder();\r\n\r\n    // console.warning(\"Prev: \", prev);\r\n  };\r\n\r\n  let loop;\r\n\r\n  useEffect(() => {\r\n    loop = setInterval(async () => {\r\n      console.log(\"Panic Loop\");\r\n      await init();\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(loop);\r\n    };\r\n  }, []);\r\n\r\n  const handleNewPanic = async () => {\r\n    await setPrev((item) => {\r\n      let p = [...props.panics];\r\n      // ToastsStore.success(JSON.stringify(p));\r\n      if (p.length > item) {\r\n        Beep1();\r\n        props.getCenter(props.panics);\r\n        ToastsStore.info(\"New Panic Alert has Arrived \");\r\n      }\r\n      return p.length;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Beep1();\r\n    handleNewPanic();\r\n    return;\r\n  }, [props.panics]);\r\n\r\n  useEffect(() => {\r\n    // console.error(\"Prev: \", prev);\r\n    return;\r\n  }, [prev]);\r\n\r\n  // const IncreaseZoom = async () => {\r\n  //   if (viewport.zoom < 30) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom + 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // const DeccreaseZoom = async () => {\r\n  //   if (viewport.zoom > 5) {\r\n  //     await setViewport({\r\n  //       latitude: viewport.latitude,\r\n  //       longitude: viewport.longitude,\r\n  //       width: viewport.width,\r\n  //       height: viewport.height,\r\n  //       zoom: viewport.zoom - 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // var zoomer = false;\r\n  // const center = async (data) => {\r\n  //   if (zoomer == false) {\r\n  //     var lists = [];\r\n  //     for (let i = 0; i < data.length; i++) {\r\n  //       await lists.push({\r\n  //         latitude: Number(data[i].lat),\r\n  //         longitude: Number(data[i].lng),\r\n  //       });\r\n  //     }\r\n  //     if (lists.length > 0) {\r\n  //       console.log(\"Access: \", lists);\r\n  //       var url = URL + \"/panics/getCenter\";\r\n  //       axios\r\n  //         .post(url, { data: lists })\r\n  //         .then(async (response) => {\r\n  //           var info = response.data.result.data;\r\n  //           console.log(\"Access2: \", info);\r\n  //           await setViewport({\r\n  //             latitude: info.latitude,\r\n  //             longitude: info.longitude,\r\n  //             width: viewport.width,\r\n  //             height: viewport.height,\r\n  //             zoom: viewport.zoom,\r\n  //           });\r\n  //         })\r\n  //         .catch((e) => {\r\n  //           console.log(e);\r\n  //         });\r\n  //     }\r\n  //     zoomer = true;\r\n  //   }\r\n  // };\r\n\r\n  // const [list, setList] = useState([]);\r\n  // const [list2, setList2] = useState([]);\r\n  // const [list3, setList3] = useState([]);\r\n  // const [list4, setList4] = useState([]);\r\n  // const [list5, setList5] = useState([]);\r\n\r\n  const getSpots = (\r\n    data,\r\n    features,\r\n    pin = \"./../../../pin/8.png\",\r\n    type = \"\"\r\n  ) => {\r\n    let icon = pin;\r\n    if (type == \"responder\") {\r\n      return data.map((p) => {\r\n        return (\r\n          <Spot\r\n            key={p.id}\r\n            pin={icon}\r\n            lat={Number(p.lat)}\r\n            lng={Number(p.lng)}\r\n            features={features}\r\n            content={\r\n              <div style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}>\r\n                <p>\r\n                  <b> Name: </b>\r\n                  {p.db == null\r\n                    ? null\r\n                    : p.db.firstname + \" \" + p.db.lastname}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <b> Traccar: </b> {p.name || \"Anonymous\"}{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b> Contact: </b>\r\n                  {p.db == null ? p.contact || \"\" : p.db.contact}\r\n                </p>\r\n                <p>\r\n                  <b> Email: </b>\r\n                  {p.db == null ? null : p.db.email || \"\"}\r\n                </p>\r\n                <p>\r\n                  <b> Address: </b>\r\n                  {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                  <span style={{ lineHeight: 1 }}>\r\n                    {p.db == null ? null : p.db.address || \"\"}\r\n                  </span>\r\n                </p>\r\n                {/* <p>\r\n                  <b> Nature: </b>\r\n                  {filterNature(p.natureId) == null\r\n                    ? null\r\n                    : filterNature(p.natureId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Priority: </b>\r\n                  {filterPriority(p.priorityId) == null\r\n                    ? null\r\n                    : filterPriority(p.priorityId).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Responder: </b>\r\n                 \r\n                  {filterResponders(p.responderInvolved || 0) == null\r\n                    ? null\r\n                    : filterResponders(p.responderInvolved).name}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Operator: </b>\r\n                  \r\n                  {filterOperators(p.operatorInvolved || 0) == null\r\n                    ? null\r\n                    : filterOperators(p.operatorInvolved).firstname}\r\n                </p> */}\r\n                {/* <p>\r\n                  <b> Supervisor: </b>\r\n                 \r\n                  {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                    ? null\r\n                    : filterSupervisors(p.supervisorInvolved).firstname}\r\n                </p> */}\r\n                {/* <div>{popButton(p)}</div> */}\r\n              </div>\r\n            }\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      return data.map((p) => {\r\n        return (\r\n          <Spot\r\n            key={p.id}\r\n            pin={icon}\r\n            lat={Number(p.lat)}\r\n            lng={Number(p.lng)}\r\n            features={{ ...features, timer: new Date(p.createdAt) }}\r\n            content={\r\n              <div style={{ marginTop: \"10px\", lineHeight: \"8px\", zIndex: 15 }}>\r\n                <p>\r\n                  <b> Name: </b>\r\n                </p>\r\n                <p>\r\n                  <b> Contact: </b>\r\n                  {p.contact}\r\n                </p>\r\n                <p>\r\n                  <b> Email: </b>\r\n                  {p.email || \"\"}\r\n                </p>\r\n                <p>\r\n                  <b> Address: </b>\r\n                  {/* { {p.house || \"\"} {p.street || \"\"} {p.town || \"\"} {p.city || \"\"} } */}\r\n                  <span style={{ lineHeight: 1 }}>{p.address || \"\"}</span>\r\n                </p>\r\n                <p>\r\n                  <b> Nature: </b>\r\n                  {filterNature(p.natureId) == null\r\n                    ? null\r\n                    : filterNature(p.natureId).name}\r\n                </p>\r\n                <p>\r\n                  <b> Priority: </b>\r\n                  {filterPriority(p.priorityId) == null\r\n                    ? null\r\n                    : filterPriority(p.priorityId).name}\r\n                </p>\r\n                <p style={{ lineHeight: \"15px\" }}>\r\n                  <b> Responder: </b>\r\n                  {/* {p.responderInvolved} */}\r\n                  {filterResponders(p.responderInvolved || 0) == null\r\n                    ? null\r\n                    : filterResponders(p.responderInvolved).name}\r\n                </p>\r\n                <p>\r\n                  <b> Operator: </b>\r\n                  {/* {p.operatorInvolved} */}\r\n                  {filterOperators(p.operatorInvolved || 0) == null\r\n                    ? null\r\n                    : filterOperators(p.operatorInvolved).firstname}\r\n                </p>\r\n                <p>\r\n                  <b> Supervisor: </b>\r\n                  {/* {p.supervisorInvolved} */}\r\n                  {filterSupervisors(p.supervisorInvolved || 0) == null\r\n                    ? null\r\n                    : filterSupervisors(p.supervisorInvolved).firstname}\r\n                </p>\r\n                {p.customerRating && (\r\n                  <>\r\n                    <p>\r\n                      <b> Customer rating: </b>\r\n                      {p.customerRating == 0 ? \"0\" : p.customerRating}\r\n                    </p>\r\n                  </>\r\n                )}\r\n                <div>{getOper(p.operatorInvolved, p)}</div>\r\n                <br />\r\n                <div>\r\n                  {p.statusId == 1 ||\r\n                  p.statusId == 2 ||\r\n                  p.statusId == 3 ||\r\n                  p.statusId == 7 ||\r\n                  p.statusId == 4 ||\r\n                  p.statusId == 5 ? (\r\n                    <button\r\n                      className=\"btn btn-xs btn-danger btn-block\"\r\n                      onClick={async (e) => {\r\n                        e.preventDefault();\r\n                        await props.closePanic(p.id, {\r\n                          userId: props.user.id,\r\n                        }); // Bilal\r\n                        // init();\r\n                        Beep2();\r\n                      }}\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  ) : null}\r\n                </div>\r\n                <div>{p.isCancelled == 1 ? <h3> Cancelled </h3> : null}</div>\r\n              </div>\r\n            }\r\n          />\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const getOper = (data, item) => {\r\n    if (!data) {\r\n      return null;\r\n    } else {\r\n      if (\r\n        item.statusId == 1 &&\r\n        item.operatorInvolved == null &&\r\n        item.operatorInvolved == 0\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={opr}\r\n              onChange={(e) => setOpr(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getOperators()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-info btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                await props.confirmedByOperatorPanics(item.id, {\r\n                  operatorInvolved: opr,\r\n                  // statusId: 2,\r\n                }); // Bilal\r\n                // init();\r\n                setOpr(\"\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Set Operator{\" \"}\r\n            </button>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                await props.updatePanics(item.id, {\r\n                  supervisorInvolved: props.user.id,\r\n                  statusId: 2,\r\n                }); // Bilal\r\n                init();\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Self Confirm\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (item.statusId == 1) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.operatorAcceptPanic(item.id, {\r\n                id: item,\r\n                // operatorInvolved: props.user.id,\r\n                // statusId: 2,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Confirm\r\n          </button>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.operatorInvolved != 0 &&\r\n        item.operatorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getResponders2()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                let ress = [\r\n                  ...props.online,\r\n                  ...props.offline,\r\n                  ...props.unknown,\r\n                ];\r\n                // console.error(\"Res: \", ress);\r\n                let Data = ress.filter((it) => it.id == Number(res));\r\n                console.error(Data);\r\n                let abc = Data[0];\r\n\r\n                if (abc.db == null) {\r\n                  alert(\"Responder is not available in the Database: \" + res);\r\n                } else {\r\n                  e.preventDefault();\r\n                  // console.error({ res, id: item.id });\r\n                  await props.operatorAssignPanicToRes(item.id, {\r\n                    contact: item.contact,\r\n                    responderInvolved: abc.db.id,\r\n                    // statusId: 3,\r\n                  }); // Bilal\r\n                  await setRes(\"\");\r\n                  // await init();\r\n                }\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 2 &&\r\n        item.supervisorInvolved != 0 &&\r\n        item.supervisorInvolved != null\r\n      ) {\r\n        return (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              value={res}\r\n              onChange={(e) => setRes(e.target.value)}\r\n            >\r\n              <option value=\"\"> None </option>\r\n              {getResponders2()}\r\n            </select>\r\n            <br />\r\n            <button\r\n              className=\"btn btn-primary btn-xs btn-block\"\r\n              onClick={async (e) => {\r\n                let ress = [\r\n                  ...props.online,\r\n                  ...props.offline,\r\n                  ...props.unknown,\r\n                ];\r\n                // console.error(\"Res: \", ress);\r\n                let Data = ress.filter((it) => it.id == Number(res));\r\n                console.error(Data);\r\n                let abc = Data[0];\r\n\r\n                if (abc.db == null) {\r\n                  // alert(\"Responder is not available in the Database: \" + res);\r\n                } else {\r\n                  e.preventDefault();\r\n                  // console.error({ res, id: item.id });\r\n                  await props.updatePanics(item.id, {\r\n                    responderInvolved: abc.db.id,\r\n                    statusId: 3,\r\n                  }); // Bilal\r\n                  await setRes(\"\");\r\n                  // await init();\r\n                }\r\n              }}\r\n            >\r\n              <span>\r\n                <i className=\"fa fa-check\"></i>\r\n                &nbsp;\r\n              </span>\r\n              Assign\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        item.statusId == 4 &&\r\n        item.responderInvolved != 0 &&\r\n        item.responderInvolved != null\r\n      ) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-primary btn-xs btn-block\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              await props.operatorResolvePanic(item.id, {\r\n                // statusId: props.user.roleId == 3 ? 5 : 6,\r\n              }); // Bilal\r\n              // init();\r\n            }}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-check\"></i>\r\n              &nbsp;\r\n            </span>\r\n            Resolve\r\n          </button>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  // const content = (p) => {\r\n  //   return (\r\n\r\n  //   );\r\n  // };\r\n\r\n  const getOperators = () => {\r\n    return props.operators.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}>\r\n            {\" \"}\r\n            {item.firstname + \" \" + item.lastname}{\" \"}\r\n          </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const popButton = async (item) => {\r\n    return \"false\";\r\n  };\r\n\r\n  const getResponders2 = () => {\r\n    let data = [...props.online, ...props.offline, ...props.unknown]; // props.online;\r\n    return data.map((item, index) => {\r\n      if (item.db || true) {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <option value={item.id}>{item.name || \"\"}</option>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  // const goPoint = async (pointer, set, list, data2 = null, cb = null) => {\r\n  //   if (pointer != null) {\r\n  //     await pointer(async (data) => {\r\n  //       if (data.length > list.length) {\r\n  //         await set([...data]);\r\n  //         var centers = [];\r\n  //         if (data2 == null) {\r\n  //           centers = [...data];\r\n  //         } else {\r\n  //           centers = [...data, ...data2];\r\n  //         }\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       } else {\r\n  //         var centers = [...data];\r\n  //         await center(centers);\r\n  //         if (cb != null) {\r\n  //           centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //           cb(centers);\r\n  //         } else {\r\n  //         }\r\n  //       }\r\n  //     });\r\n  //   } else {\r\n  //     if (data2 != null && data2.length > 0) {\r\n  //       var centers = [...data2];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     } else {\r\n  //       var centers = [];\r\n  //       await center(centers);\r\n  //       if (cb != null) {\r\n  //         centers = centers.filter((c) => c.lat != 0 && c.long != 0);\r\n  //         cb(centers);\r\n  //       } else {\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   setInterval(async () => {\r\n  //     if (props.getPoints != null) {\r\n  //       await goPoint(props.getPoints, setList, list, null, async (r) => {\r\n  //         console.log(\"Round 1: \", r);\r\n  //         if (props.getPoints2 != null) {\r\n  //           await goPoint(props.getPoints2, setList2, list2, r, async (r2) => {\r\n  //             console.log(\"Round 2: \", r2);\r\n  //             if (props.getPoints3 != null) {\r\n  //               await goPoint(props.getPoints3, setList3, list3, r2, null);\r\n  //             }\r\n  //           });\r\n  //         }\r\n  //       });\r\n  //     } else if (props.getPoints2 != null) {\r\n  //       goPoint(props.getPoints2, setList2, list2, null, null);\r\n  //     } else if (props.getPoints3 != null) {\r\n  //       goPoint(props.getPoints3, setList3, list3, null, null);\r\n  //     }\r\n  //   }, 1000);\r\n  // }, [props.changer, \"text\"]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        {/* <div style={{ position: \"absolute\", top: 50, right: 10, zIndex: 10 }}> */}\r\n        {/* <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              IncreaseZoom();\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            className=\"btn btn-default sharp-border\"\r\n            onClick={() => {\r\n              DeccreaseZoom();\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n        </div> */}\r\n        <ReactMapGL\r\n          {...viewport}\r\n          // latitude={lat}\r\n          // longitude={lng}\r\n          mapboxApiAccessToken={KEY}\r\n          mapStyle={mapType}\r\n          onViewportChange={(viewport) => {\r\n            setViewport(viewport);\r\n          }}\r\n        >\r\n          {getSpots(\r\n            props.inQueryPanics,\r\n            {\r\n              shade: \"red\",\r\n              spot: \"green\",\r\n              showSpot: false,\r\n              buzz: true,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/13.png\")\r\n          )}\r\n          {getSpots(\r\n            props.confirmedByOperatorPanics,\r\n            {\r\n              shade: \"blue\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/8.png\")\r\n          )}\r\n          {getSpots(\r\n            props.assignedToResponderPanics,\r\n            {\r\n              shade: \"yellow\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/8.png\")\r\n          )}\r\n          {getSpots(\r\n            props.confirmedByResponderPanics,\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/10.png\")\r\n          )}\r\n          {getSpots(\r\n            props.resolvedByResponderPanics,\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/15.png\")\r\n          )}\r\n          {/* {getSpots(\r\n            props.resolvedByOperatorPanics,\r\n            {\r\n              shade: \"green\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/17.png\")\r\n          )} */}\r\n          {/* {getSpots(\r\n            props.closedBySupervisorPanics,\r\n            {\r\n              shade: \"green\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/18.png\")\r\n          )} */}\r\n          {/* {getSpots(\r\n            props.closedByCustomerPanics,\r\n            {\r\n              shade: \"black\",\r\n              spot: \"blue\",\r\n              showSpot: false,\r\n              buzz: false,\r\n              showTimer: true,\r\n            },\r\n            require(\"./../../../../pins/18.png\")\r\n          )} */}\r\n          {getSpots(\r\n            props.online,\r\n            {\r\n              shade: \"lightgreen\",\r\n              spot: \"darkgreen\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {getSpots(\r\n            props.offline,\r\n            {\r\n              shade: \"pink\",\r\n              spot: \"red\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {getSpots(\r\n            props.unknown,\r\n            {\r\n              shade: \"yellow\",\r\n              spot: \"orange\",\r\n              showSpot: true,\r\n              buzz: false,\r\n            },\r\n            require(\"./../../../../pins/12.png\"),\r\n            \"responder\"\r\n          )}\r\n          {/* {getSpots(list2, \"/images/pin2.png\")} */}\r\n          {/* {getSpots(list3, \"/images/pin3.png\")} */}\r\n        </ReactMapGL>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  natures: state.natures,\r\n  priorities: state.priorities,\r\n  online: state.onlineResponders,\r\n  offline: state.offlineResponders,\r\n  unknown: state.unknownResponders,\r\n  panics: state.panics,\r\n  operators: state.operators,\r\n  supervisors: state.supervisors,\r\n  panics: state.panics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  cancelled: state.cancelledPanics,\r\n  inQueryPanics: state.inQueryPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  confirmedByOperatorPanics: state.confirmedByOperatorPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  assignedToResponderPanics: state.assignedToResponderPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  confirmedByResponderPanics: state.confirmedByResponderPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  resolvedByResponderPanics: state.resolvedByResponderPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  resolvedByOperatorPanics: state.resolvedByOperatorPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  closedBySupervisorPanics: state.closedBySupervisorPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  closedByCustomerPanics: state.closedByCustomerPanics.filter(\r\n    (item) => item.operatorInvolved == state.logger.id\r\n  ),\r\n  zoomLevel: state.zoomLevel,\r\n  latitude: state.latitude,\r\n  longitude: state.longitude,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  getPanics: () => GetPanics(dispatch),\r\n  getUsers: () => GetUsers(dispatch),\r\n  getNatures: () => GetNatures(dispatch),\r\n  getCenter: (coords) => GetCenter(dispatch, coords),\r\n  getAllResponder: () => GetAllResponder(dispatch),\r\n  getPriorities: () => GetPriorities(dispatch),\r\n  updatePanics: (id, data) => UpdatePanics(dispatch, id, data),\r\n  operatorAcceptPanic: (id, data) =>\r\n    OperatorAcceptPanic_UpdatePanics(dispatch, id, data),\r\n  operatorAssignPanicToRes: (id, data) =>\r\n    OperatorAssignPanicToRes_UpdatePanics(dispatch, id, data),\r\n  operatorResolvePanic: (id, data) =>\r\n    OperatorResolvePanic_UpdatePanics(dispatch, id, data),\r\n  closePanic: (id, data) => ClosePanic_UpdatePanics(dispatch, id, data),\r\n  solvePanic: (id, data) => SolvePanic_UpdatePanics(dispatch, id, data),\r\n  changeZoom: (data) => changeZoom(dispatch, data),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Services\\Create\\Create.jsx",["3318","3319","3320","3321","3322","3323","3324"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Services\\List\\List.jsx",["3325","3326","3327","3328"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Natures\\Create\\Create.jsx",["3329","3330","3331","3332","3333","3334","3335"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Natures\\List\\List.jsx",["3336","3337","3338","3339"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Supervisor\\List\\List.jsx",["3340","3341","3342","3343"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Geofence\\Map\\Map.jsx",["3344","3345","3346","3347","3348","3349","3350","3351","3352","3353"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UserLogout,\r\n  FetchAllGeofences,\r\n  AddGeofences,\r\n} from \"../../../../../../actions/index\";\r\n\r\nimport MapGL, {\r\n  Marker,\r\n  FullscreenControl,\r\n  NavigationControl,\r\n} from \"@urbica/react-map-gl\";\r\nimport Draw from \"@urbica/react-map-gl-draw\";\r\n// import \"./style.css\";\r\nimport \"../style.css\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nconst Map = (props) => {\r\n  console.log(\"Supervisor - Geofence Map\");\r\n\r\n  const [data, setData] = useState([]);\r\n  const [map, setMap] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [service, setService] = useState(\"\");\r\n\r\n  const init = async () => {\r\n    // await props.fetchAllGeofences();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   init();\r\n  //   // let coords;\r\n  //   // coords = props.traccarGeofences.map((item) => item.coords);\r\n  //   let struct = {\r\n  //     type: \"FeatureCollection\",\r\n  //     features: [...props.traccarGeofences],\r\n  //   };\r\n  //   setData(struct);\r\n  //   return;\r\n  // }, [props.traccarGeofences]);\r\n\r\n  useEffect(() => {\r\n    if (service != \"\" && name != \"\") {\r\n      setMap(true);\r\n    } else {\r\n      setMap(false);\r\n    }\r\n  }, [service, name]);\r\n\r\n  let MAPBOX_ACCESS_TOKEN =\r\n    \"pk.eyJ1IjoiemFlZW10YXJyYXIzIiwiYSI6ImNrODF6N21kZDAxa2kzb255c3I4bnh5NWsifQ.CqUWmnyMb0nGVwAQYF0d6w\";\r\n  let mapStyle = \"mapbox://styles/mapbox/streets-v9\";\r\n\r\n  const getMap = () => {\r\n    if (map) {\r\n      return (\r\n        <MapGL\r\n          initialState={{\r\n            data: {\r\n              type: \"FeatureCollection\",\r\n              features: [],\r\n            },\r\n          }}\r\n          style={{ width: \"100%\", height: \"500px\" }}\r\n          mapStyle={mapStyle}\r\n          accessToken={MAPBOX_ACCESS_TOKEN}\r\n          latitude={props.lat || 31.4676}\r\n          longitude={props.lng || 74.3209}\r\n          zoom={props.zoom || 10}\r\n        >\r\n          <Draw\r\n            //   onDrawCreate={({ features }) => setFts(features)}\r\n            //   onDrawUpdate={({ features }) => setFts(features)}\r\n            data={{\r\n              type: \"FeatureCollection\",\r\n              features: [],\r\n            }}\r\n            onDrawSelectionChange={(data) => {\r\n              alert(\"Selected : \" + data.features[0].id);\r\n            }}\r\n            onDrawDelete={async (data) => {\r\n              // var id = data.features[0].id;\r\n              // await deleteGeofences(\"admin\", \"L@s3rjet9045\", id, async (data) => {\r\n              //   // alert(\"Deleted !\");\r\n              //   await fetchPoints();\r\n              //   status = \"del\";\r\n              // });\r\n            }}\r\n            onDrawCreate={async (d) => {\r\n              var limit = d.features.length;\r\n              if (limit - 1 == 0) {\r\n                limit = 0;\r\n              } else {\r\n                limit = limit - 1;\r\n              }\r\n              var last = d.features[limit].geometry.coordinates[0];\r\n              // console.error(last);\r\n              alert(JSON.stringify({ data: last, limit }));\r\n              //props.reset();\r\n              await props.addGeofences(service, name, last);\r\n              await props.fetchAllGeofences();\r\n              setService(\"\");\r\n              setName(\"\");\r\n            }}\r\n            onDrawUpdate={(d) => {\r\n              var id = d.features[0].id;\r\n              // if (service != 0) {\r\n              var limit = d.features.length;\r\n              if (limit - 1 == 0) {\r\n                limit = 0;\r\n              } else {\r\n                limit = limit - 1;\r\n              }\r\n              var last = d.features[limit].geometry.coordinates[0];\r\n              alert(last);\r\n              // console.error(last);\r\n              // alert(JSON.stringify({ data: last, limit }));\r\n              //props.reset();\r\n              // updateGeofences(\r\n              //   id,\r\n              //   \"admin\",\r\n              //   \"L@s3rjet9045\",\r\n              //   service,\r\n              //   name,\r\n              //   last,\r\n              //   async () => {\r\n              //     // alert(JSON.stringify(last));\r\n              //     await fetchPoints();\r\n              //     status = \"add\";\r\n              //     setService(0);\r\n              //     setMapShow(false);\r\n              //   }\r\n              // );\r\n              // }\r\n            }}\r\n            onChange={(d) => {}}\r\n          />\r\n          {/* {props.children} */}\r\n          <div className=\"nav\">\r\n            <NavigationControl />\r\n          </div>\r\n          <div className=\"fullscreen\">\r\n            <FullscreenControl />\r\n          </div>\r\n        </MapGL>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const fetchServices = () => {\r\n    return props.services.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          <option value={item.id}> {item.name} </option>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\" Enter Name \"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n        <select\r\n          className=\"form-control\"\r\n          value={service}\r\n          onChange={(e) => setService(e.target.value)}\r\n        >\r\n          <option value=\"\"> None </option>\r\n          {fetchServices()}\r\n        </select>\r\n        <br />\r\n      </div>\r\n      {getMap()}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.logger,\r\n  traccarGeofences: state.traccarGeofences,\r\n  services: state.services,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // logout: () => UserLogout(dispatch),\r\n  fetchAllGeofences: () => FetchAllGeofences(dispatch),\r\n  addGeofences: (id, name, coords) => AddGeofences(dispatch, id, name, coords),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Priorities\\List\\List.jsx",["3354","3355","3356","3357","3358"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Priorities\\Create\\Create.jsx",["3359","3360","3361","3362","3363","3364","3365"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Operator\\List\\List.jsx",["3366","3367","3368","3369","3370"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Notifications\\private notifications\\Notification.jsx",[],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Groups\\Create\\Create.jsx",["3371","3372","3373","3374","3375"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Groups\\List\\List.jsx",["3376","3377","3378","3379"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Subscriptions\\Create\\Create.jsx",["3380","3381","3382","3383","3384","3385"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Subscriptions\\List\\List.jsx",["3386","3387","3388","3389"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor\\Map\\Pin.jsx",["3390","3391","3392","3393","3394","3395","3396","3397"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Map\\Spot.jsx",["3398","3399"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Map\\Spot.jsx",["3400","3401"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Priorities\\List\\List.jsx",["3402","3403","3404","3405","3406"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Supervisor2\\Priorities\\Create\\Create.jsx",["3407","3408","3409","3410","3411","3412","3413"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Mainscreen\\Map\\Pin.jsx",["3414","3415","3416","3417","3418","3419","3420","3421"],"D:\\react lectures\\cad and util uptodate 19-01-21\\cad\\src\\components\\Project\\Dashboard\\Operator2\\Map\\Pin.jsx",["3422","3423","3424","3425","3426","3427","3428","3429"],{"ruleId":"3430","replacedBy":"3431"},{"ruleId":"3432","replacedBy":"3433"},{"ruleId":"3434","severity":1,"message":"3435","line":4,"column":8,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":131,"column":22,"nodeType":"3440","messageId":"3441","endLine":131,"endColumn":24},{"ruleId":"3434","severity":1,"message":"3442","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":21},{"ruleId":"3443","severity":1,"message":"3444","line":49,"column":6,"nodeType":"3445","endLine":49,"endColumn":8,"suggestions":"3446"},{"ruleId":"3434","severity":1,"message":"3447","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":16,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":42,"column":16,"nodeType":"3440","messageId":"3441","endLine":42,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":64,"column":16,"nodeType":"3440","messageId":"3441","endLine":64,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":86,"column":16,"nodeType":"3440","messageId":"3441","endLine":86,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":88,"column":59,"nodeType":"3440","messageId":"3441","endLine":88,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":89,"column":60,"nodeType":"3440","messageId":"3441","endLine":89,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":90,"column":59,"nodeType":"3440","messageId":"3441","endLine":90,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":91,"column":61,"nodeType":"3440","messageId":"3441","endLine":91,"endColumn":63},{"ruleId":"3438","severity":1,"message":"3439","line":92,"column":60,"nodeType":"3440","messageId":"3441","endLine":92,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":93,"column":53,"nodeType":"3440","messageId":"3441","endLine":93,"endColumn":55},{"ruleId":"3438","severity":1,"message":"3439","line":94,"column":55,"nodeType":"3440","messageId":"3441","endLine":94,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":95,"column":60,"nodeType":"3440","messageId":"3441","endLine":95,"endColumn":62},{"ruleId":"3434","severity":1,"message":"3448","line":126,"column":11,"nodeType":"3436","messageId":"3437","endLine":126,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":128,"column":16,"nodeType":"3440","messageId":"3441","endLine":128,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":148,"column":11,"nodeType":"3436","messageId":"3437","endLine":148,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":150,"column":16,"nodeType":"3440","messageId":"3441","endLine":150,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":170,"column":11,"nodeType":"3436","messageId":"3437","endLine":170,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":172,"column":16,"nodeType":"3440","messageId":"3441","endLine":172,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":194,"column":16,"nodeType":"3440","messageId":"3441","endLine":194,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":224,"column":11,"nodeType":"3436","messageId":"3437","endLine":224,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":226,"column":16,"nodeType":"3440","messageId":"3441","endLine":226,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":247,"column":16,"nodeType":"3440","messageId":"3441","endLine":247,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":269,"column":16,"nodeType":"3440","messageId":"3441","endLine":269,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":291,"column":16,"nodeType":"3440","messageId":"3441","endLine":291,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":314,"column":16,"nodeType":"3440","messageId":"3441","endLine":314,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":315,"column":64,"nodeType":"3440","messageId":"3441","endLine":315,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":317,"column":34,"nodeType":"3440","messageId":"3441","endLine":317,"endColumn":36},{"ruleId":"3438","severity":1,"message":"3439","line":317,"column":58,"nodeType":"3440","messageId":"3441","endLine":317,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3449","line":320,"column":38,"nodeType":"3440","messageId":"3441","endLine":320,"endColumn":40},{"ruleId":"3438","severity":1,"message":"3449","line":320,"column":59,"nodeType":"3440","messageId":"3441","endLine":320,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":324,"column":27,"nodeType":"3440","messageId":"3441","endLine":324,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3449","line":324,"column":52,"nodeType":"3440","messageId":"3441","endLine":324,"endColumn":54},{"ruleId":"3438","severity":1,"message":"3449","line":324,"column":73,"nodeType":"3440","messageId":"3441","endLine":324,"endColumn":75},{"ruleId":"3438","severity":1,"message":"3439","line":333,"column":27,"nodeType":"3440","messageId":"3441","endLine":333,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3449","line":333,"column":52,"nodeType":"3440","messageId":"3441","endLine":333,"endColumn":54},{"ruleId":"3438","severity":1,"message":"3449","line":333,"column":73,"nodeType":"3440","messageId":"3441","endLine":333,"endColumn":75},{"ruleId":"3438","severity":1,"message":"3439","line":337,"column":27,"nodeType":"3440","messageId":"3441","endLine":337,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3449","line":337,"column":52,"nodeType":"3440","messageId":"3441","endLine":337,"endColumn":54},{"ruleId":"3438","severity":1,"message":"3449","line":337,"column":73,"nodeType":"3440","messageId":"3441","endLine":337,"endColumn":75},{"ruleId":"3438","severity":1,"message":"3439","line":341,"column":27,"nodeType":"3440","messageId":"3441","endLine":341,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3449","line":341,"column":52,"nodeType":"3440","messageId":"3441","endLine":341,"endColumn":54},{"ruleId":"3438","severity":1,"message":"3449","line":341,"column":73,"nodeType":"3440","messageId":"3441","endLine":341,"endColumn":75},{"ruleId":"3438","severity":1,"message":"3439","line":345,"column":27,"nodeType":"3440","messageId":"3441","endLine":345,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3449","line":345,"column":52,"nodeType":"3440","messageId":"3441","endLine":345,"endColumn":54},{"ruleId":"3438","severity":1,"message":"3449","line":345,"column":73,"nodeType":"3440","messageId":"3441","endLine":345,"endColumn":75},{"ruleId":"3438","severity":1,"message":"3439","line":349,"column":27,"nodeType":"3440","messageId":"3441","endLine":349,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3449","line":349,"column":52,"nodeType":"3440","messageId":"3441","endLine":349,"endColumn":54},{"ruleId":"3438","severity":1,"message":"3449","line":349,"column":73,"nodeType":"3440","messageId":"3441","endLine":349,"endColumn":75},{"ruleId":"3438","severity":1,"message":"3439","line":353,"column":27,"nodeType":"3440","messageId":"3441","endLine":353,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3449","line":353,"column":52,"nodeType":"3440","messageId":"3441","endLine":353,"endColumn":54},{"ruleId":"3438","severity":1,"message":"3449","line":353,"column":73,"nodeType":"3440","messageId":"3441","endLine":353,"endColumn":75},{"ruleId":"3438","severity":1,"message":"3439","line":357,"column":27,"nodeType":"3440","messageId":"3441","endLine":357,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3449","line":357,"column":52,"nodeType":"3440","messageId":"3441","endLine":357,"endColumn":54},{"ruleId":"3438","severity":1,"message":"3449","line":357,"column":73,"nodeType":"3440","messageId":"3441","endLine":357,"endColumn":75},{"ruleId":"3438","severity":1,"message":"3439","line":392,"column":16,"nodeType":"3440","messageId":"3441","endLine":392,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":414,"column":16,"nodeType":"3440","messageId":"3441","endLine":414,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":436,"column":16,"nodeType":"3440","messageId":"3441","endLine":436,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":458,"column":16,"nodeType":"3440","messageId":"3441","endLine":458,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":466,"column":32,"nodeType":"3440","messageId":"3441","endLine":466,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":470,"column":41,"nodeType":"3440","messageId":"3441","endLine":470,"endColumn":43},{"ruleId":"3438","severity":1,"message":"3439","line":477,"column":67,"nodeType":"3440","messageId":"3441","endLine":477,"endColumn":69},{"ruleId":"3438","severity":1,"message":"3439","line":480,"column":30,"nodeType":"3440","messageId":"3441","endLine":480,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":482,"column":41,"nodeType":"3440","messageId":"3441","endLine":482,"endColumn":43},{"ruleId":"3438","severity":1,"message":"3439","line":498,"column":23,"nodeType":"3440","messageId":"3441","endLine":498,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":503,"column":45,"nodeType":"3440","messageId":"3441","endLine":503,"endColumn":47},{"ruleId":"3438","severity":1,"message":"3439","line":507,"column":38,"nodeType":"3440","messageId":"3441","endLine":507,"endColumn":40},{"ruleId":"3438","severity":1,"message":"3439","line":508,"column":39,"nodeType":"3440","messageId":"3441","endLine":508,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":509,"column":40,"nodeType":"3440","messageId":"3441","endLine":509,"endColumn":42},{"ruleId":"3438","severity":1,"message":"3439","line":510,"column":40,"nodeType":"3440","messageId":"3441","endLine":510,"endColumn":42},{"ruleId":"3438","severity":1,"message":"3439","line":591,"column":16,"nodeType":"3440","messageId":"3441","endLine":591,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":609,"column":35,"nodeType":"3440","messageId":"3441","endLine":609,"endColumn":37},{"ruleId":"3438","severity":1,"message":"3439","line":651,"column":46,"nodeType":"3440","messageId":"3441","endLine":651,"endColumn":48},{"ruleId":"3434","severity":1,"message":"3448","line":682,"column":11,"nodeType":"3436","messageId":"3437","endLine":682,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":684,"column":16,"nodeType":"3440","messageId":"3441","endLine":684,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":736,"column":13,"nodeType":"3436","messageId":"3437","endLine":736,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3448","line":763,"column":13,"nodeType":"3436","messageId":"3437","endLine":763,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3448","line":788,"column":13,"nodeType":"3436","messageId":"3437","endLine":788,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3450","line":802,"column":7,"nodeType":"3436","messageId":"3437","endLine":802,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":839,"column":15,"nodeType":"3440","messageId":"3441","endLine":839,"endColumn":17},{"ruleId":"3438","severity":1,"message":"3449","line":875,"column":10,"nodeType":"3440","messageId":"3441","endLine":875,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3448","line":1004,"column":11,"nodeType":"3436","messageId":"3437","endLine":1004,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1006,"column":16,"nodeType":"3440","messageId":"3441","endLine":1006,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1024,"column":11,"nodeType":"3436","messageId":"3437","endLine":1024,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1026,"column":16,"nodeType":"3440","messageId":"3441","endLine":1026,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1044,"column":11,"nodeType":"3436","messageId":"3437","endLine":1044,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1046,"column":16,"nodeType":"3440","messageId":"3441","endLine":1046,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1065,"column":11,"nodeType":"3436","messageId":"3437","endLine":1065,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1067,"column":16,"nodeType":"3440","messageId":"3441","endLine":1067,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1085,"column":11,"nodeType":"3436","messageId":"3437","endLine":1085,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1087,"column":16,"nodeType":"3440","messageId":"3441","endLine":1087,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1105,"column":11,"nodeType":"3436","messageId":"3437","endLine":1105,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1107,"column":16,"nodeType":"3440","messageId":"3441","endLine":1107,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1126,"column":11,"nodeType":"3436","messageId":"3437","endLine":1126,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1128,"column":16,"nodeType":"3440","messageId":"3441","endLine":1128,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1146,"column":11,"nodeType":"3436","messageId":"3437","endLine":1146,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1148,"column":16,"nodeType":"3440","messageId":"3441","endLine":1148,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1166,"column":11,"nodeType":"3436","messageId":"3437","endLine":1166,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1168,"column":16,"nodeType":"3440","messageId":"3441","endLine":1168,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1187,"column":11,"nodeType":"3436","messageId":"3437","endLine":1187,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1189,"column":16,"nodeType":"3440","messageId":"3441","endLine":1189,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1208,"column":11,"nodeType":"3436","messageId":"3437","endLine":1208,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1210,"column":16,"nodeType":"3440","messageId":"3441","endLine":1210,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1229,"column":11,"nodeType":"3436","messageId":"3437","endLine":1229,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1231,"column":16,"nodeType":"3440","messageId":"3441","endLine":1231,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1250,"column":11,"nodeType":"3436","messageId":"3437","endLine":1250,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1252,"column":16,"nodeType":"3440","messageId":"3441","endLine":1252,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1276,"column":11,"nodeType":"3436","messageId":"3437","endLine":1276,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1278,"column":16,"nodeType":"3440","messageId":"3441","endLine":1278,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1298,"column":11,"nodeType":"3436","messageId":"3437","endLine":1298,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1300,"column":16,"nodeType":"3440","messageId":"3441","endLine":1300,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1324,"column":11,"nodeType":"3436","messageId":"3437","endLine":1324,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1326,"column":16,"nodeType":"3440","messageId":"3441","endLine":1326,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1346,"column":11,"nodeType":"3436","messageId":"3437","endLine":1346,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1348,"column":16,"nodeType":"3440","messageId":"3441","endLine":1348,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1368,"column":11,"nodeType":"3436","messageId":"3437","endLine":1368,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1370,"column":16,"nodeType":"3440","messageId":"3441","endLine":1370,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1390,"column":11,"nodeType":"3436","messageId":"3437","endLine":1390,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1392,"column":16,"nodeType":"3440","messageId":"3441","endLine":1392,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1410,"column":11,"nodeType":"3436","messageId":"3437","endLine":1410,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1412,"column":16,"nodeType":"3440","messageId":"3441","endLine":1412,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1431,"column":11,"nodeType":"3436","messageId":"3437","endLine":1431,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1433,"column":16,"nodeType":"3440","messageId":"3441","endLine":1433,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1451,"column":11,"nodeType":"3436","messageId":"3437","endLine":1451,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1453,"column":16,"nodeType":"3440","messageId":"3441","endLine":1453,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1471,"column":11,"nodeType":"3436","messageId":"3437","endLine":1471,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1473,"column":16,"nodeType":"3440","messageId":"3441","endLine":1473,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1536,"column":11,"nodeType":"3436","messageId":"3437","endLine":1536,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1538,"column":16,"nodeType":"3440","messageId":"3441","endLine":1538,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1594,"column":11,"nodeType":"3436","messageId":"3437","endLine":1594,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1596,"column":16,"nodeType":"3440","messageId":"3441","endLine":1596,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3448","line":1619,"column":11,"nodeType":"3436","messageId":"3437","endLine":1619,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":1621,"column":16,"nodeType":"3440","messageId":"3441","endLine":1621,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":1649,"column":16,"nodeType":"3440","messageId":"3441","endLine":1649,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":1670,"column":16,"nodeType":"3440","messageId":"3441","endLine":1670,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":1691,"column":16,"nodeType":"3440","messageId":"3441","endLine":1691,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":1712,"column":16,"nodeType":"3440","messageId":"3441","endLine":1712,"endColumn":18},{"ruleId":"3443","severity":1,"message":"3451","line":43,"column":6,"nodeType":"3445","endLine":43,"endColumn":8,"suggestions":"3452"},{"ruleId":"3438","severity":1,"message":"3439","line":46,"column":27,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":48,"column":34,"nodeType":"3440","messageId":"3441","endLine":48,"endColumn":36},{"ruleId":"3438","severity":1,"message":"3439","line":49,"column":32,"nodeType":"3440","messageId":"3441","endLine":49,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":52,"column":32,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":55,"column":34,"nodeType":"3440","messageId":"3441","endLine":55,"endColumn":36},{"ruleId":"3438","severity":1,"message":"3439","line":57,"column":34,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":36},{"ruleId":"3438","severity":1,"message":"3439","line":59,"column":34,"nodeType":"3440","messageId":"3441","endLine":59,"endColumn":36},{"ruleId":"3434","severity":1,"message":"3453","line":1,"column":38,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":46},{"ruleId":"3434","severity":1,"message":"3454","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3455","line":7,"column":8,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3456","line":9,"column":8,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3457","line":10,"column":8,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3458","line":11,"column":8,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3459","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3460","line":13,"column":8,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3461","line":14,"column":8,"nodeType":"3436","messageId":"3437","endLine":14,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3462","line":18,"column":8,"nodeType":"3436","messageId":"3437","endLine":18,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3463","line":19,"column":8,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3464","line":21,"column":8,"nodeType":"3436","messageId":"3437","endLine":21,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":35,"column":27,"nodeType":"3440","messageId":"3441","endLine":35,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":25,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":27},{"ruleId":"3438","severity":1,"message":"3439","line":46,"column":14,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":46,"column":31,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":71,"column":21,"nodeType":"3440","messageId":"3441","endLine":71,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":71,"column":39,"nodeType":"3440","messageId":"3441","endLine":71,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":98,"column":21,"nodeType":"3440","messageId":"3441","endLine":98,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":98,"column":38,"nodeType":"3440","messageId":"3441","endLine":98,"endColumn":40},{"ruleId":"3434","severity":1,"message":"3453","line":1,"column":38,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":46},{"ruleId":"3434","severity":1,"message":"3454","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":27,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":37,"column":25,"nodeType":"3440","messageId":"3441","endLine":37,"endColumn":27},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":31,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":72,"column":21,"nodeType":"3440","messageId":"3441","endLine":72,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":72,"column":39,"nodeType":"3440","messageId":"3441","endLine":72,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":99,"column":21,"nodeType":"3440","messageId":"3441","endLine":99,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":99,"column":38,"nodeType":"3440","messageId":"3441","endLine":99,"endColumn":40},{"ruleId":"3434","severity":1,"message":"3453","line":1,"column":38,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":46},{"ruleId":"3434","severity":1,"message":"3454","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3456","line":9,"column":8,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3457","line":10,"column":8,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3460","line":13,"column":8,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3465","line":17,"column":8,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3462","line":18,"column":8,"nodeType":"3436","messageId":"3437","endLine":18,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3463","line":19,"column":8,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3466","line":20,"column":8,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3464","line":21,"column":8,"nodeType":"3436","messageId":"3437","endLine":21,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3467","line":23,"column":8,"nodeType":"3436","messageId":"3437","endLine":23,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3468","line":32,"column":9,"nodeType":"3436","messageId":"3437","endLine":32,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":35,"column":27,"nodeType":"3440","messageId":"3441","endLine":35,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":25,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":27},{"ruleId":"3438","severity":1,"message":"3439","line":46,"column":14,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":46,"column":31,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":71,"column":21,"nodeType":"3440","messageId":"3441","endLine":71,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":71,"column":39,"nodeType":"3440","messageId":"3441","endLine":71,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":98,"column":21,"nodeType":"3440","messageId":"3441","endLine":98,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":98,"column":38,"nodeType":"3440","messageId":"3441","endLine":98,"endColumn":40},{"ruleId":"3434","severity":1,"message":"3453","line":1,"column":38,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":46},{"ruleId":"3434","severity":1,"message":"3454","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3455","line":7,"column":8,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3456","line":9,"column":8,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3457","line":10,"column":8,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3458","line":11,"column":8,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3459","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3460","line":13,"column":8,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3461","line":14,"column":8,"nodeType":"3436","messageId":"3437","endLine":14,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3462","line":18,"column":8,"nodeType":"3436","messageId":"3437","endLine":18,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3463","line":19,"column":8,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3464","line":21,"column":8,"nodeType":"3436","messageId":"3437","endLine":21,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":35,"column":27,"nodeType":"3440","messageId":"3441","endLine":35,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":25,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":27},{"ruleId":"3438","severity":1,"message":"3439","line":46,"column":14,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":46,"column":31,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":71,"column":21,"nodeType":"3440","messageId":"3441","endLine":71,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":71,"column":39,"nodeType":"3440","messageId":"3441","endLine":71,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":98,"column":21,"nodeType":"3440","messageId":"3441","endLine":98,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":98,"column":38,"nodeType":"3440","messageId":"3441","endLine":98,"endColumn":40},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3453","line":1,"column":38,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":46},{"ruleId":"3434","severity":1,"message":"3454","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3455","line":7,"column":8,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3470","line":8,"column":8,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3456","line":9,"column":8,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3457","line":10,"column":8,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3458","line":11,"column":8,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3459","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3460","line":13,"column":8,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3461","line":14,"column":8,"nodeType":"3436","messageId":"3437","endLine":14,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3465","line":17,"column":8,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3462","line":18,"column":8,"nodeType":"3436","messageId":"3437","endLine":18,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3463","line":19,"column":8,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3466","line":20,"column":8,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3464","line":21,"column":8,"nodeType":"3436","messageId":"3437","endLine":21,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3467","line":23,"column":8,"nodeType":"3436","messageId":"3437","endLine":23,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":32,"column":14,"nodeType":"3440","messageId":"3441","endLine":32,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":32,"column":31,"nodeType":"3440","messageId":"3441","endLine":32,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":57,"column":21,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":57,"column":39,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":84,"column":21,"nodeType":"3440","messageId":"3441","endLine":84,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":84,"column":38,"nodeType":"3440","messageId":"3441","endLine":84,"endColumn":40},{"ruleId":"3434","severity":1,"message":"3453","line":1,"column":38,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":46},{"ruleId":"3434","severity":1,"message":"3454","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3455","line":7,"column":8,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3470","line":8,"column":8,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3456","line":9,"column":8,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3457","line":10,"column":8,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3458","line":11,"column":8,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3459","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3460","line":13,"column":8,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3461","line":14,"column":8,"nodeType":"3436","messageId":"3437","endLine":14,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3462","line":18,"column":8,"nodeType":"3436","messageId":"3437","endLine":18,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3463","line":19,"column":8,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3466","line":20,"column":8,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3464","line":21,"column":8,"nodeType":"3436","messageId":"3437","endLine":21,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3467","line":23,"column":8,"nodeType":"3436","messageId":"3437","endLine":23,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":45,"column":14,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":45,"column":31,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":70,"column":21,"nodeType":"3440","messageId":"3441","endLine":70,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":70,"column":39,"nodeType":"3440","messageId":"3441","endLine":70,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":97,"column":21,"nodeType":"3440","messageId":"3441","endLine":97,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":97,"column":38,"nodeType":"3440","messageId":"3441","endLine":97,"endColumn":40},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3443","severity":1,"message":"3474","line":17,"column":6,"nodeType":"3445","endLine":17,"endColumn":8,"suggestions":"3475"},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":10,"column":14,"nodeType":"3440","messageId":"3441","endLine":10,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":13,"column":31,"nodeType":"3440","messageId":"3441","endLine":13,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":21,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":33,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":35},{"ruleId":"3476","severity":1,"message":"3477","line":39,"column":13,"nodeType":"3478","endLine":39,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3477","line":58,"column":13,"nodeType":"3478","endLine":58,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3479","line":78,"column":13,"nodeType":"3478","endLine":85,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":99,"column":17,"nodeType":"3478","endLine":99,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":106,"column":17,"nodeType":"3478","endLine":106,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":113,"column":17,"nodeType":"3478","endLine":113,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":116,"column":17,"nodeType":"3478","endLine":116,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3479","line":182,"column":13,"nodeType":"3478","endLine":189,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":199,"column":17,"nodeType":"3478","endLine":199,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":202,"column":17,"nodeType":"3478","endLine":202,"endColumn":43},{"ruleId":"3434","severity":1,"message":"3480","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":23,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":10,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3481","line":4,"column":22,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":39},{"ruleId":"3434","severity":1,"message":"3482","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":22,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3483","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":42,"column":14,"nodeType":"3440","messageId":"3441","endLine":42,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3484","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3485","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3486","line":9,"column":3,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3468","line":28,"column":9,"nodeType":"3436","messageId":"3437","endLine":28,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":107,"column":28,"nodeType":"3440","messageId":"3441","endLine":107,"endColumn":30},{"ruleId":"3438","severity":1,"message":"3439","line":137,"column":29,"nodeType":"3440","messageId":"3441","endLine":137,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":139,"column":33,"nodeType":"3440","messageId":"3441","endLine":139,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":164,"column":49,"nodeType":"3440","messageId":"3441","endLine":164,"endColumn":51},{"ruleId":"3438","severity":1,"message":"3439","line":165,"column":49,"nodeType":"3440","messageId":"3441","endLine":165,"endColumn":51},{"ruleId":"3438","severity":1,"message":"3439","line":298,"column":51,"nodeType":"3440","messageId":"3441","endLine":298,"endColumn":53},{"ruleId":"3438","severity":1,"message":"3439","line":299,"column":51,"nodeType":"3440","messageId":"3441","endLine":299,"endColumn":53},{"ruleId":"3438","severity":1,"message":"3439","line":330,"column":63,"nodeType":"3440","messageId":"3441","endLine":330,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":331,"column":63,"nodeType":"3440","messageId":"3441","endLine":331,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":363,"column":63,"nodeType":"3440","messageId":"3441","endLine":363,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":364,"column":63,"nodeType":"3440","messageId":"3441","endLine":364,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":396,"column":64,"nodeType":"3440","messageId":"3441","endLine":396,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":397,"column":64,"nodeType":"3440","messageId":"3441","endLine":397,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":429,"column":63,"nodeType":"3440","messageId":"3441","endLine":429,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":430,"column":63,"nodeType":"3440","messageId":"3441","endLine":430,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":462,"column":62,"nodeType":"3440","messageId":"3441","endLine":462,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":463,"column":62,"nodeType":"3440","messageId":"3441","endLine":463,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":495,"column":62,"nodeType":"3440","messageId":"3441","endLine":495,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":496,"column":62,"nodeType":"3440","messageId":"3441","endLine":496,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":528,"column":60,"nodeType":"3440","messageId":"3441","endLine":528,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":529,"column":60,"nodeType":"3440","messageId":"3441","endLine":529,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":560,"column":53,"nodeType":"3440","messageId":"3441","endLine":560,"endColumn":55},{"ruleId":"3438","severity":1,"message":"3439","line":561,"column":53,"nodeType":"3440","messageId":"3441","endLine":561,"endColumn":55},{"ruleId":"3438","severity":1,"message":"3439","line":592,"column":50,"nodeType":"3440","messageId":"3441","endLine":592,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":593,"column":50,"nodeType":"3440","messageId":"3441","endLine":593,"endColumn":52},{"ruleId":"3434","severity":1,"message":"3487","line":3,"column":10,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3488","line":3,"column":16,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":24},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3489","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3490","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3491","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3492","line":14,"column":8,"nodeType":"3436","messageId":"3437","endLine":14,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3493","line":15,"column":8,"nodeType":"3436","messageId":"3437","endLine":15,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3494","line":16,"column":10,"nodeType":"3436","messageId":"3437","endLine":16,"endColumn":22},{"ruleId":"3434","severity":1,"message":"3495","line":19,"column":7,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3496","line":23,"column":9,"nodeType":"3436","messageId":"3437","endLine":23,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3497","line":27,"column":9,"nodeType":"3436","messageId":"3437","endLine":27,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3498","line":30,"column":9,"nodeType":"3436","messageId":"3437","endLine":30,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3468","line":32,"column":9,"nodeType":"3436","messageId":"3437","endLine":32,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3499","line":41,"column":12,"nodeType":"3436","messageId":"3437","endLine":41,"endColumn":22},{"ruleId":"3438","severity":1,"message":"3439","line":44,"column":34,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":36},{"ruleId":"3438","severity":1,"message":"3439","line":80,"column":26,"nodeType":"3440","messageId":"3441","endLine":80,"endColumn":28},{"ruleId":"3434","severity":1,"message":"3500","line":160,"column":9,"nodeType":"3436","messageId":"3437","endLine":160,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3501","line":181,"column":9,"nodeType":"3436","messageId":"3437","endLine":181,"endColumn":18},{"ruleId":"3502","severity":1,"message":"3503","line":196,"column":38,"nodeType":"3504","messageId":"3505","endLine":196,"endColumn":40},{"ruleId":"3438","severity":1,"message":"3439","line":199,"column":63,"nodeType":"3440","messageId":"3441","endLine":199,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":206,"column":59,"nodeType":"3440","messageId":"3441","endLine":206,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":305,"column":55,"nodeType":"3440","messageId":"3441","endLine":305,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":306,"column":55,"nodeType":"3440","messageId":"3441","endLine":306,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":333,"column":55,"nodeType":"3440","messageId":"3441","endLine":333,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":334,"column":55,"nodeType":"3440","messageId":"3441","endLine":334,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":375,"column":56,"nodeType":"3440","messageId":"3441","endLine":375,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":376,"column":56,"nodeType":"3440","messageId":"3441","endLine":376,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":461,"column":54,"nodeType":"3440","messageId":"3441","endLine":461,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":462,"column":54,"nodeType":"3440","messageId":"3441","endLine":462,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":491,"column":54,"nodeType":"3440","messageId":"3441","endLine":491,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":492,"column":54,"nodeType":"3440","messageId":"3441","endLine":492,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":561,"column":54,"nodeType":"3440","messageId":"3441","endLine":561,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":563,"column":26,"nodeType":"3440","messageId":"3441","endLine":563,"endColumn":28},{"ruleId":"3434","severity":1,"message":"3506","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":25,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":35},{"ruleId":"3434","severity":1,"message":"3507","line":19,"column":9,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":15,"column":12,"nodeType":"3440","messageId":"3441","endLine":15,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":19,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":15,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3468","line":30,"column":9,"nodeType":"3436","messageId":"3437","endLine":30,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":58,"column":54,"nodeType":"3440","messageId":"3441","endLine":58,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":57,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":76,"column":59,"nodeType":"3440","messageId":"3441","endLine":76,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":17,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":30,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":18,"column":50,"nodeType":"3440","messageId":"3441","endLine":18,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":75,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":77},{"ruleId":"3438","severity":1,"message":"3439","line":63,"column":45,"nodeType":"3440","messageId":"3441","endLine":63,"endColumn":47},{"ruleId":"3438","severity":1,"message":"3449","line":69,"column":31,"nodeType":"3440","messageId":"3441","endLine":69,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3449","line":70,"column":31,"nodeType":"3440","messageId":"3441","endLine":70,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":162,"column":64,"nodeType":"3440","messageId":"3441","endLine":162,"endColumn":66},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":13,"column":3,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":33,"column":9,"nodeType":"3436","messageId":"3437","endLine":33,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":102,"column":29,"nodeType":"3440","messageId":"3441","endLine":102,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":120,"column":29,"nodeType":"3440","messageId":"3441","endLine":120,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3481","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":11,"column":3,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":31,"column":9,"nodeType":"3436","messageId":"3437","endLine":31,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3510","line":66,"column":6,"nodeType":"3445","endLine":66,"endColumn":30,"suggestions":"3511"},{"ruleId":"3438","severity":1,"message":"3439","line":111,"column":29,"nodeType":"3440","messageId":"3441","endLine":111,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3473","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3512","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3513","line":13,"column":14,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3514","line":20,"column":19,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":29},{"ruleId":"3443","severity":1,"message":"3451","line":20,"column":6,"nodeType":"3445","endLine":20,"endColumn":8,"suggestions":"3515"},{"ruleId":"3434","severity":1,"message":"3516","line":22,"column":9,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":30,"column":23,"nodeType":"3440","messageId":"3441","endLine":30,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":32,"column":30,"nodeType":"3440","messageId":"3441","endLine":32,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":34,"column":30,"nodeType":"3440","messageId":"3441","endLine":34,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":192,"column":14,"nodeType":"3440","messageId":"3441","endLine":192,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":213,"column":15,"nodeType":"3440","messageId":"3441","endLine":213,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3517","line":6,"column":10,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3518","line":6,"column":17,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":22},{"ruleId":"3434","severity":1,"message":"3519","line":6,"column":24,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":29},{"ruleId":"3434","severity":1,"message":"3520","line":7,"column":8,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3521","line":15,"column":15,"nodeType":"3436","messageId":"3437","endLine":15,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3522","line":20,"column":10,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3523","line":20,"column":15,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":35,"column":16,"nodeType":"3440","messageId":"3441","endLine":35,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":37,"column":23,"nodeType":"3440","messageId":"3441","endLine":37,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":39,"column":23,"nodeType":"3440","messageId":"3441","endLine":39,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":86,"column":16,"nodeType":"3440","messageId":"3441","endLine":86,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":125,"column":22,"nodeType":"3440","messageId":"3441","endLine":125,"endColumn":24},{"ruleId":"3434","severity":1,"message":"3524","line":149,"column":9,"nodeType":"3436","messageId":"3437","endLine":149,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3525","line":151,"column":7,"nodeType":"3436","messageId":"3437","endLine":151,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3526","line":152,"column":7,"nodeType":"3436","messageId":"3437","endLine":152,"endColumn":17},{"ruleId":"3527","severity":1,"message":"3528","line":277,"column":11,"nodeType":"3436","messageId":"3529","endLine":277,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3530","line":355,"column":7,"nodeType":"3436","messageId":"3437","endLine":355,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":10,"column":14,"nodeType":"3440","messageId":"3441","endLine":10,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":13,"column":31,"nodeType":"3440","messageId":"3441","endLine":13,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":21,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":33,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":35},{"ruleId":"3476","severity":1,"message":"3477","line":39,"column":13,"nodeType":"3478","endLine":39,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3477","line":58,"column":13,"nodeType":"3478","endLine":58,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3479","line":78,"column":13,"nodeType":"3478","endLine":85,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":99,"column":17,"nodeType":"3478","endLine":99,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":106,"column":17,"nodeType":"3478","endLine":106,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":113,"column":17,"nodeType":"3478","endLine":113,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":116,"column":17,"nodeType":"3478","endLine":116,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":123,"column":17,"nodeType":"3478","endLine":123,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":133,"column":17,"nodeType":"3478","endLine":133,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":143,"column":17,"nodeType":"3478","endLine":143,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":158,"column":13,"nodeType":"3478","endLine":158,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3477","line":169,"column":13,"nodeType":"3478","endLine":169,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3477","line":176,"column":13,"nodeType":"3478","endLine":176,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3477","line":187,"column":13,"nodeType":"3478","endLine":187,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3477","line":198,"column":13,"nodeType":"3478","endLine":198,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3479","line":209,"column":13,"nodeType":"3478","endLine":216,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":230,"column":17,"nodeType":"3478","endLine":230,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":233,"column":17,"nodeType":"3478","endLine":233,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":239,"column":13,"nodeType":"3478","endLine":239,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3479","line":252,"column":13,"nodeType":"3478","endLine":259,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":273,"column":17,"nodeType":"3478","endLine":273,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":280,"column":17,"nodeType":"3478","endLine":280,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":287,"column":17,"nodeType":"3478","endLine":287,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":294,"column":17,"nodeType":"3478","endLine":294,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3479","line":300,"column":13,"nodeType":"3478","endLine":307,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":317,"column":17,"nodeType":"3478","endLine":317,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":320,"column":17,"nodeType":"3478","endLine":320,"endColumn":43},{"ruleId":"3443","severity":1,"message":"3474","line":17,"column":6,"nodeType":"3445","endLine":17,"endColumn":8,"suggestions":"3531"},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":10,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3481","line":4,"column":22,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":39},{"ruleId":"3434","severity":1,"message":"3482","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":22,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3506","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":25,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":35},{"ruleId":"3434","severity":1,"message":"3507","line":19,"column":9,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3483","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":42,"column":14,"nodeType":"3440","messageId":"3441","endLine":42,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3489","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3492","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3468","line":26,"column":9,"nodeType":"3436","messageId":"3437","endLine":26,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":159,"column":56,"nodeType":"3440","messageId":"3441","endLine":159,"endColumn":58},{"ruleId":"3434","severity":1,"message":"3532","line":161,"column":9,"nodeType":"3436","messageId":"3437","endLine":161,"endColumn":17},{"ruleId":"3502","severity":1,"message":"3533","line":164,"column":18,"nodeType":"3504","messageId":"3534","endLine":164,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3439","line":165,"column":60,"nodeType":"3440","messageId":"3441","endLine":165,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":185,"column":56,"nodeType":"3440","messageId":"3441","endLine":185,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":222,"column":54,"nodeType":"3440","messageId":"3441","endLine":222,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":223,"column":54,"nodeType":"3440","messageId":"3441","endLine":223,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":244,"column":55,"nodeType":"3440","messageId":"3441","endLine":244,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":245,"column":55,"nodeType":"3440","messageId":"3441","endLine":245,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":270,"column":55,"nodeType":"3440","messageId":"3441","endLine":270,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":271,"column":55,"nodeType":"3440","messageId":"3441","endLine":271,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":298,"column":56,"nodeType":"3440","messageId":"3441","endLine":298,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":299,"column":56,"nodeType":"3440","messageId":"3441","endLine":299,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":326,"column":57,"nodeType":"3440","messageId":"3441","endLine":326,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":327,"column":57,"nodeType":"3440","messageId":"3441","endLine":327,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":355,"column":57,"nodeType":"3440","messageId":"3441","endLine":355,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":356,"column":57,"nodeType":"3440","messageId":"3441","endLine":356,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":384,"column":54,"nodeType":"3440","messageId":"3441","endLine":384,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":385,"column":54,"nodeType":"3440","messageId":"3441","endLine":385,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":414,"column":54,"nodeType":"3440","messageId":"3441","endLine":414,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":415,"column":54,"nodeType":"3440","messageId":"3441","endLine":415,"endColumn":56},{"ruleId":"3434","severity":1,"message":"3480","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":23,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3484","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3485","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3486","line":9,"column":3,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3468","line":28,"column":9,"nodeType":"3436","messageId":"3437","endLine":28,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":133,"column":32,"nodeType":"3440","messageId":"3441","endLine":133,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":158,"column":49,"nodeType":"3440","messageId":"3441","endLine":158,"endColumn":51},{"ruleId":"3438","severity":1,"message":"3439","line":159,"column":49,"nodeType":"3440","messageId":"3441","endLine":159,"endColumn":51},{"ruleId":"3438","severity":1,"message":"3439","line":292,"column":51,"nodeType":"3440","messageId":"3441","endLine":292,"endColumn":53},{"ruleId":"3438","severity":1,"message":"3439","line":293,"column":51,"nodeType":"3440","messageId":"3441","endLine":293,"endColumn":53},{"ruleId":"3438","severity":1,"message":"3439","line":324,"column":63,"nodeType":"3440","messageId":"3441","endLine":324,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":325,"column":63,"nodeType":"3440","messageId":"3441","endLine":325,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":357,"column":63,"nodeType":"3440","messageId":"3441","endLine":357,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":358,"column":63,"nodeType":"3440","messageId":"3441","endLine":358,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":390,"column":64,"nodeType":"3440","messageId":"3441","endLine":390,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":391,"column":64,"nodeType":"3440","messageId":"3441","endLine":391,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":423,"column":63,"nodeType":"3440","messageId":"3441","endLine":423,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":424,"column":63,"nodeType":"3440","messageId":"3441","endLine":424,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":456,"column":62,"nodeType":"3440","messageId":"3441","endLine":456,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":457,"column":62,"nodeType":"3440","messageId":"3441","endLine":457,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":489,"column":62,"nodeType":"3440","messageId":"3441","endLine":489,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":490,"column":62,"nodeType":"3440","messageId":"3441","endLine":490,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":522,"column":60,"nodeType":"3440","messageId":"3441","endLine":522,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":523,"column":60,"nodeType":"3440","messageId":"3441","endLine":523,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":554,"column":53,"nodeType":"3440","messageId":"3441","endLine":554,"endColumn":55},{"ruleId":"3438","severity":1,"message":"3439","line":555,"column":53,"nodeType":"3440","messageId":"3441","endLine":555,"endColumn":55},{"ruleId":"3438","severity":1,"message":"3439","line":586,"column":50,"nodeType":"3440","messageId":"3441","endLine":586,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":587,"column":50,"nodeType":"3440","messageId":"3441","endLine":587,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":15,"column":12,"nodeType":"3440","messageId":"3441","endLine":15,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":19,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":15,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3468","line":30,"column":9,"nodeType":"3436","messageId":"3437","endLine":30,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":58,"column":54,"nodeType":"3440","messageId":"3441","endLine":58,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":57,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":76,"column":59,"nodeType":"3440","messageId":"3441","endLine":76,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":17,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":30,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":32},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":18,"column":50,"nodeType":"3440","messageId":"3441","endLine":18,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":75,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":77},{"ruleId":"3438","severity":1,"message":"3439","line":63,"column":45,"nodeType":"3440","messageId":"3441","endLine":63,"endColumn":47},{"ruleId":"3438","severity":1,"message":"3449","line":69,"column":31,"nodeType":"3440","messageId":"3441","endLine":69,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3449","line":70,"column":31,"nodeType":"3440","messageId":"3441","endLine":70,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":162,"column":64,"nodeType":"3440","messageId":"3441","endLine":162,"endColumn":66},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":13,"column":3,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":33,"column":9,"nodeType":"3436","messageId":"3437","endLine":33,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":102,"column":29,"nodeType":"3440","messageId":"3441","endLine":102,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":120,"column":29,"nodeType":"3440","messageId":"3441","endLine":120,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3473","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3512","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3513","line":13,"column":14,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3514","line":20,"column":19,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":29},{"ruleId":"3443","severity":1,"message":"3451","line":21,"column":6,"nodeType":"3445","endLine":21,"endColumn":8,"suggestions":"3535"},{"ruleId":"3434","severity":1,"message":"3516","line":23,"column":9,"nodeType":"3436","messageId":"3437","endLine":23,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":31,"column":23,"nodeType":"3440","messageId":"3441","endLine":31,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":33,"column":30,"nodeType":"3440","messageId":"3441","endLine":33,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":35,"column":30,"nodeType":"3440","messageId":"3441","endLine":35,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":195,"column":30,"nodeType":"3440","messageId":"3441","endLine":195,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":222,"column":14,"nodeType":"3440","messageId":"3441","endLine":222,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":241,"column":15,"nodeType":"3440","messageId":"3441","endLine":241,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3481","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":11,"column":3,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":31,"column":9,"nodeType":"3436","messageId":"3437","endLine":31,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3510","line":66,"column":6,"nodeType":"3445","endLine":66,"endColumn":30,"suggestions":"3536"},{"ruleId":"3438","severity":1,"message":"3439","line":111,"column":29,"nodeType":"3440","messageId":"3441","endLine":111,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3537","line":1,"column":28,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":36},{"ruleId":"3434","severity":1,"message":"3538","line":12,"column":7,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":15,"column":12,"nodeType":"3440","messageId":"3441","endLine":15,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":19,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":15,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3468","line":30,"column":9,"nodeType":"3436","messageId":"3437","endLine":30,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":76,"column":53,"nodeType":"3440","messageId":"3441","endLine":76,"endColumn":55},{"ruleId":"3434","severity":1,"message":"3537","line":1,"column":28,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":36},{"ruleId":"3434","severity":1,"message":"3538","line":12,"column":7,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":15,"column":12,"nodeType":"3440","messageId":"3441","endLine":15,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":19,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":15,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3468","line":30,"column":9,"nodeType":"3436","messageId":"3437","endLine":30,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":76,"column":53,"nodeType":"3440","messageId":"3441","endLine":76,"endColumn":55},{"ruleId":"3443","severity":1,"message":"3474","line":17,"column":6,"nodeType":"3445","endLine":17,"endColumn":8,"suggestions":"3539"},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":10,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3481","line":4,"column":22,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":39},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3540","line":9,"column":9,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":10,"column":14,"nodeType":"3440","messageId":"3441","endLine":10,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":13,"column":31,"nodeType":"3440","messageId":"3441","endLine":13,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":21,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":33,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":35},{"ruleId":"3476","severity":1,"message":"3477","line":39,"column":13,"nodeType":"3478","endLine":39,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3477","line":50,"column":13,"nodeType":"3478","endLine":50,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3477","line":58,"column":13,"nodeType":"3478","endLine":58,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3479","line":71,"column":13,"nodeType":"3478","endLine":78,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":116,"column":17,"nodeType":"3478","endLine":116,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3479","line":122,"column":13,"nodeType":"3478","endLine":129,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":139,"column":17,"nodeType":"3478","endLine":139,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":142,"column":17,"nodeType":"3478","endLine":142,"endColumn":43},{"ruleId":"3434","severity":1,"message":"3506","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":25,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":35},{"ruleId":"3434","severity":1,"message":"3507","line":19,"column":9,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3482","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":22,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3483","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3489","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3492","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3468","line":25,"column":9,"nodeType":"3436","messageId":"3437","endLine":25,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":172,"column":54,"nodeType":"3440","messageId":"3441","endLine":172,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":173,"column":54,"nodeType":"3440","messageId":"3441","endLine":173,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":194,"column":55,"nodeType":"3440","messageId":"3441","endLine":194,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":195,"column":55,"nodeType":"3440","messageId":"3441","endLine":195,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":220,"column":55,"nodeType":"3440","messageId":"3441","endLine":220,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":221,"column":55,"nodeType":"3440","messageId":"3441","endLine":221,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":248,"column":56,"nodeType":"3440","messageId":"3441","endLine":248,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":249,"column":56,"nodeType":"3440","messageId":"3441","endLine":249,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":276,"column":57,"nodeType":"3440","messageId":"3441","endLine":276,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":277,"column":57,"nodeType":"3440","messageId":"3441","endLine":277,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":305,"column":57,"nodeType":"3440","messageId":"3441","endLine":305,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":306,"column":57,"nodeType":"3440","messageId":"3441","endLine":306,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":334,"column":54,"nodeType":"3440","messageId":"3441","endLine":334,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":335,"column":54,"nodeType":"3440","messageId":"3441","endLine":335,"endColumn":56},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":42,"column":14,"nodeType":"3440","messageId":"3441","endLine":42,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":15,"column":12,"nodeType":"3440","messageId":"3441","endLine":15,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":19,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":15,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3468","line":30,"column":9,"nodeType":"3436","messageId":"3437","endLine":30,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":58,"column":54,"nodeType":"3440","messageId":"3441","endLine":58,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":57,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":76,"column":59,"nodeType":"3440","messageId":"3441","endLine":76,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":17,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":30,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":18,"column":50,"nodeType":"3440","messageId":"3441","endLine":18,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":75,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":77},{"ruleId":"3438","severity":1,"message":"3439","line":63,"column":45,"nodeType":"3440","messageId":"3441","endLine":63,"endColumn":47},{"ruleId":"3438","severity":1,"message":"3449","line":69,"column":31,"nodeType":"3440","messageId":"3441","endLine":69,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3449","line":70,"column":31,"nodeType":"3440","messageId":"3441","endLine":70,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":162,"column":64,"nodeType":"3440","messageId":"3441","endLine":162,"endColumn":66},{"ruleId":"3434","severity":1,"message":"3484","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3485","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3486","line":9,"column":3,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3468","line":28,"column":9,"nodeType":"3436","messageId":"3437","endLine":28,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":133,"column":32,"nodeType":"3440","messageId":"3441","endLine":133,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":158,"column":49,"nodeType":"3440","messageId":"3441","endLine":158,"endColumn":51},{"ruleId":"3438","severity":1,"message":"3439","line":159,"column":49,"nodeType":"3440","messageId":"3441","endLine":159,"endColumn":51},{"ruleId":"3438","severity":1,"message":"3439","line":292,"column":51,"nodeType":"3440","messageId":"3441","endLine":292,"endColumn":53},{"ruleId":"3438","severity":1,"message":"3439","line":293,"column":51,"nodeType":"3440","messageId":"3441","endLine":293,"endColumn":53},{"ruleId":"3438","severity":1,"message":"3439","line":324,"column":63,"nodeType":"3440","messageId":"3441","endLine":324,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":325,"column":63,"nodeType":"3440","messageId":"3441","endLine":325,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":357,"column":63,"nodeType":"3440","messageId":"3441","endLine":357,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":358,"column":63,"nodeType":"3440","messageId":"3441","endLine":358,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":390,"column":64,"nodeType":"3440","messageId":"3441","endLine":390,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":391,"column":64,"nodeType":"3440","messageId":"3441","endLine":391,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":423,"column":63,"nodeType":"3440","messageId":"3441","endLine":423,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":424,"column":63,"nodeType":"3440","messageId":"3441","endLine":424,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":456,"column":62,"nodeType":"3440","messageId":"3441","endLine":456,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":457,"column":62,"nodeType":"3440","messageId":"3441","endLine":457,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":489,"column":62,"nodeType":"3440","messageId":"3441","endLine":489,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":490,"column":62,"nodeType":"3440","messageId":"3441","endLine":490,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":522,"column":60,"nodeType":"3440","messageId":"3441","endLine":522,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":523,"column":60,"nodeType":"3440","messageId":"3441","endLine":523,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":554,"column":53,"nodeType":"3440","messageId":"3441","endLine":554,"endColumn":55},{"ruleId":"3438","severity":1,"message":"3439","line":555,"column":53,"nodeType":"3440","messageId":"3441","endLine":555,"endColumn":55},{"ruleId":"3438","severity":1,"message":"3439","line":586,"column":50,"nodeType":"3440","messageId":"3441","endLine":586,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":587,"column":50,"nodeType":"3440","messageId":"3441","endLine":587,"endColumn":52},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3481","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":11,"column":3,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":31,"column":9,"nodeType":"3436","messageId":"3437","endLine":31,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3510","line":66,"column":6,"nodeType":"3445","endLine":66,"endColumn":30,"suggestions":"3541"},{"ruleId":"3438","severity":1,"message":"3439","line":111,"column":29,"nodeType":"3440","messageId":"3441","endLine":111,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":13,"column":3,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":33,"column":9,"nodeType":"3436","messageId":"3437","endLine":33,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":102,"column":29,"nodeType":"3440","messageId":"3441","endLine":102,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":120,"column":29,"nodeType":"3440","messageId":"3441","endLine":120,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3473","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3512","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3513","line":13,"column":14,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3514","line":20,"column":19,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":29},{"ruleId":"3434","severity":1,"message":"3480","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":23,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3443","severity":1,"message":"3451","line":20,"column":6,"nodeType":"3445","endLine":20,"endColumn":8,"suggestions":"3542"},{"ruleId":"3434","severity":1,"message":"3516","line":22,"column":9,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":30,"column":23,"nodeType":"3440","messageId":"3441","endLine":30,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":32,"column":30,"nodeType":"3440","messageId":"3441","endLine":32,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":34,"column":30,"nodeType":"3440","messageId":"3441","endLine":34,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":192,"column":14,"nodeType":"3440","messageId":"3441","endLine":192,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":213,"column":15,"nodeType":"3440","messageId":"3441","endLine":213,"endColumn":17},{"ruleId":"3438","severity":1,"message":"3439","line":10,"column":14,"nodeType":"3440","messageId":"3441","endLine":10,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":13,"column":31,"nodeType":"3440","messageId":"3441","endLine":13,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":21,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":33,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":35},{"ruleId":"3476","severity":1,"message":"3477","line":39,"column":13,"nodeType":"3478","endLine":39,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3477","line":61,"column":13,"nodeType":"3478","endLine":61,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3479","line":81,"column":13,"nodeType":"3478","endLine":88,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":102,"column":17,"nodeType":"3478","endLine":102,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":109,"column":17,"nodeType":"3478","endLine":109,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":116,"column":17,"nodeType":"3478","endLine":116,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":119,"column":17,"nodeType":"3478","endLine":119,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3479","line":185,"column":13,"nodeType":"3478","endLine":192,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":202,"column":17,"nodeType":"3478","endLine":202,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":205,"column":17,"nodeType":"3478","endLine":205,"endColumn":43},{"ruleId":"3443","severity":1,"message":"3474","line":17,"column":6,"nodeType":"3445","endLine":17,"endColumn":8,"suggestions":"3543"},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":10,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3481","line":4,"column":22,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":39},{"ruleId":"3434","severity":1,"message":"3517","line":6,"column":10,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3518","line":6,"column":17,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":22},{"ruleId":"3434","severity":1,"message":"3519","line":6,"column":24,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":29},{"ruleId":"3434","severity":1,"message":"3520","line":7,"column":8,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3521","line":15,"column":15,"nodeType":"3436","messageId":"3437","endLine":15,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3522","line":20,"column":10,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3523","line":20,"column":15,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":35,"column":16,"nodeType":"3440","messageId":"3441","endLine":35,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":37,"column":23,"nodeType":"3440","messageId":"3441","endLine":37,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":39,"column":23,"nodeType":"3440","messageId":"3441","endLine":39,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":86,"column":16,"nodeType":"3440","messageId":"3441","endLine":86,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":125,"column":22,"nodeType":"3440","messageId":"3441","endLine":125,"endColumn":24},{"ruleId":"3434","severity":1,"message":"3524","line":149,"column":9,"nodeType":"3436","messageId":"3437","endLine":149,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3525","line":151,"column":7,"nodeType":"3436","messageId":"3437","endLine":151,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3526","line":152,"column":7,"nodeType":"3436","messageId":"3437","endLine":152,"endColumn":17},{"ruleId":"3527","severity":1,"message":"3528","line":277,"column":11,"nodeType":"3436","messageId":"3529","endLine":277,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3530","line":355,"column":7,"nodeType":"3436","messageId":"3437","endLine":355,"endColumn":20},{"ruleId":"3443","severity":1,"message":"3451","line":21,"column":6,"nodeType":"3445","endLine":21,"endColumn":8,"suggestions":"3544"},{"ruleId":"3434","severity":1,"message":"3516","line":23,"column":9,"nodeType":"3436","messageId":"3437","endLine":23,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":31,"column":23,"nodeType":"3440","messageId":"3441","endLine":31,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":33,"column":30,"nodeType":"3440","messageId":"3441","endLine":33,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":35,"column":30,"nodeType":"3440","messageId":"3441","endLine":35,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":195,"column":30,"nodeType":"3440","messageId":"3441","endLine":195,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":222,"column":14,"nodeType":"3440","messageId":"3441","endLine":222,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":241,"column":15,"nodeType":"3440","messageId":"3441","endLine":241,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3480","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":23,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3482","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":22,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":13,"column":3,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":33,"column":9,"nodeType":"3436","messageId":"3437","endLine":33,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":102,"column":29,"nodeType":"3440","messageId":"3441","endLine":102,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":120,"column":29,"nodeType":"3440","messageId":"3441","endLine":120,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3473","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3512","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3513","line":13,"column":14,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3514","line":20,"column":19,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":29},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3481","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":11,"column":3,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":31,"column":9,"nodeType":"3436","messageId":"3437","endLine":31,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3510","line":66,"column":6,"nodeType":"3445","endLine":66,"endColumn":30,"suggestions":"3545"},{"ruleId":"3438","severity":1,"message":"3439","line":111,"column":29,"nodeType":"3440","messageId":"3441","endLine":111,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":18,"column":50,"nodeType":"3440","messageId":"3441","endLine":18,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":75,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":77},{"ruleId":"3438","severity":1,"message":"3439","line":63,"column":45,"nodeType":"3440","messageId":"3441","endLine":63,"endColumn":47},{"ruleId":"3438","severity":1,"message":"3449","line":69,"column":31,"nodeType":"3440","messageId":"3441","endLine":69,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3449","line":70,"column":31,"nodeType":"3440","messageId":"3441","endLine":70,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":162,"column":64,"nodeType":"3440","messageId":"3441","endLine":162,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":15,"column":12,"nodeType":"3440","messageId":"3441","endLine":15,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":19,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":15,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3468","line":30,"column":9,"nodeType":"3436","messageId":"3437","endLine":30,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":58,"column":54,"nodeType":"3440","messageId":"3441","endLine":58,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":57,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":76,"column":59,"nodeType":"3440","messageId":"3441","endLine":76,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":17,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":30,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":32},{"ruleId":"3434","severity":1,"message":"3484","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3485","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3486","line":9,"column":3,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3468","line":28,"column":9,"nodeType":"3436","messageId":"3437","endLine":28,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":133,"column":32,"nodeType":"3440","messageId":"3441","endLine":133,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":158,"column":49,"nodeType":"3440","messageId":"3441","endLine":158,"endColumn":51},{"ruleId":"3438","severity":1,"message":"3439","line":159,"column":49,"nodeType":"3440","messageId":"3441","endLine":159,"endColumn":51},{"ruleId":"3438","severity":1,"message":"3439","line":292,"column":51,"nodeType":"3440","messageId":"3441","endLine":292,"endColumn":53},{"ruleId":"3438","severity":1,"message":"3439","line":293,"column":51,"nodeType":"3440","messageId":"3441","endLine":293,"endColumn":53},{"ruleId":"3438","severity":1,"message":"3439","line":324,"column":63,"nodeType":"3440","messageId":"3441","endLine":324,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":325,"column":63,"nodeType":"3440","messageId":"3441","endLine":325,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":357,"column":63,"nodeType":"3440","messageId":"3441","endLine":357,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":358,"column":63,"nodeType":"3440","messageId":"3441","endLine":358,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":390,"column":64,"nodeType":"3440","messageId":"3441","endLine":390,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":391,"column":64,"nodeType":"3440","messageId":"3441","endLine":391,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":423,"column":63,"nodeType":"3440","messageId":"3441","endLine":423,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":424,"column":63,"nodeType":"3440","messageId":"3441","endLine":424,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":456,"column":62,"nodeType":"3440","messageId":"3441","endLine":456,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":457,"column":62,"nodeType":"3440","messageId":"3441","endLine":457,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":489,"column":62,"nodeType":"3440","messageId":"3441","endLine":489,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":490,"column":62,"nodeType":"3440","messageId":"3441","endLine":490,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":522,"column":60,"nodeType":"3440","messageId":"3441","endLine":522,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":523,"column":60,"nodeType":"3440","messageId":"3441","endLine":523,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":554,"column":53,"nodeType":"3440","messageId":"3441","endLine":554,"endColumn":55},{"ruleId":"3438","severity":1,"message":"3439","line":555,"column":53,"nodeType":"3440","messageId":"3441","endLine":555,"endColumn":55},{"ruleId":"3438","severity":1,"message":"3439","line":586,"column":50,"nodeType":"3440","messageId":"3441","endLine":586,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":587,"column":50,"nodeType":"3440","messageId":"3441","endLine":587,"endColumn":52},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3489","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3492","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3468","line":25,"column":9,"nodeType":"3436","messageId":"3437","endLine":25,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":172,"column":54,"nodeType":"3440","messageId":"3441","endLine":172,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":173,"column":54,"nodeType":"3440","messageId":"3441","endLine":173,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":194,"column":55,"nodeType":"3440","messageId":"3441","endLine":194,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":195,"column":55,"nodeType":"3440","messageId":"3441","endLine":195,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":220,"column":55,"nodeType":"3440","messageId":"3441","endLine":220,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":221,"column":55,"nodeType":"3440","messageId":"3441","endLine":221,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":248,"column":56,"nodeType":"3440","messageId":"3441","endLine":248,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":249,"column":56,"nodeType":"3440","messageId":"3441","endLine":249,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":276,"column":57,"nodeType":"3440","messageId":"3441","endLine":276,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":277,"column":57,"nodeType":"3440","messageId":"3441","endLine":277,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":305,"column":57,"nodeType":"3440","messageId":"3441","endLine":305,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":306,"column":57,"nodeType":"3440","messageId":"3441","endLine":306,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":334,"column":54,"nodeType":"3440","messageId":"3441","endLine":334,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":335,"column":54,"nodeType":"3440","messageId":"3441","endLine":335,"endColumn":56},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":42,"column":14,"nodeType":"3440","messageId":"3441","endLine":42,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3483","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3506","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":25,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":35},{"ruleId":"3434","severity":1,"message":"3507","line":19,"column":9,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3482","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":22,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3480","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":23,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3546","line":1,"column":16,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":22},{"ruleId":"3434","severity":1,"message":"3547","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3490","line":3,"column":10,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":30,"column":13,"nodeType":"3478","endLine":30,"endColumn":41},{"ruleId":"3434","severity":1,"message":"3548","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3549","line":35,"column":9,"nodeType":"3436","messageId":"3437","endLine":35,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3524","line":55,"column":9,"nodeType":"3436","messageId":"3437","endLine":55,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3525","line":57,"column":7,"nodeType":"3436","messageId":"3437","endLine":57,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3526","line":58,"column":7,"nodeType":"3436","messageId":"3437","endLine":58,"endColumn":17},{"ruleId":"3550","severity":1,"message":"3551","line":134,"column":22,"nodeType":"3436","messageId":"3552","endLine":134,"endColumn":29},{"ruleId":"3434","severity":1,"message":"3530","line":175,"column":7,"nodeType":"3436","messageId":"3437","endLine":175,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3553","line":200,"column":9,"nodeType":"3436","messageId":"3437","endLine":200,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3472","line":9,"column":3,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3554","line":11,"column":8,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3555","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3468","line":27,"column":9,"nodeType":"3436","messageId":"3437","endLine":27,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":34,"column":65,"nodeType":"3440","messageId":"3441","endLine":34,"endColumn":67},{"ruleId":"3443","severity":1,"message":"3556","line":52,"column":6,"nodeType":"3445","endLine":52,"endColumn":8,"suggestions":"3557"},{"ruleId":"3438","severity":1,"message":"3449","line":65,"column":12,"nodeType":"3440","messageId":"3441","endLine":65,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3449","line":82,"column":12,"nodeType":"3440","messageId":"3441","endLine":82,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":59,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3558","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":25,"suggestions":"3559"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3547","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3490","line":3,"column":10,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":30,"column":13,"nodeType":"3478","endLine":30,"endColumn":41},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3563"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3548","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3549","line":35,"column":9,"nodeType":"3436","messageId":"3437","endLine":35,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3524","line":55,"column":9,"nodeType":"3436","messageId":"3437","endLine":55,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3525","line":57,"column":7,"nodeType":"3436","messageId":"3437","endLine":57,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3526","line":58,"column":7,"nodeType":"3436","messageId":"3437","endLine":58,"endColumn":17},{"ruleId":"3550","severity":1,"message":"3551","line":134,"column":22,"nodeType":"3436","messageId":"3552","endLine":134,"endColumn":29},{"ruleId":"3434","severity":1,"message":"3530","line":175,"column":7,"nodeType":"3436","messageId":"3437","endLine":175,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3553","line":200,"column":9,"nodeType":"3436","messageId":"3437","endLine":200,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":56,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":58},{"ruleId":"3443","severity":1,"message":"3564","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3565"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":57,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":59},{"ruleId":"3443","severity":1,"message":"3566","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3567"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3554","line":8,"column":8,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3560","line":13,"column":10,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":13,"column":16,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":43,"column":39,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":104,"column":54,"nodeType":"3440","messageId":"3441","endLine":104,"endColumn":56},{"ruleId":"3434","severity":1,"message":"3472","line":9,"column":3,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3555","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3468","line":28,"column":9,"nodeType":"3436","messageId":"3437","endLine":28,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":35,"column":65,"nodeType":"3440","messageId":"3441","endLine":35,"endColumn":67},{"ruleId":"3443","severity":1,"message":"3556","line":54,"column":6,"nodeType":"3445","endLine":54,"endColumn":8,"suggestions":"3568"},{"ruleId":"3438","severity":1,"message":"3449","line":67,"column":12,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3449","line":95,"column":12,"nodeType":"3440","messageId":"3441","endLine":95,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3569","line":144,"column":9,"nodeType":"3436","messageId":"3437","endLine":144,"endColumn":17},{"ruleId":"3438","severity":1,"message":"3439","line":147,"column":30,"nodeType":"3440","messageId":"3441","endLine":147,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":232,"column":54,"nodeType":"3440","messageId":"3441","endLine":232,"endColumn":56},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3509","line":10,"column":3,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3448","line":22,"column":10,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3570","line":22,"column":16,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3468","line":27,"column":9,"nodeType":"3436","messageId":"3437","endLine":27,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":17,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":31,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":92,"column":29,"nodeType":"3440","messageId":"3441","endLine":92,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3571","line":107,"column":19,"nodeType":"3436","messageId":"3437","endLine":107,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":110,"column":29,"nodeType":"3440","messageId":"3441","endLine":110,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":53,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":55},{"ruleId":"3443","severity":1,"message":"3572","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3573"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3439","line":29,"column":64,"nodeType":"3440","messageId":"3441","endLine":29,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":33,"column":31,"nodeType":"3440","messageId":"3441","endLine":33,"endColumn":33},{"ruleId":"3443","severity":1,"message":"3574","line":36,"column":6,"nodeType":"3445","endLine":36,"endColumn":8,"suggestions":"3575"},{"ruleId":"3438","severity":1,"message":"3449","line":49,"column":18,"nodeType":"3440","messageId":"3441","endLine":49,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":58,"column":18,"nodeType":"3440","messageId":"3441","endLine":58,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":82,"column":54,"nodeType":"3440","messageId":"3441","endLine":82,"endColumn":56},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3468","line":22,"column":9,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":28,"column":61,"nodeType":"3440","messageId":"3441","endLine":28,"endColumn":63},{"ruleId":"3443","severity":1,"message":"3576","line":40,"column":6,"nodeType":"3445","endLine":40,"endColumn":8,"suggestions":"3577"},{"ruleId":"3438","severity":1,"message":"3449","line":53,"column":18,"nodeType":"3440","messageId":"3441","endLine":53,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":67,"column":18,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3578","line":3,"column":8,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3579","line":22,"column":31,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":36},{"ruleId":"3434","severity":1,"message":"3580","line":24,"column":10,"nodeType":"3436","messageId":"3437","endLine":24,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3581","line":27,"column":13,"nodeType":"3436","messageId":"3437","endLine":27,"endColumn":19},{"ruleId":"3582","severity":1,"message":"3583","line":40,"column":7,"nodeType":"3584","messageId":"3585","endLine":42,"endColumn":8},{"ruleId":"3582","severity":1,"message":"3583","line":45,"column":7,"nodeType":"3584","messageId":"3585","endLine":47,"endColumn":8},{"ruleId":"3434","severity":1,"message":"3586","line":59,"column":10,"nodeType":"3436","messageId":"3437","endLine":59,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3587","line":59,"column":15,"nodeType":"3436","messageId":"3437","endLine":59,"endColumn":21},{"ruleId":"3443","severity":1,"message":"3588","line":76,"column":6,"nodeType":"3445","endLine":76,"endColumn":56,"suggestions":"3589"},{"ruleId":"3434","severity":1,"message":"3590","line":79,"column":10,"nodeType":"3436","messageId":"3437","endLine":79,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":83,"column":55,"nodeType":"3440","messageId":"3441","endLine":83,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":92,"column":58,"nodeType":"3440","messageId":"3441","endLine":92,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":104,"column":27,"nodeType":"3440","messageId":"3441","endLine":104,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":117,"column":57,"nodeType":"3440","messageId":"3441","endLine":117,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":126,"column":59,"nodeType":"3440","messageId":"3441","endLine":126,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3591","line":148,"column":12,"nodeType":"3592","endLine":151,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3593","line":184,"column":6,"nodeType":"3445","endLine":184,"endColumn":24,"suggestions":"3594"},{"ruleId":"3443","severity":1,"message":"3595","line":190,"column":6,"nodeType":"3445","endLine":190,"endColumn":20,"suggestions":"3596"},{"ruleId":"3502","severity":1,"message":"3503","line":280,"column":38,"nodeType":"3504","messageId":"3505","endLine":280,"endColumn":40},{"ruleId":"3438","severity":1,"message":"3439","line":283,"column":63,"nodeType":"3440","messageId":"3441","endLine":283,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":290,"column":59,"nodeType":"3440","messageId":"3441","endLine":290,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":325,"column":14,"nodeType":"3440","messageId":"3441","endLine":325,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":410,"column":23,"nodeType":"3440","messageId":"3441","endLine":410,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":492,"column":33,"nodeType":"3440","messageId":"3441","endLine":492,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":513,"column":33,"nodeType":"3440","messageId":"3441","endLine":513,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":514,"column":32,"nodeType":"3440","messageId":"3441","endLine":514,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":515,"column":32,"nodeType":"3440","messageId":"3441","endLine":515,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":516,"column":32,"nodeType":"3440","messageId":"3441","endLine":516,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":517,"column":32,"nodeType":"3440","messageId":"3441","endLine":517,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":518,"column":32,"nodeType":"3440","messageId":"3441","endLine":518,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":519,"column":32,"nodeType":"3440","messageId":"3441","endLine":519,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":534,"column":33,"nodeType":"3440","messageId":"3441","endLine":534,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":550,"column":39,"nodeType":"3440","messageId":"3441","endLine":550,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":565,"column":23,"nodeType":"3440","messageId":"3441","endLine":565,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":566,"column":65,"nodeType":"3440","messageId":"3441","endLine":566,"endColumn":67},{"ruleId":"3438","severity":1,"message":"3439","line":617,"column":32,"nodeType":"3440","messageId":"3441","endLine":617,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":638,"column":23,"nodeType":"3440","messageId":"3441","endLine":638,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":639,"column":31,"nodeType":"3440","messageId":"3441","endLine":639,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":690,"column":23,"nodeType":"3440","messageId":"3441","endLine":690,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":691,"column":33,"nodeType":"3440","messageId":"3441","endLine":691,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":728,"column":54,"nodeType":"3440","messageId":"3441","endLine":728,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":757,"column":23,"nodeType":"3440","messageId":"3441","endLine":757,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":758,"column":32,"nodeType":"3440","messageId":"3441","endLine":758,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":792,"column":14,"nodeType":"3440","messageId":"3441","endLine":792,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":802,"column":21,"nodeType":"3440","messageId":"3441","endLine":802,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":812,"column":21,"nodeType":"3440","messageId":"3441","endLine":812,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":822,"column":21,"nodeType":"3440","messageId":"3441","endLine":822,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":832,"column":21,"nodeType":"3440","messageId":"3441","endLine":832,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3597","line":855,"column":9,"nodeType":"3436","messageId":"3437","endLine":855,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3598","line":868,"column":9,"nodeType":"3436","messageId":"3437","endLine":868,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":997,"column":46,"nodeType":"3440","messageId":"3441","endLine":997,"endColumn":48},{"ruleId":"3438","severity":1,"message":"3439","line":1036,"column":58,"nodeType":"3440","messageId":"3441","endLine":1036,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":1050,"column":58,"nodeType":"3440","messageId":"3441","endLine":1050,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":1064,"column":59,"nodeType":"3440","messageId":"3441","endLine":1064,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":1078,"column":58,"nodeType":"3440","messageId":"3441","endLine":1078,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":1092,"column":57,"nodeType":"3440","messageId":"3441","endLine":1092,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":1106,"column":57,"nodeType":"3440","messageId":"3441","endLine":1106,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":1120,"column":55,"nodeType":"3440","messageId":"3441","endLine":1120,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":1135,"column":37,"nodeType":"3440","messageId":"3441","endLine":1135,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":1138,"column":39,"nodeType":"3440","messageId":"3441","endLine":1138,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":1151,"column":38,"nodeType":"3440","messageId":"3441","endLine":1151,"endColumn":40},{"ruleId":"3438","severity":1,"message":"3439","line":1154,"column":40,"nodeType":"3440","messageId":"3441","endLine":1154,"endColumn":42},{"ruleId":"3438","severity":1,"message":"3439","line":1191,"column":65,"nodeType":"3440","messageId":"3441","endLine":1191,"endColumn":67},{"ruleId":"3438","severity":1,"message":"3439","line":1214,"column":54,"nodeType":"3440","messageId":"3441","endLine":1214,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":1216,"column":26,"nodeType":"3440","messageId":"3441","endLine":1216,"endColumn":28},{"ruleId":"3434","severity":1,"message":"3472","line":9,"column":3,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3554","line":11,"column":8,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3555","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3468","line":27,"column":9,"nodeType":"3436","messageId":"3437","endLine":27,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":34,"column":65,"nodeType":"3440","messageId":"3441","endLine":34,"endColumn":67},{"ruleId":"3443","severity":1,"message":"3556","line":52,"column":6,"nodeType":"3445","endLine":52,"endColumn":8,"suggestions":"3599"},{"ruleId":"3438","severity":1,"message":"3449","line":65,"column":12,"nodeType":"3440","messageId":"3441","endLine":65,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3449","line":82,"column":12,"nodeType":"3440","messageId":"3441","endLine":82,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":56,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":58},{"ruleId":"3443","severity":1,"message":"3564","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3600"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3601"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":56,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":58},{"ruleId":"3443","severity":1,"message":"3564","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3602"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3603"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3604","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3560","line":13,"column":10,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":13,"column":16,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":82,"column":54,"nodeType":"3440","messageId":"3441","endLine":82,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":54,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":31,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":33},{"ruleId":"3443","severity":1,"message":"3574","line":24,"column":6,"nodeType":"3445","endLine":24,"endColumn":8,"suggestions":"3605"},{"ruleId":"3438","severity":1,"message":"3449","line":37,"column":18,"nodeType":"3440","messageId":"3441","endLine":37,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":46,"column":18,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3468","line":22,"column":9,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":28,"column":61,"nodeType":"3440","messageId":"3441","endLine":28,"endColumn":63},{"ruleId":"3443","severity":1,"message":"3576","line":40,"column":6,"nodeType":"3445","endLine":40,"endColumn":8,"suggestions":"3606"},{"ruleId":"3438","severity":1,"message":"3449","line":53,"column":18,"nodeType":"3440","messageId":"3441","endLine":53,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":67,"column":18,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3607"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3604","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3560","line":13,"column":10,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":13,"column":16,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3608"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3578","line":3,"column":8,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3579","line":16,"column":31,"nodeType":"3436","messageId":"3437","endLine":16,"endColumn":36},{"ruleId":"3434","severity":1,"message":"3580","line":18,"column":10,"nodeType":"3436","messageId":"3437","endLine":18,"endColumn":19},{"ruleId":"3582","severity":1,"message":"3583","line":34,"column":7,"nodeType":"3584","messageId":"3585","endLine":36,"endColumn":8},{"ruleId":"3582","severity":1,"message":"3583","line":39,"column":7,"nodeType":"3584","messageId":"3585","endLine":41,"endColumn":8},{"ruleId":"3443","severity":1,"message":"3588","line":70,"column":6,"nodeType":"3445","endLine":70,"endColumn":56,"suggestions":"3609"},{"ruleId":"3434","severity":1,"message":"3590","line":73,"column":10,"nodeType":"3436","messageId":"3437","endLine":73,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":77,"column":55,"nodeType":"3440","messageId":"3441","endLine":77,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":86,"column":58,"nodeType":"3440","messageId":"3441","endLine":86,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":98,"column":27,"nodeType":"3440","messageId":"3441","endLine":98,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":111,"column":57,"nodeType":"3440","messageId":"3441","endLine":111,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":120,"column":59,"nodeType":"3440","messageId":"3441","endLine":120,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3591","line":142,"column":12,"nodeType":"3592","endLine":145,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3593","line":178,"column":6,"nodeType":"3445","endLine":178,"endColumn":24,"suggestions":"3610"},{"ruleId":"3443","severity":1,"message":"3595","line":184,"column":6,"nodeType":"3445","endLine":184,"endColumn":20,"suggestions":"3611"},{"ruleId":"3438","severity":1,"message":"3439","line":262,"column":14,"nodeType":"3440","messageId":"3441","endLine":262,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":339,"column":23,"nodeType":"3440","messageId":"3441","endLine":339,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":409,"column":33,"nodeType":"3440","messageId":"3441","endLine":409,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":430,"column":33,"nodeType":"3440","messageId":"3441","endLine":430,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":431,"column":32,"nodeType":"3440","messageId":"3441","endLine":431,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":432,"column":32,"nodeType":"3440","messageId":"3441","endLine":432,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":433,"column":32,"nodeType":"3440","messageId":"3441","endLine":433,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":434,"column":32,"nodeType":"3440","messageId":"3441","endLine":434,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":435,"column":32,"nodeType":"3440","messageId":"3441","endLine":435,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":436,"column":32,"nodeType":"3440","messageId":"3441","endLine":436,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":437,"column":32,"nodeType":"3440","messageId":"3441","endLine":437,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":453,"column":39,"nodeType":"3440","messageId":"3441","endLine":453,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":468,"column":23,"nodeType":"3440","messageId":"3441","endLine":468,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":469,"column":65,"nodeType":"3440","messageId":"3441","endLine":469,"endColumn":67},{"ruleId":"3438","severity":1,"message":"3439","line":517,"column":32,"nodeType":"3440","messageId":"3441","endLine":517,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":538,"column":23,"nodeType":"3440","messageId":"3441","endLine":538,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":539,"column":31,"nodeType":"3440","messageId":"3441","endLine":539,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":575,"column":23,"nodeType":"3440","messageId":"3441","endLine":575,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":576,"column":33,"nodeType":"3440","messageId":"3441","endLine":576,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":599,"column":54,"nodeType":"3440","messageId":"3441","endLine":599,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":626,"column":23,"nodeType":"3440","messageId":"3441","endLine":626,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":627,"column":32,"nodeType":"3440","messageId":"3441","endLine":627,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":636,"column":45,"nodeType":"3440","messageId":"3441","endLine":636,"endColumn":47},{"ruleId":"3438","severity":1,"message":"3439","line":661,"column":14,"nodeType":"3440","messageId":"3441","endLine":661,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":671,"column":21,"nodeType":"3440","messageId":"3441","endLine":671,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":681,"column":21,"nodeType":"3440","messageId":"3441","endLine":681,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":691,"column":21,"nodeType":"3440","messageId":"3441","endLine":691,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":701,"column":21,"nodeType":"3440","messageId":"3441","endLine":701,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3598","line":737,"column":9,"nodeType":"3436","messageId":"3437","endLine":737,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":990,"column":65,"nodeType":"3440","messageId":"3441","endLine":990,"endColumn":67},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":59,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3558","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":25,"suggestions":"3612"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3509","line":10,"column":3,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3448","line":22,"column":10,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3570","line":22,"column":16,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3468","line":27,"column":9,"nodeType":"3436","messageId":"3437","endLine":27,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":17,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":31,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":92,"column":29,"nodeType":"3440","messageId":"3441","endLine":92,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3571","line":107,"column":19,"nodeType":"3436","messageId":"3437","endLine":107,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":110,"column":29,"nodeType":"3440","messageId":"3441","endLine":110,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":57,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":59},{"ruleId":"3443","severity":1,"message":"3566","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3613"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":53,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":55},{"ruleId":"3443","severity":1,"message":"3572","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3614"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":17,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3449","line":58,"column":20,"nodeType":"3440","messageId":"3441","endLine":58,"endColumn":22},{"ruleId":"3438","severity":1,"message":"3439","line":151,"column":54,"nodeType":"3440","messageId":"3441","endLine":151,"endColumn":56},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":28,"column":39,"nodeType":"3440","messageId":"3441","endLine":28,"endColumn":41},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3449","line":4,"column":10,"nodeType":"3440","messageId":"3441","endLine":4,"endColumn":12},{"ruleId":"3438","severity":1,"message":"3449","line":5,"column":10,"nodeType":"3440","messageId":"3441","endLine":5,"endColumn":12},{"ruleId":"3438","severity":1,"message":"3449","line":6,"column":10,"nodeType":"3440","messageId":"3441","endLine":6,"endColumn":12},{"ruleId":"3438","severity":1,"message":"3449","line":8,"column":10,"nodeType":"3440","messageId":"3441","endLine":8,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":59,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3558","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":25,"suggestions":"3615"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3472","line":9,"column":3,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3555","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3468","line":28,"column":9,"nodeType":"3436","messageId":"3437","endLine":28,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":35,"column":65,"nodeType":"3440","messageId":"3441","endLine":35,"endColumn":67},{"ruleId":"3443","severity":1,"message":"3556","line":54,"column":6,"nodeType":"3445","endLine":54,"endColumn":8,"suggestions":"3616"},{"ruleId":"3438","severity":1,"message":"3449","line":67,"column":12,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3449","line":95,"column":12,"nodeType":"3440","messageId":"3441","endLine":95,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3569","line":144,"column":9,"nodeType":"3436","messageId":"3437","endLine":144,"endColumn":17},{"ruleId":"3438","severity":1,"message":"3439","line":147,"column":30,"nodeType":"3440","messageId":"3441","endLine":147,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":232,"column":54,"nodeType":"3440","messageId":"3441","endLine":232,"endColumn":56},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":56,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":58},{"ruleId":"3443","severity":1,"message":"3564","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3617"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3439","line":29,"column":64,"nodeType":"3440","messageId":"3441","endLine":29,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":33,"column":31,"nodeType":"3440","messageId":"3441","endLine":33,"endColumn":33},{"ruleId":"3443","severity":1,"message":"3574","line":36,"column":6,"nodeType":"3445","endLine":36,"endColumn":8,"suggestions":"3618"},{"ruleId":"3438","severity":1,"message":"3449","line":49,"column":18,"nodeType":"3440","messageId":"3441","endLine":49,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":58,"column":18,"nodeType":"3440","messageId":"3441","endLine":58,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3619","line":2,"column":18,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":46,"column":13,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":82,"column":54,"nodeType":"3440","messageId":"3441","endLine":82,"endColumn":56},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3468","line":22,"column":9,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":28,"column":61,"nodeType":"3440","messageId":"3441","endLine":28,"endColumn":63},{"ruleId":"3443","severity":1,"message":"3576","line":40,"column":6,"nodeType":"3445","endLine":40,"endColumn":8,"suggestions":"3620"},{"ruleId":"3438","severity":1,"message":"3449","line":53,"column":18,"nodeType":"3440","messageId":"3441","endLine":53,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":67,"column":18,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3621"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3604","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3560","line":13,"column":10,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":13,"column":16,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3622"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3509","line":10,"column":3,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3448","line":22,"column":10,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3570","line":22,"column":16,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3468","line":27,"column":9,"nodeType":"3436","messageId":"3437","endLine":27,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":17,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":31,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":92,"column":29,"nodeType":"3440","messageId":"3441","endLine":92,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3571","line":107,"column":19,"nodeType":"3436","messageId":"3437","endLine":107,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":110,"column":29,"nodeType":"3440","messageId":"3441","endLine":110,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":28,"column":39,"nodeType":"3440","messageId":"3441","endLine":28,"endColumn":41},{"ruleId":"3434","severity":1,"message":"3578","line":3,"column":8,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3518","line":16,"column":17,"nodeType":"3436","messageId":"3437","endLine":16,"endColumn":22},{"ruleId":"3434","severity":1,"message":"3579","line":16,"column":31,"nodeType":"3436","messageId":"3437","endLine":16,"endColumn":36},{"ruleId":"3434","severity":1,"message":"3580","line":18,"column":10,"nodeType":"3436","messageId":"3437","endLine":18,"endColumn":19},{"ruleId":"3582","severity":1,"message":"3583","line":34,"column":7,"nodeType":"3584","messageId":"3585","endLine":36,"endColumn":8},{"ruleId":"3582","severity":1,"message":"3583","line":39,"column":7,"nodeType":"3584","messageId":"3585","endLine":41,"endColumn":8},{"ruleId":"3443","severity":1,"message":"3588","line":70,"column":6,"nodeType":"3445","endLine":70,"endColumn":56,"suggestions":"3623"},{"ruleId":"3434","severity":1,"message":"3590","line":73,"column":10,"nodeType":"3436","messageId":"3437","endLine":73,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":77,"column":55,"nodeType":"3440","messageId":"3441","endLine":77,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":86,"column":58,"nodeType":"3440","messageId":"3441","endLine":86,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":98,"column":27,"nodeType":"3440","messageId":"3441","endLine":98,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":111,"column":57,"nodeType":"3440","messageId":"3441","endLine":111,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":120,"column":59,"nodeType":"3440","messageId":"3441","endLine":120,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3591","line":142,"column":12,"nodeType":"3592","endLine":145,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3593","line":178,"column":6,"nodeType":"3445","endLine":178,"endColumn":24,"suggestions":"3624"},{"ruleId":"3443","severity":1,"message":"3595","line":184,"column":6,"nodeType":"3445","endLine":184,"endColumn":20,"suggestions":"3625"},{"ruleId":"3626","severity":1,"message":"3627","line":298,"column":5,"nodeType":"3628","messageId":"3629","endLine":298,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3439","line":308,"column":14,"nodeType":"3440","messageId":"3441","endLine":308,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":385,"column":23,"nodeType":"3440","messageId":"3441","endLine":385,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":499,"column":39,"nodeType":"3440","messageId":"3441","endLine":499,"endColumn":41},{"ruleId":"3434","severity":1,"message":"3630","line":509,"column":9,"nodeType":"3436","messageId":"3437","endLine":509,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":514,"column":23,"nodeType":"3440","messageId":"3441","endLine":514,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":515,"column":65,"nodeType":"3440","messageId":"3441","endLine":515,"endColumn":67},{"ruleId":"3438","severity":1,"message":"3439","line":563,"column":32,"nodeType":"3440","messageId":"3441","endLine":563,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":584,"column":23,"nodeType":"3440","messageId":"3441","endLine":584,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":585,"column":31,"nodeType":"3440","messageId":"3441","endLine":585,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":621,"column":23,"nodeType":"3440","messageId":"3441","endLine":621,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":622,"column":33,"nodeType":"3440","messageId":"3441","endLine":622,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":645,"column":54,"nodeType":"3440","messageId":"3441","endLine":645,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":672,"column":23,"nodeType":"3440","messageId":"3441","endLine":672,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":673,"column":32,"nodeType":"3440","messageId":"3441","endLine":673,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":682,"column":45,"nodeType":"3440","messageId":"3441","endLine":682,"endColumn":47},{"ruleId":"3438","severity":1,"message":"3439","line":707,"column":14,"nodeType":"3440","messageId":"3441","endLine":707,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":717,"column":21,"nodeType":"3440","messageId":"3441","endLine":717,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":727,"column":21,"nodeType":"3440","messageId":"3441","endLine":727,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":737,"column":21,"nodeType":"3440","messageId":"3441","endLine":737,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":747,"column":21,"nodeType":"3440","messageId":"3441","endLine":747,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3598","line":783,"column":9,"nodeType":"3436","messageId":"3437","endLine":783,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":1036,"column":65,"nodeType":"3440","messageId":"3441","endLine":1036,"endColumn":67},{"ruleId":"3438","severity":1,"message":"3439","line":1058,"column":54,"nodeType":"3440","messageId":"3441","endLine":1058,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":1060,"column":26,"nodeType":"3440","messageId":"3441","endLine":1060,"endColumn":28},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":53,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":55},{"ruleId":"3443","severity":1,"message":"3572","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3631"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":57,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":59},{"ruleId":"3443","severity":1,"message":"3566","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3632"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3604","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3560","line":13,"column":10,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":13,"column":16,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3633"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3468","line":22,"column":9,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":28,"column":61,"nodeType":"3440","messageId":"3441","endLine":28,"endColumn":63},{"ruleId":"3443","severity":1,"message":"3576","line":40,"column":6,"nodeType":"3445","endLine":40,"endColumn":8,"suggestions":"3634"},{"ruleId":"3438","severity":1,"message":"3449","line":53,"column":18,"nodeType":"3440","messageId":"3441","endLine":53,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":67,"column":18,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":82,"column":54,"nodeType":"3440","messageId":"3441","endLine":82,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":54,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":31,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":33},{"ruleId":"3443","severity":1,"message":"3574","line":24,"column":6,"nodeType":"3445","endLine":24,"endColumn":8,"suggestions":"3635"},{"ruleId":"3438","severity":1,"message":"3449","line":37,"column":18,"nodeType":"3440","messageId":"3441","endLine":37,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":46,"column":18,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3578","line":3,"column":8,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3579","line":22,"column":31,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":36},{"ruleId":"3434","severity":1,"message":"3580","line":24,"column":10,"nodeType":"3436","messageId":"3437","endLine":24,"endColumn":19},{"ruleId":"3582","severity":1,"message":"3583","line":40,"column":7,"nodeType":"3584","messageId":"3585","endLine":42,"endColumn":8},{"ruleId":"3582","severity":1,"message":"3583","line":45,"column":7,"nodeType":"3584","messageId":"3585","endLine":47,"endColumn":8},{"ruleId":"3434","severity":1,"message":"3586","line":59,"column":10,"nodeType":"3436","messageId":"3437","endLine":59,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3587","line":59,"column":15,"nodeType":"3436","messageId":"3437","endLine":59,"endColumn":21},{"ruleId":"3443","severity":1,"message":"3588","line":76,"column":6,"nodeType":"3445","endLine":76,"endColumn":56,"suggestions":"3636"},{"ruleId":"3434","severity":1,"message":"3590","line":79,"column":10,"nodeType":"3436","messageId":"3437","endLine":79,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":83,"column":55,"nodeType":"3440","messageId":"3441","endLine":83,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":92,"column":58,"nodeType":"3440","messageId":"3441","endLine":92,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":104,"column":27,"nodeType":"3440","messageId":"3441","endLine":104,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":117,"column":57,"nodeType":"3440","messageId":"3441","endLine":117,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":126,"column":59,"nodeType":"3440","messageId":"3441","endLine":126,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3591","line":148,"column":12,"nodeType":"3592","endLine":151,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3593","line":184,"column":6,"nodeType":"3445","endLine":184,"endColumn":24,"suggestions":"3637"},{"ruleId":"3443","severity":1,"message":"3595","line":190,"column":6,"nodeType":"3445","endLine":190,"endColumn":20,"suggestions":"3638"},{"ruleId":"3502","severity":1,"message":"3503","line":280,"column":38,"nodeType":"3504","messageId":"3505","endLine":280,"endColumn":40},{"ruleId":"3438","severity":1,"message":"3439","line":283,"column":63,"nodeType":"3440","messageId":"3441","endLine":283,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":290,"column":59,"nodeType":"3440","messageId":"3441","endLine":290,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":325,"column":14,"nodeType":"3440","messageId":"3441","endLine":325,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":410,"column":23,"nodeType":"3440","messageId":"3441","endLine":410,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":492,"column":33,"nodeType":"3440","messageId":"3441","endLine":492,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":513,"column":33,"nodeType":"3440","messageId":"3441","endLine":513,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":514,"column":32,"nodeType":"3440","messageId":"3441","endLine":514,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":515,"column":32,"nodeType":"3440","messageId":"3441","endLine":515,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":516,"column":32,"nodeType":"3440","messageId":"3441","endLine":516,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":517,"column":32,"nodeType":"3440","messageId":"3441","endLine":517,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":518,"column":32,"nodeType":"3440","messageId":"3441","endLine":518,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":519,"column":32,"nodeType":"3440","messageId":"3441","endLine":519,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":534,"column":33,"nodeType":"3440","messageId":"3441","endLine":534,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":550,"column":39,"nodeType":"3440","messageId":"3441","endLine":550,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":565,"column":23,"nodeType":"3440","messageId":"3441","endLine":565,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":566,"column":65,"nodeType":"3440","messageId":"3441","endLine":566,"endColumn":67},{"ruleId":"3438","severity":1,"message":"3439","line":617,"column":32,"nodeType":"3440","messageId":"3441","endLine":617,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":638,"column":23,"nodeType":"3440","messageId":"3441","endLine":638,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":639,"column":31,"nodeType":"3440","messageId":"3441","endLine":639,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":697,"column":23,"nodeType":"3440","messageId":"3441","endLine":697,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":698,"column":33,"nodeType":"3440","messageId":"3441","endLine":698,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":734,"column":54,"nodeType":"3440","messageId":"3441","endLine":734,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":763,"column":23,"nodeType":"3440","messageId":"3441","endLine":763,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":764,"column":32,"nodeType":"3440","messageId":"3441","endLine":764,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":798,"column":14,"nodeType":"3440","messageId":"3441","endLine":798,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":808,"column":21,"nodeType":"3440","messageId":"3441","endLine":808,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":818,"column":21,"nodeType":"3440","messageId":"3441","endLine":818,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":828,"column":21,"nodeType":"3440","messageId":"3441","endLine":828,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":838,"column":21,"nodeType":"3440","messageId":"3441","endLine":838,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3597","line":861,"column":9,"nodeType":"3436","messageId":"3437","endLine":861,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3598","line":874,"column":9,"nodeType":"3436","messageId":"3437","endLine":874,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":1017,"column":46,"nodeType":"3440","messageId":"3441","endLine":1017,"endColumn":48},{"ruleId":"3438","severity":1,"message":"3439","line":1031,"column":58,"nodeType":"3440","messageId":"3441","endLine":1031,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":1045,"column":58,"nodeType":"3440","messageId":"3441","endLine":1045,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":1059,"column":59,"nodeType":"3440","messageId":"3441","endLine":1059,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":1073,"column":58,"nodeType":"3440","messageId":"3441","endLine":1073,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":1087,"column":57,"nodeType":"3440","messageId":"3441","endLine":1087,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":1101,"column":57,"nodeType":"3440","messageId":"3441","endLine":1101,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":1115,"column":55,"nodeType":"3440","messageId":"3441","endLine":1115,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":1131,"column":37,"nodeType":"3440","messageId":"3441","endLine":1131,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":1134,"column":39,"nodeType":"3440","messageId":"3441","endLine":1134,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":1148,"column":38,"nodeType":"3440","messageId":"3441","endLine":1148,"endColumn":40},{"ruleId":"3438","severity":1,"message":"3439","line":1151,"column":40,"nodeType":"3440","messageId":"3441","endLine":1151,"endColumn":42},{"ruleId":"3438","severity":1,"message":"3439","line":1185,"column":65,"nodeType":"3440","messageId":"3441","endLine":1185,"endColumn":67},{"ruleId":"3438","severity":1,"message":"3439","line":1208,"column":54,"nodeType":"3440","messageId":"3441","endLine":1208,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":1210,"column":26,"nodeType":"3440","messageId":"3441","endLine":1210,"endColumn":28},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3639"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3509","line":10,"column":3,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3448","line":22,"column":10,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3570","line":22,"column":16,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3468","line":27,"column":9,"nodeType":"3436","messageId":"3437","endLine":27,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":17,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":31,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":92,"column":29,"nodeType":"3440","messageId":"3441","endLine":92,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3571","line":107,"column":19,"nodeType":"3436","messageId":"3437","endLine":107,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":110,"column":29,"nodeType":"3440","messageId":"3441","endLine":110,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":57,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":59},{"ruleId":"3443","severity":1,"message":"3566","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3640"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3554","line":8,"column":8,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3560","line":13,"column":10,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":13,"column":16,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":43,"column":39,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":104,"column":54,"nodeType":"3440","messageId":"3441","endLine":104,"endColumn":56},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":56,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":58},{"ruleId":"3443","severity":1,"message":"3564","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3641"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3619","line":2,"column":18,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":45,"column":13,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":53,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":55},{"ruleId":"3443","severity":1,"message":"3572","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3642"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":59,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3558","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":25,"suggestions":"3643"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":10,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3481","line":4,"column":22,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":39},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3537","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3538","line":11,"column":7,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":14,"column":12,"nodeType":"3440","messageId":"3441","endLine":14,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":16,"column":19,"nodeType":"3440","messageId":"3441","endLine":16,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":19,"column":15,"nodeType":"3440","messageId":"3441","endLine":19,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3644","line":25,"column":9,"nodeType":"3436","messageId":"3437","endLine":25,"endColumn":12},{"ruleId":"3438","severity":1,"message":"3439","line":69,"column":35,"nodeType":"3440","messageId":"3441","endLine":69,"endColumn":37},{"ruleId":"3438","severity":1,"message":"3439","line":69,"column":66,"nodeType":"3440","messageId":"3441","endLine":69,"endColumn":68},{"ruleId":"3434","severity":1,"message":"3540","line":9,"column":9,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":10,"column":14,"nodeType":"3440","messageId":"3441","endLine":10,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":13,"column":31,"nodeType":"3440","messageId":"3441","endLine":13,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":21,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":33,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":35},{"ruleId":"3476","severity":1,"message":"3477","line":39,"column":13,"nodeType":"3478","endLine":39,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3479","line":59,"column":13,"nodeType":"3478","endLine":66,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":80,"column":17,"nodeType":"3478","endLine":80,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":87,"column":17,"nodeType":"3478","endLine":87,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":94,"column":17,"nodeType":"3478","endLine":94,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":97,"column":17,"nodeType":"3478","endLine":97,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3479","line":151,"column":13,"nodeType":"3478","endLine":158,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":168,"column":17,"nodeType":"3478","endLine":168,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":171,"column":17,"nodeType":"3478","endLine":171,"endColumn":43},{"ruleId":"3443","severity":1,"message":"3474","line":17,"column":6,"nodeType":"3445","endLine":17,"endColumn":8,"suggestions":"3645"},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3489","line":4,"column":10,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":25},{"ruleId":"3434","severity":1,"message":"3468","line":9,"column":9,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3481","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":11,"column":3,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":31,"column":9,"nodeType":"3436","messageId":"3437","endLine":31,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3510","line":62,"column":6,"nodeType":"3445","endLine":62,"endColumn":30,"suggestions":"3646"},{"ruleId":"3438","severity":1,"message":"3439","line":107,"column":29,"nodeType":"3440","messageId":"3441","endLine":107,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":13,"column":3,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":33,"column":9,"nodeType":"3436","messageId":"3437","endLine":33,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":102,"column":29,"nodeType":"3440","messageId":"3441","endLine":102,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":120,"column":29,"nodeType":"3440","messageId":"3441","endLine":120,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3484","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3485","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":10,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3486","line":7,"column":22,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3468","line":12,"column":9,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":116,"column":32,"nodeType":"3440","messageId":"3441","endLine":116,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":380,"column":37,"nodeType":"3440","messageId":"3441","endLine":380,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":383,"column":37,"nodeType":"3440","messageId":"3441","endLine":383,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":386,"column":37,"nodeType":"3440","messageId":"3441","endLine":386,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":389,"column":37,"nodeType":"3440","messageId":"3441","endLine":389,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":392,"column":37,"nodeType":"3440","messageId":"3441","endLine":392,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":395,"column":37,"nodeType":"3440","messageId":"3441","endLine":395,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":398,"column":37,"nodeType":"3440","messageId":"3441","endLine":398,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":401,"column":37,"nodeType":"3440","messageId":"3441","endLine":401,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":404,"column":37,"nodeType":"3440","messageId":"3441","endLine":404,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":18,"column":50,"nodeType":"3440","messageId":"3441","endLine":18,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":75,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":77},{"ruleId":"3438","severity":1,"message":"3439","line":63,"column":45,"nodeType":"3440","messageId":"3441","endLine":63,"endColumn":47},{"ruleId":"3438","severity":1,"message":"3449","line":69,"column":31,"nodeType":"3440","messageId":"3441","endLine":69,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3449","line":70,"column":31,"nodeType":"3440","messageId":"3441","endLine":70,"endColumn":33},{"ruleId":"3434","severity":1,"message":"3473","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3512","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3513","line":13,"column":14,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3514","line":20,"column":19,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":15,"column":12,"nodeType":"3440","messageId":"3441","endLine":15,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":19,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":15,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3468","line":30,"column":9,"nodeType":"3436","messageId":"3437","endLine":30,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":58,"column":54,"nodeType":"3440","messageId":"3441","endLine":58,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":57,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":76,"column":59,"nodeType":"3440","messageId":"3441","endLine":76,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":17,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":30,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":32},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3489","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3578","line":8,"column":8,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3491","line":10,"column":8,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3492","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3496","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3647","line":18,"column":9,"nodeType":"3436","messageId":"3437","endLine":18,"endColumn":24},{"ruleId":"3434","severity":1,"message":"3468","line":26,"column":9,"nodeType":"3436","messageId":"3437","endLine":26,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3500","line":137,"column":9,"nodeType":"3436","messageId":"3437","endLine":137,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3501","line":158,"column":9,"nodeType":"3436","messageId":"3437","endLine":158,"endColumn":18},{"ruleId":"3502","severity":1,"message":"3503","line":174,"column":38,"nodeType":"3504","messageId":"3505","endLine":174,"endColumn":40},{"ruleId":"3438","severity":1,"message":"3439","line":177,"column":63,"nodeType":"3440","messageId":"3441","endLine":177,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":231,"column":55,"nodeType":"3440","messageId":"3441","endLine":231,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":232,"column":55,"nodeType":"3440","messageId":"3441","endLine":232,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":259,"column":56,"nodeType":"3440","messageId":"3441","endLine":259,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":260,"column":56,"nodeType":"3440","messageId":"3441","endLine":260,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":287,"column":57,"nodeType":"3440","messageId":"3441","endLine":287,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":288,"column":57,"nodeType":"3440","messageId":"3441","endLine":288,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":316,"column":57,"nodeType":"3440","messageId":"3441","endLine":316,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":317,"column":57,"nodeType":"3440","messageId":"3441","endLine":317,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":345,"column":54,"nodeType":"3440","messageId":"3441","endLine":345,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":346,"column":54,"nodeType":"3440","messageId":"3441","endLine":346,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":375,"column":54,"nodeType":"3440","messageId":"3441","endLine":375,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":376,"column":54,"nodeType":"3440","messageId":"3441","endLine":376,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":418,"column":54,"nodeType":"3440","messageId":"3441","endLine":418,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":420,"column":26,"nodeType":"3440","messageId":"3441","endLine":420,"endColumn":28},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":42,"column":14,"nodeType":"3440","messageId":"3441","endLine":42,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3483","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3619","line":2,"column":18,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":45,"column":13,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3506","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":25,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":35},{"ruleId":"3434","severity":1,"message":"3507","line":19,"column":9,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":10,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3481","line":4,"column":22,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":39},{"ruleId":"3434","severity":1,"message":"3471","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":11},{"ruleId":"3434","severity":1,"message":"3472","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3473","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":25,"column":14,"nodeType":"3440","messageId":"3441","endLine":25,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":47,"column":14,"nodeType":"3440","messageId":"3441","endLine":47,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3482","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":22,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3480","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":21},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":23,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3443","severity":1,"message":"3474","line":17,"column":6,"nodeType":"3445","endLine":17,"endColumn":8,"suggestions":"3648"},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3477","line":13,"column":13,"nodeType":"3478","endLine":13,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3477","line":32,"column":13,"nodeType":"3478","endLine":32,"endColumn":16},{"ruleId":"3476","severity":1,"message":"3479","line":51,"column":13,"nodeType":"3478","endLine":58,"endColumn":14},{"ruleId":"3476","severity":1,"message":"3477","line":68,"column":17,"nodeType":"3478","endLine":68,"endColumn":20},{"ruleId":"3476","severity":1,"message":"3477","line":71,"column":17,"nodeType":"3478","endLine":71,"endColumn":43},{"ruleId":"3443","severity":1,"message":"3451","line":20,"column":6,"nodeType":"3445","endLine":20,"endColumn":8,"suggestions":"3649"},{"ruleId":"3434","severity":1,"message":"3516","line":22,"column":9,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":30,"column":23,"nodeType":"3440","messageId":"3441","endLine":30,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":32,"column":30,"nodeType":"3440","messageId":"3441","endLine":32,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":34,"column":30,"nodeType":"3440","messageId":"3441","endLine":34,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":192,"column":14,"nodeType":"3440","messageId":"3441","endLine":192,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":213,"column":15,"nodeType":"3440","messageId":"3441","endLine":213,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3473","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3512","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3513","line":13,"column":14,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3514","line":20,"column":19,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":29},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":13,"column":3,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":33,"column":9,"nodeType":"3436","messageId":"3437","endLine":33,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":102,"column":29,"nodeType":"3440","messageId":"3441","endLine":102,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":120,"column":29,"nodeType":"3440","messageId":"3441","endLine":120,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3481","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3508","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3509","line":11,"column":3,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3468","line":31,"column":9,"nodeType":"3436","messageId":"3437","endLine":31,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3510","line":66,"column":6,"nodeType":"3445","endLine":66,"endColumn":30,"suggestions":"3650"},{"ruleId":"3438","severity":1,"message":"3439","line":111,"column":29,"nodeType":"3440","messageId":"3441","endLine":111,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":18,"column":50,"nodeType":"3440","messageId":"3441","endLine":18,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":75,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":77},{"ruleId":"3438","severity":1,"message":"3439","line":63,"column":45,"nodeType":"3440","messageId":"3441","endLine":63,"endColumn":47},{"ruleId":"3438","severity":1,"message":"3449","line":69,"column":31,"nodeType":"3440","messageId":"3441","endLine":69,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3449","line":70,"column":31,"nodeType":"3440","messageId":"3441","endLine":70,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":162,"column":64,"nodeType":"3440","messageId":"3441","endLine":162,"endColumn":66},{"ruleId":"3434","severity":1,"message":"3484","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3485","line":5,"column":8,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3494","line":7,"column":10,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":22},{"ruleId":"3434","severity":1,"message":"3473","line":9,"column":3,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3486","line":10,"column":3,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3468","line":29,"column":9,"nodeType":"3436","messageId":"3437","endLine":29,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":108,"column":29,"nodeType":"3440","messageId":"3441","endLine":108,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":139,"column":29,"nodeType":"3440","messageId":"3441","endLine":139,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":141,"column":33,"nodeType":"3440","messageId":"3441","endLine":141,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":166,"column":49,"nodeType":"3440","messageId":"3441","endLine":166,"endColumn":51},{"ruleId":"3438","severity":1,"message":"3439","line":167,"column":49,"nodeType":"3440","messageId":"3441","endLine":167,"endColumn":51},{"ruleId":"3438","severity":1,"message":"3439","line":300,"column":51,"nodeType":"3440","messageId":"3441","endLine":300,"endColumn":53},{"ruleId":"3438","severity":1,"message":"3439","line":301,"column":51,"nodeType":"3440","messageId":"3441","endLine":301,"endColumn":53},{"ruleId":"3438","severity":1,"message":"3439","line":332,"column":63,"nodeType":"3440","messageId":"3441","endLine":332,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":333,"column":63,"nodeType":"3440","messageId":"3441","endLine":333,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":365,"column":63,"nodeType":"3440","messageId":"3441","endLine":365,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":366,"column":63,"nodeType":"3440","messageId":"3441","endLine":366,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":398,"column":64,"nodeType":"3440","messageId":"3441","endLine":398,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":399,"column":64,"nodeType":"3440","messageId":"3441","endLine":399,"endColumn":66},{"ruleId":"3438","severity":1,"message":"3439","line":431,"column":63,"nodeType":"3440","messageId":"3441","endLine":431,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":432,"column":63,"nodeType":"3440","messageId":"3441","endLine":432,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":464,"column":62,"nodeType":"3440","messageId":"3441","endLine":464,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":465,"column":62,"nodeType":"3440","messageId":"3441","endLine":465,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":497,"column":62,"nodeType":"3440","messageId":"3441","endLine":497,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":498,"column":62,"nodeType":"3440","messageId":"3441","endLine":498,"endColumn":64},{"ruleId":"3438","severity":1,"message":"3439","line":530,"column":60,"nodeType":"3440","messageId":"3441","endLine":530,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":531,"column":60,"nodeType":"3440","messageId":"3441","endLine":531,"endColumn":62},{"ruleId":"3438","severity":1,"message":"3439","line":563,"column":53,"nodeType":"3440","messageId":"3441","endLine":563,"endColumn":55},{"ruleId":"3438","severity":1,"message":"3439","line":564,"column":53,"nodeType":"3440","messageId":"3441","endLine":564,"endColumn":55},{"ruleId":"3438","severity":1,"message":"3439","line":595,"column":50,"nodeType":"3440","messageId":"3441","endLine":595,"endColumn":52},{"ruleId":"3438","severity":1,"message":"3439","line":596,"column":50,"nodeType":"3440","messageId":"3441","endLine":596,"endColumn":52},{"ruleId":"3434","severity":1,"message":"3487","line":3,"column":10,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3488","line":3,"column":16,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":24},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":3,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3489","line":6,"column":3,"nodeType":"3436","messageId":"3437","endLine":6,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3578","line":9,"column":8,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3491","line":11,"column":8,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3492","line":13,"column":8,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3493","line":14,"column":8,"nodeType":"3436","messageId":"3437","endLine":14,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3496","line":19,"column":9,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3647","line":20,"column":9,"nodeType":"3436","messageId":"3437","endLine":20,"endColumn":24},{"ruleId":"3434","severity":1,"message":"3497","line":23,"column":9,"nodeType":"3436","messageId":"3437","endLine":23,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3468","line":28,"column":9,"nodeType":"3436","messageId":"3437","endLine":28,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":65,"column":26,"nodeType":"3440","messageId":"3441","endLine":65,"endColumn":28},{"ruleId":"3434","severity":1,"message":"3500","line":145,"column":9,"nodeType":"3436","messageId":"3437","endLine":145,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3501","line":166,"column":9,"nodeType":"3436","messageId":"3437","endLine":166,"endColumn":18},{"ruleId":"3502","severity":1,"message":"3503","line":181,"column":38,"nodeType":"3504","messageId":"3505","endLine":181,"endColumn":40},{"ruleId":"3438","severity":1,"message":"3439","line":184,"column":63,"nodeType":"3440","messageId":"3441","endLine":184,"endColumn":65},{"ruleId":"3438","severity":1,"message":"3439","line":191,"column":59,"nodeType":"3440","messageId":"3441","endLine":191,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":317,"column":55,"nodeType":"3440","messageId":"3441","endLine":317,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":318,"column":55,"nodeType":"3440","messageId":"3441","endLine":318,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":345,"column":56,"nodeType":"3440","messageId":"3441","endLine":345,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":346,"column":56,"nodeType":"3440","messageId":"3441","endLine":346,"endColumn":58},{"ruleId":"3438","severity":1,"message":"3439","line":431,"column":54,"nodeType":"3440","messageId":"3441","endLine":431,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":432,"column":54,"nodeType":"3440","messageId":"3441","endLine":432,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":461,"column":54,"nodeType":"3440","messageId":"3441","endLine":461,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":462,"column":54,"nodeType":"3440","messageId":"3441","endLine":462,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":531,"column":54,"nodeType":"3440","messageId":"3441","endLine":531,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":533,"column":26,"nodeType":"3440","messageId":"3441","endLine":533,"endColumn":28},{"ruleId":"3438","severity":1,"message":"3439","line":15,"column":12,"nodeType":"3440","messageId":"3441","endLine":15,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":19,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":15,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3468","line":30,"column":9,"nodeType":"3436","messageId":"3437","endLine":30,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":58,"column":54,"nodeType":"3440","messageId":"3441","endLine":58,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":57,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":76,"column":59,"nodeType":"3440","messageId":"3441","endLine":76,"endColumn":61},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":17,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3439","line":87,"column":30,"nodeType":"3440","messageId":"3441","endLine":87,"endColumn":32},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":42,"column":14,"nodeType":"3440","messageId":"3441","endLine":42,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3483","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":28,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":38},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3506","line":5,"column":10,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":5,"column":25,"nodeType":"3436","messageId":"3437","endLine":5,"endColumn":35},{"ruleId":"3434","severity":1,"message":"3507","line":19,"column":9,"nodeType":"3436","messageId":"3437","endLine":19,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":20,"column":14,"nodeType":"3440","messageId":"3441","endLine":20,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":36,"column":14,"nodeType":"3440","messageId":"3441","endLine":36,"endColumn":16},{"ruleId":"3434","severity":1,"message":"3619","line":2,"column":18,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":46,"column":13,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3537","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3538","line":11,"column":7,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":14,"column":12,"nodeType":"3440","messageId":"3441","endLine":14,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":16,"column":19,"nodeType":"3440","messageId":"3441","endLine":16,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":19,"column":15,"nodeType":"3440","messageId":"3441","endLine":19,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3644","line":24,"column":9,"nodeType":"3436","messageId":"3437","endLine":24,"endColumn":12},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":35,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":37},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":66,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":68},{"ruleId":"3434","severity":1,"message":"3578","line":3,"column":8,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3518","line":16,"column":17,"nodeType":"3436","messageId":"3437","endLine":16,"endColumn":22},{"ruleId":"3434","severity":1,"message":"3579","line":16,"column":31,"nodeType":"3436","messageId":"3437","endLine":16,"endColumn":36},{"ruleId":"3434","severity":1,"message":"3580","line":18,"column":10,"nodeType":"3436","messageId":"3437","endLine":18,"endColumn":19},{"ruleId":"3582","severity":1,"message":"3583","line":34,"column":7,"nodeType":"3584","messageId":"3585","endLine":36,"endColumn":8},{"ruleId":"3582","severity":1,"message":"3583","line":39,"column":7,"nodeType":"3584","messageId":"3585","endLine":41,"endColumn":8},{"ruleId":"3443","severity":1,"message":"3588","line":70,"column":6,"nodeType":"3445","endLine":70,"endColumn":56,"suggestions":"3651"},{"ruleId":"3434","severity":1,"message":"3590","line":73,"column":10,"nodeType":"3436","messageId":"3437","endLine":73,"endColumn":15},{"ruleId":"3438","severity":1,"message":"3439","line":77,"column":55,"nodeType":"3440","messageId":"3441","endLine":77,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":86,"column":58,"nodeType":"3440","messageId":"3441","endLine":86,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":98,"column":27,"nodeType":"3440","messageId":"3441","endLine":98,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":111,"column":57,"nodeType":"3440","messageId":"3441","endLine":111,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":120,"column":59,"nodeType":"3440","messageId":"3441","endLine":120,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3591","line":142,"column":12,"nodeType":"3592","endLine":145,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3593","line":178,"column":6,"nodeType":"3445","endLine":178,"endColumn":24,"suggestions":"3652"},{"ruleId":"3443","severity":1,"message":"3595","line":184,"column":6,"nodeType":"3445","endLine":184,"endColumn":20,"suggestions":"3653"},{"ruleId":"3438","severity":1,"message":"3439","line":262,"column":14,"nodeType":"3440","messageId":"3441","endLine":262,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":339,"column":23,"nodeType":"3440","messageId":"3441","endLine":339,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":453,"column":39,"nodeType":"3440","messageId":"3441","endLine":453,"endColumn":41},{"ruleId":"3434","severity":1,"message":"3630","line":463,"column":9,"nodeType":"3436","messageId":"3437","endLine":463,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":468,"column":23,"nodeType":"3440","messageId":"3441","endLine":468,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":469,"column":65,"nodeType":"3440","messageId":"3441","endLine":469,"endColumn":67},{"ruleId":"3438","severity":1,"message":"3439","line":517,"column":32,"nodeType":"3440","messageId":"3441","endLine":517,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":538,"column":23,"nodeType":"3440","messageId":"3441","endLine":538,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":539,"column":31,"nodeType":"3440","messageId":"3441","endLine":539,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":575,"column":23,"nodeType":"3440","messageId":"3441","endLine":575,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":576,"column":33,"nodeType":"3440","messageId":"3441","endLine":576,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":599,"column":54,"nodeType":"3440","messageId":"3441","endLine":599,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":626,"column":23,"nodeType":"3440","messageId":"3441","endLine":626,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":627,"column":32,"nodeType":"3440","messageId":"3441","endLine":627,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":636,"column":45,"nodeType":"3440","messageId":"3441","endLine":636,"endColumn":47},{"ruleId":"3438","severity":1,"message":"3439","line":661,"column":14,"nodeType":"3440","messageId":"3441","endLine":661,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":671,"column":21,"nodeType":"3440","messageId":"3441","endLine":671,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":681,"column":21,"nodeType":"3440","messageId":"3441","endLine":681,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":691,"column":21,"nodeType":"3440","messageId":"3441","endLine":691,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":701,"column":21,"nodeType":"3440","messageId":"3441","endLine":701,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3598","line":737,"column":9,"nodeType":"3436","messageId":"3437","endLine":737,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":990,"column":65,"nodeType":"3440","messageId":"3441","endLine":990,"endColumn":67},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":59,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3558","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":25,"suggestions":"3654"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":57,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":59},{"ruleId":"3443","severity":1,"message":"3566","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3655"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":28,"column":39,"nodeType":"3440","messageId":"3441","endLine":28,"endColumn":41},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3509","line":10,"column":3,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3448","line":22,"column":10,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3570","line":22,"column":16,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3468","line":27,"column":9,"nodeType":"3436","messageId":"3437","endLine":27,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":17,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":31,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":92,"column":29,"nodeType":"3440","messageId":"3441","endLine":92,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3571","line":107,"column":19,"nodeType":"3436","messageId":"3437","endLine":107,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":110,"column":29,"nodeType":"3440","messageId":"3441","endLine":110,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3537","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3538","line":11,"column":7,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":14,"column":12,"nodeType":"3440","messageId":"3441","endLine":14,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":16,"column":19,"nodeType":"3440","messageId":"3441","endLine":16,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":19,"column":15,"nodeType":"3440","messageId":"3441","endLine":19,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3644","line":24,"column":9,"nodeType":"3436","messageId":"3437","endLine":24,"endColumn":12},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":35,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":37},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":66,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":68},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3468","line":22,"column":9,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":28,"column":61,"nodeType":"3440","messageId":"3441","endLine":28,"endColumn":63},{"ruleId":"3443","severity":1,"message":"3576","line":40,"column":6,"nodeType":"3445","endLine":40,"endColumn":8,"suggestions":"3656"},{"ruleId":"3438","severity":1,"message":"3449","line":53,"column":18,"nodeType":"3440","messageId":"3441","endLine":53,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":67,"column":18,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":54,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":56},{"ruleId":"3443","severity":1,"message":"3574","line":24,"column":6,"nodeType":"3445","endLine":24,"endColumn":8,"suggestions":"3657"},{"ruleId":"3438","severity":1,"message":"3449","line":37,"column":18,"nodeType":"3440","messageId":"3441","endLine":37,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":53,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":55},{"ruleId":"3443","severity":1,"message":"3572","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3658"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":57,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":59},{"ruleId":"3443","severity":1,"message":"3566","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3659"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":59,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3558","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":25,"suggestions":"3660"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3472","line":9,"column":3,"nodeType":"3436","messageId":"3437","endLine":9,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3554","line":11,"column":8,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3555","line":12,"column":8,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3468","line":27,"column":9,"nodeType":"3436","messageId":"3437","endLine":27,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":34,"column":65,"nodeType":"3440","messageId":"3441","endLine":34,"endColumn":67},{"ruleId":"3443","severity":1,"message":"3556","line":52,"column":6,"nodeType":"3445","endLine":52,"endColumn":8,"suggestions":"3661"},{"ruleId":"3438","severity":1,"message":"3449","line":65,"column":12,"nodeType":"3440","messageId":"3441","endLine":65,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3449","line":82,"column":12,"nodeType":"3440","messageId":"3441","endLine":82,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":53,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":55},{"ruleId":"3443","severity":1,"message":"3572","line":32,"column":6,"nodeType":"3445","endLine":32,"endColumn":8,"suggestions":"3662"},{"ruleId":"3438","severity":1,"message":"3449","line":45,"column":18,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":57,"column":18,"nodeType":"3440","messageId":"3441","endLine":57,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3578","line":3,"column":8,"nodeType":"3436","messageId":"3437","endLine":3,"endColumn":15},{"ruleId":"3626","severity":1,"message":"3627","line":93,"column":3,"nodeType":"3628","messageId":"3629","endLine":111,"endColumn":5},{"ruleId":"3438","severity":1,"message":"3439","line":123,"column":29,"nodeType":"3440","messageId":"3441","endLine":123,"endColumn":31},{"ruleId":"3438","severity":1,"message":"3439","line":123,"column":68,"nodeType":"3440","messageId":"3441","endLine":123,"endColumn":70},{"ruleId":"3438","severity":1,"message":"3439","line":126,"column":37,"nodeType":"3440","messageId":"3441","endLine":126,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":129,"column":37,"nodeType":"3440","messageId":"3441","endLine":129,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":132,"column":37,"nodeType":"3440","messageId":"3441","endLine":132,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":135,"column":37,"nodeType":"3440","messageId":"3441","endLine":135,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":138,"column":37,"nodeType":"3440","messageId":"3441","endLine":138,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":141,"column":37,"nodeType":"3440","messageId":"3441","endLine":141,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":144,"column":37,"nodeType":"3440","messageId":"3441","endLine":144,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":147,"column":37,"nodeType":"3440","messageId":"3441","endLine":147,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":150,"column":37,"nodeType":"3440","messageId":"3441","endLine":150,"endColumn":39},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3517","line":21,"column":24,"nodeType":"3436","messageId":"3437","endLine":21,"endColumn":29},{"ruleId":"3434","severity":1,"message":"3579","line":21,"column":31,"nodeType":"3436","messageId":"3437","endLine":21,"endColumn":36},{"ruleId":"3434","severity":1,"message":"3580","line":23,"column":10,"nodeType":"3436","messageId":"3437","endLine":23,"endColumn":19},{"ruleId":"3582","severity":1,"message":"3583","line":38,"column":7,"nodeType":"3584","messageId":"3585","endLine":40,"endColumn":8},{"ruleId":"3582","severity":1,"message":"3583","line":43,"column":7,"nodeType":"3584","messageId":"3585","endLine":45,"endColumn":8},{"ruleId":"3443","severity":1,"message":"3588","line":70,"column":6,"nodeType":"3445","endLine":70,"endColumn":56,"suggestions":"3663"},{"ruleId":"3438","severity":1,"message":"3439","line":76,"column":55,"nodeType":"3440","messageId":"3441","endLine":76,"endColumn":57},{"ruleId":"3438","severity":1,"message":"3439","line":85,"column":58,"nodeType":"3440","messageId":"3441","endLine":85,"endColumn":60},{"ruleId":"3438","severity":1,"message":"3439","line":97,"column":27,"nodeType":"3440","messageId":"3441","endLine":97,"endColumn":29},{"ruleId":"3438","severity":1,"message":"3439","line":110,"column":57,"nodeType":"3440","messageId":"3441","endLine":110,"endColumn":59},{"ruleId":"3438","severity":1,"message":"3439","line":119,"column":59,"nodeType":"3440","messageId":"3441","endLine":119,"endColumn":61},{"ruleId":"3443","severity":1,"message":"3591","line":141,"column":12,"nodeType":"3592","endLine":144,"endColumn":13},{"ruleId":"3443","severity":1,"message":"3595","line":167,"column":6,"nodeType":"3445","endLine":167,"endColumn":20,"suggestions":"3664"},{"ruleId":"3438","severity":1,"message":"3439","line":245,"column":14,"nodeType":"3440","messageId":"3441","endLine":245,"endColumn":16},{"ruleId":"3438","severity":1,"message":"3439","line":384,"column":41,"nodeType":"3440","messageId":"3441","endLine":384,"endColumn":43},{"ruleId":"3438","severity":1,"message":"3439","line":391,"column":31,"nodeType":"3440","messageId":"3441","endLine":391,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":392,"column":30,"nodeType":"3440","messageId":"3441","endLine":392,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":393,"column":30,"nodeType":"3440","messageId":"3441","endLine":393,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":394,"column":30,"nodeType":"3440","messageId":"3441","endLine":394,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":395,"column":30,"nodeType":"3440","messageId":"3441","endLine":395,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":396,"column":30,"nodeType":"3440","messageId":"3441","endLine":396,"endColumn":32},{"ruleId":"3438","severity":1,"message":"3439","line":412,"column":37,"nodeType":"3440","messageId":"3441","endLine":412,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":426,"column":23,"nodeType":"3440","messageId":"3441","endLine":426,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3439","line":428,"column":31,"nodeType":"3440","messageId":"3441","endLine":428,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":476,"column":32,"nodeType":"3440","messageId":"3441","endLine":476,"endColumn":34},{"ruleId":"3438","severity":1,"message":"3439","line":498,"column":23,"nodeType":"3440","messageId":"3441","endLine":498,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":499,"column":31,"nodeType":"3440","messageId":"3441","endLine":499,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":522,"column":54,"nodeType":"3440","messageId":"3441","endLine":522,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":550,"column":23,"nodeType":"3440","messageId":"3441","endLine":550,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":551,"column":33,"nodeType":"3440","messageId":"3441","endLine":551,"endColumn":35},{"ruleId":"3438","severity":1,"message":"3439","line":574,"column":54,"nodeType":"3440","messageId":"3441","endLine":574,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":601,"column":23,"nodeType":"3440","messageId":"3441","endLine":601,"endColumn":25},{"ruleId":"3438","severity":1,"message":"3449","line":602,"column":32,"nodeType":"3440","messageId":"3441","endLine":602,"endColumn":34},{"ruleId":"3434","severity":1,"message":"3598","line":648,"column":9,"nodeType":"3436","messageId":"3437","endLine":648,"endColumn":18},{"ruleId":"3665","severity":1,"message":"3666","line":907,"column":3,"nodeType":"3667","messageId":"3441","endLine":907,"endColumn":9},{"ruleId":"3438","severity":1,"message":"3439","line":908,"column":37,"nodeType":"3440","messageId":"3441","endLine":908,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":912,"column":37,"nodeType":"3440","messageId":"3441","endLine":912,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":915,"column":37,"nodeType":"3440","messageId":"3441","endLine":915,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":918,"column":37,"nodeType":"3440","messageId":"3441","endLine":918,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":921,"column":37,"nodeType":"3440","messageId":"3441","endLine":921,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":924,"column":37,"nodeType":"3440","messageId":"3441","endLine":924,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":927,"column":37,"nodeType":"3440","messageId":"3441","endLine":927,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":930,"column":37,"nodeType":"3440","messageId":"3441","endLine":930,"endColumn":39},{"ruleId":"3438","severity":1,"message":"3439","line":933,"column":37,"nodeType":"3440","messageId":"3441","endLine":933,"endColumn":39},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":56,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":58},{"ruleId":"3443","severity":1,"message":"3564","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3668"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3669"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3509","line":10,"column":3,"nodeType":"3436","messageId":"3437","endLine":10,"endColumn":9},{"ruleId":"3434","severity":1,"message":"3448","line":22,"column":10,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3570","line":22,"column":16,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3468","line":27,"column":9,"nodeType":"3436","messageId":"3437","endLine":27,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":17,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":19},{"ruleId":"3438","severity":1,"message":"3449","line":44,"column":31,"nodeType":"3440","messageId":"3441","endLine":44,"endColumn":33},{"ruleId":"3438","severity":1,"message":"3439","line":92,"column":29,"nodeType":"3440","messageId":"3441","endLine":92,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3571","line":107,"column":19,"nodeType":"3436","messageId":"3437","endLine":107,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":110,"column":29,"nodeType":"3440","messageId":"3441","endLine":110,"endColumn":31},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3604","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3560","line":13,"column":10,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":13,"column":16,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3670"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":28,"column":39,"nodeType":"3440","messageId":"3441","endLine":28,"endColumn":41},{"ruleId":"3438","severity":1,"message":"3439","line":17,"column":54,"nodeType":"3440","messageId":"3441","endLine":17,"endColumn":56},{"ruleId":"3438","severity":1,"message":"3439","line":21,"column":31,"nodeType":"3440","messageId":"3441","endLine":21,"endColumn":33},{"ruleId":"3443","severity":1,"message":"3574","line":24,"column":6,"nodeType":"3445","endLine":24,"endColumn":8,"suggestions":"3671"},{"ruleId":"3438","severity":1,"message":"3449","line":37,"column":18,"nodeType":"3440","messageId":"3441","endLine":37,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":46,"column":18,"nodeType":"3440","messageId":"3441","endLine":46,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":82,"column":54,"nodeType":"3440","messageId":"3441","endLine":82,"endColumn":56},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3468","line":22,"column":9,"nodeType":"3436","messageId":"3437","endLine":22,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":28,"column":61,"nodeType":"3440","messageId":"3441","endLine":28,"endColumn":63},{"ruleId":"3443","severity":1,"message":"3576","line":40,"column":6,"nodeType":"3445","endLine":40,"endColumn":8,"suggestions":"3672"},{"ruleId":"3438","severity":1,"message":"3449","line":53,"column":18,"nodeType":"3440","messageId":"3441","endLine":53,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":67,"column":18,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3560","line":12,"column":10,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":12,"column":16,"nodeType":"3436","messageId":"3437","endLine":12,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3537","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3538","line":11,"column":7,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":14,"column":12,"nodeType":"3440","messageId":"3441","endLine":14,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":16,"column":19,"nodeType":"3440","messageId":"3441","endLine":16,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":19,"column":15,"nodeType":"3440","messageId":"3441","endLine":19,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3644","line":25,"column":9,"nodeType":"3436","messageId":"3437","endLine":25,"endColumn":12},{"ruleId":"3438","severity":1,"message":"3439","line":69,"column":35,"nodeType":"3440","messageId":"3441","endLine":69,"endColumn":37},{"ruleId":"3438","severity":1,"message":"3439","line":69,"column":66,"nodeType":"3440","messageId":"3441","endLine":69,"endColumn":68},{"ruleId":"3434","severity":1,"message":"3619","line":2,"column":18,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":45,"column":13,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3619","line":2,"column":18,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":23},{"ruleId":"3438","severity":1,"message":"3439","line":45,"column":13,"nodeType":"3440","messageId":"3441","endLine":45,"endColumn":15},{"ruleId":"3434","severity":1,"message":"3469","line":1,"column":17,"nodeType":"3436","messageId":"3437","endLine":1,"endColumn":26},{"ruleId":"3434","severity":1,"message":"3473","line":4,"column":3,"nodeType":"3436","messageId":"3437","endLine":4,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3604","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":12},{"ruleId":"3434","severity":1,"message":"3560","line":13,"column":10,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":14},{"ruleId":"3434","severity":1,"message":"3561","line":13,"column":16,"nodeType":"3436","messageId":"3437","endLine":13,"endColumn":23},{"ruleId":"3434","severity":1,"message":"3473","line":7,"column":3,"nodeType":"3436","messageId":"3437","endLine":7,"endColumn":13},{"ruleId":"3434","severity":1,"message":"3472","line":8,"column":3,"nodeType":"3436","messageId":"3437","endLine":8,"endColumn":19},{"ruleId":"3434","severity":1,"message":"3468","line":17,"column":9,"nodeType":"3436","messageId":"3437","endLine":17,"endColumn":13},{"ruleId":"3438","severity":1,"message":"3439","line":23,"column":55,"nodeType":"3440","messageId":"3441","endLine":23,"endColumn":57},{"ruleId":"3443","severity":1,"message":"3562","line":30,"column":6,"nodeType":"3445","endLine":30,"endColumn":8,"suggestions":"3673"},{"ruleId":"3438","severity":1,"message":"3449","line":43,"column":18,"nodeType":"3440","messageId":"3441","endLine":43,"endColumn":20},{"ruleId":"3438","severity":1,"message":"3449","line":52,"column":18,"nodeType":"3440","messageId":"3441","endLine":52,"endColumn":20},{"ruleId":"3434","severity":1,"message":"3537","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3538","line":11,"column":7,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":14,"column":12,"nodeType":"3440","messageId":"3441","endLine":14,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":16,"column":19,"nodeType":"3440","messageId":"3441","endLine":16,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":19,"column":15,"nodeType":"3440","messageId":"3441","endLine":19,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3644","line":24,"column":9,"nodeType":"3436","messageId":"3437","endLine":24,"endColumn":12},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":35,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":37},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":66,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":68},{"ruleId":"3434","severity":1,"message":"3537","line":2,"column":10,"nodeType":"3436","messageId":"3437","endLine":2,"endColumn":18},{"ruleId":"3434","severity":1,"message":"3538","line":11,"column":7,"nodeType":"3436","messageId":"3437","endLine":11,"endColumn":18},{"ruleId":"3438","severity":1,"message":"3439","line":14,"column":12,"nodeType":"3440","messageId":"3441","endLine":14,"endColumn":14},{"ruleId":"3438","severity":1,"message":"3439","line":16,"column":19,"nodeType":"3440","messageId":"3441","endLine":16,"endColumn":21},{"ruleId":"3438","severity":1,"message":"3439","line":19,"column":15,"nodeType":"3440","messageId":"3441","endLine":19,"endColumn":17},{"ruleId":"3434","severity":1,"message":"3644","line":24,"column":9,"nodeType":"3436","messageId":"3437","endLine":24,"endColumn":12},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":35,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":37},{"ruleId":"3438","severity":1,"message":"3439","line":67,"column":66,"nodeType":"3440","messageId":"3441","endLine":67,"endColumn":68},"no-native-reassign",["3674"],"no-negated-in-lhs",["3675"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'SipProvider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["3676"],"'TRAC_ACCOUNT' is defined but never used.","'data' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'polygonString' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["3677"],"'Profiler' is defined but never used.","'Users' is defined but never used.","'Supervisor' is defined but never used.","'Geofence' is defined but never used.","'Services' is defined but never used.","'Natures' is defined but never used.","'Priorities' is defined but never used.","'Subscriptions' is defined but never used.","'Groups' is defined but never used.","'Applications' is defined but never used.","'Customers' is defined but never used.","'GeoView' is defined but never used.","'Logs' is defined but never used.","'Geo' is defined but never used.","'ResponderView' is defined but never used.","'init' is assigned a value but never used.","'useEffect' is defined but never used.","'Operator' is defined but never used.","'GetUsers' is defined but never used.","'GetTraccarGroups' is defined but never used.","'UserLogout' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["3678"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'GetServices' is defined but never used.","'FetchAllGeofences' is defined but never used.","'GetNatures' is defined but never used.","'GetSubscriptions' is defined but never used.","'PieChart' is defined but never used.","'Circle' is defined but never used.","'GetPanics' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'GetAllResponder' is defined but never used.","'changeZoom' is defined but never used.","'BarChart' is defined but never used.","'HSBar' is defined but never used.","'Notification' is defined but never used.","'CheckIfEmpty' is defined but never used.","'data365' is defined but never used.","'OperatorWidget' is assigned a value but never used.","'unknownRespWidget' is assigned a value but never used.","'boundryRespWidget' is assigned a value but never used.","'filter_res' is defined but never used.","'getTable2' is assigned a value but never used.","'getOperss' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'GetPriorities' is defined but never used.","'selectButton' is assigned a value but never used.","'AddGeofences' is defined but never used.","'Marker' is defined but never used.","React Hook useEffect has missing dependencies: 'props.geoLat' and 'props.geoLng'. Either include them or remove the dependency array.",["3679"],"'UserLogin' is defined but never used.","'setId' is assigned a value but never used.","'setAddress' is assigned a value but never used.",["3680"],"'delResponder' is assigned a value but never used.","'Beep3' is defined but never used.","'Beep2' is defined but never used.","'Beep1' is defined but never used.","'Caller' is defined but never used.","'setNum' is assigned a value but never used.","'ans' is assigned a value but never used.","'setAns' is assigned a value but never used.","'mediaSource' is assigned a value but never used.","'selfView' is assigned a value but never used.","'remoteView' is assigned a value but never used.","no-redeclare","'completeSession' is already defined.","redeclared","'eventHandlers' is assigned a value but never used.",["3681"],"'groupIds' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside",["3682"],["3683"],"'useState' is defined but never used.","'compareDate' is assigned a value but never used.",["3684"],"'setSiders' is assigned a value but never used.",["3685"],["3686"],["3687"],["3688"],["3689"],"'Howler' is defined but never used.","'connect' is defined but never used.","'acceptCall' is assigned a value but never used.","'_hideChat' is assigned a value but never used.","no-use-before-define","'options' was used before it was defined.","usedBeforeDefined","'num' is assigned a value but never used.","'_' is defined but never used.","'uniqid' is defined but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'props.traccarResponders'. Either include them or remove the dependency array.",["3690"],"React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["3691"],"'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'props.natures'. Either include them or remove the dependency array.",["3692"],"React Hook useEffect has missing dependencies: 'props.id' and 'props.services'. Either include them or remove the dependency array.",["3693"],"React Hook useEffect has missing dependencies: 'props.id' and 'props.operators'. Either include them or remove the dependency array.",["3694"],["3695"],"'groupser' is assigned a value but never used.","'setData' is assigned a value but never used.","'id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.admin' and 'props.id'. Either include them or remove the dependency array.",["3696"],"React Hook useEffect has missing dependencies: 'props.groups' and 'props.id'. Either include them or remove the dependency array.",["3697"],"React Hook useEffect has missing dependencies: 'props.id' and 'props.subscriptions'. Either include them or remove the dependency array.",["3698"],"'Reports' is defined but never used.","'Beep4' is defined but never used.","'getCenter' is defined but never used.","'filter' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'opr' is assigned a value but never used.","'setOpr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'viewport'. Either include it or remove the dependency array. You can also do a functional update 'setViewport(v => ...)' if you only need 'viewport' in the 'setViewport' call.",["3699"],"'prev2' is assigned a value but never used.","Assignments to the 'loop' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'handleCusts'. Either include it or remove the dependency array.",["3700"],"React Hook useEffect has a missing dependency: 'handleNewPanic'. Either include it or remove the dependency array.",["3701"],"'getOperators' is assigned a value but never used.","'popButton' is assigned a value but never used.",["3702"],["3703"],["3704"],["3705"],["3706"],"'DelPanics' is defined but never used.",["3707"],["3708"],["3709"],["3710"],["3711"],["3712"],["3713"],["3714"],["3715"],["3716"],["3717"],["3718"],["3719"],["3720"],"'Popup' is defined but never used.",["3721"],["3722"],["3723"],["3724"],["3725"],["3726"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'getOper' is assigned a value but never used.",["3727"],["3728"],["3729"],["3730"],["3731"],["3732"],["3733"],["3734"],["3735"],["3736"],["3737"],["3738"],["3739"],"'pop' is assigned a value but never used.",["3740"],["3741"],"'lineGraphWidget' is assigned a value but never used.",["3742"],["3743"],["3744"],["3745"],["3746"],["3747"],["3748"],["3749"],["3750"],["3751"],["3752"],["3753"],["3754"],["3755"],["3756"],["3757"],["3758"],"no-dupe-keys","Duplicate key 'panics'.","ObjectExpression",["3759"],["3760"],["3761"],["3762"],["3763"],["3764"],"no-global-assign","no-unsafe-negation",{"desc":"3765","fix":"3766"},{"desc":"3767","fix":"3768"},{"desc":"3769","fix":"3770"},{"desc":"3771","fix":"3772"},{"desc":"3767","fix":"3773"},{"desc":"3769","fix":"3774"},{"desc":"3767","fix":"3775"},{"desc":"3771","fix":"3776"},{"desc":"3769","fix":"3777"},{"desc":"3771","fix":"3778"},{"desc":"3767","fix":"3779"},{"desc":"3769","fix":"3780"},{"desc":"3767","fix":"3781"},{"desc":"3771","fix":"3782"},{"desc":"3783","fix":"3784"},{"desc":"3785","fix":"3786"},{"desc":"3787","fix":"3788"},{"desc":"3789","fix":"3790"},{"desc":"3791","fix":"3792"},{"desc":"3783","fix":"3793"},{"desc":"3794","fix":"3795"},{"desc":"3796","fix":"3797"},{"desc":"3798","fix":"3799"},{"desc":"3800","fix":"3801"},{"desc":"3802","fix":"3803"},{"desc":"3804","fix":"3805"},{"desc":"3783","fix":"3806"},{"desc":"3789","fix":"3807"},{"desc":"3787","fix":"3808"},{"desc":"3789","fix":"3809"},{"desc":"3787","fix":"3810"},{"desc":"3796","fix":"3811"},{"desc":"3798","fix":"3812"},{"desc":"3787","fix":"3813"},{"desc":"3787","fix":"3814"},{"desc":"3800","fix":"3815"},{"desc":"3802","fix":"3816"},{"desc":"3804","fix":"3817"},{"desc":"3785","fix":"3818"},{"desc":"3791","fix":"3819"},{"desc":"3794","fix":"3820"},{"desc":"3785","fix":"3821"},{"desc":"3783","fix":"3822"},{"desc":"3789","fix":"3823"},{"desc":"3796","fix":"3824"},{"desc":"3798","fix":"3825"},{"desc":"3787","fix":"3826"},{"desc":"3787","fix":"3827"},{"desc":"3800","fix":"3828"},{"desc":"3802","fix":"3829"},{"desc":"3804","fix":"3830"},{"desc":"3794","fix":"3831"},{"desc":"3791","fix":"3832"},{"desc":"3787","fix":"3833"},{"desc":"3798","fix":"3834"},{"desc":"3796","fix":"3835"},{"desc":"3800","fix":"3836"},{"desc":"3802","fix":"3837"},{"desc":"3804","fix":"3838"},{"desc":"3787","fix":"3839"},{"desc":"3791","fix":"3840"},{"desc":"3789","fix":"3841"},{"desc":"3794","fix":"3842"},{"desc":"3785","fix":"3843"},{"desc":"3769","fix":"3844"},{"desc":"3771","fix":"3845"},{"desc":"3769","fix":"3846"},{"desc":"3767","fix":"3847"},{"desc":"3771","fix":"3848"},{"desc":"3800","fix":"3849"},{"desc":"3802","fix":"3850"},{"desc":"3804","fix":"3851"},{"desc":"3785","fix":"3852"},{"desc":"3791","fix":"3853"},{"desc":"3798","fix":"3854"},{"desc":"3796","fix":"3855"},{"desc":"3794","fix":"3856"},{"desc":"3791","fix":"3857"},{"desc":"3785","fix":"3858"},{"desc":"3783","fix":"3859"},{"desc":"3794","fix":"3860"},{"desc":"3800","fix":"3861"},{"desc":"3804","fix":"3862"},{"desc":"3789","fix":"3863"},{"desc":"3787","fix":"3864"},{"desc":"3787","fix":"3865"},{"desc":"3796","fix":"3866"},{"desc":"3798","fix":"3867"},{"desc":"3787","fix":"3868"},"Update the dependencies array to be: [loadData]",{"range":"3869","text":"3870"},"Update the dependencies array to be: [init]",{"range":"3871","text":"3872"},"Update the dependencies array to be: [props]",{"range":"3873","text":"3874"},"Update the dependencies array to be: [props.geoLat, props.geoLng, props.traccarGeofences]",{"range":"3875","text":"3876"},{"range":"3877","text":"3872"},{"range":"3878","text":"3874"},{"range":"3879","text":"3872"},{"range":"3880","text":"3876"},{"range":"3881","text":"3874"},{"range":"3882","text":"3876"},{"range":"3883","text":"3872"},{"range":"3884","text":"3874"},{"range":"3885","text":"3872"},{"range":"3886","text":"3876"},"Update the dependencies array to be: [props.id, props.traccarResponders]",{"range":"3887","text":"3888"},"Update the dependencies array to be: [props.id, props.supervisors]",{"range":"3889","text":"3890"},"Update the dependencies array to be: [props.id, props.natures]",{"range":"3891","text":"3892"},"Update the dependencies array to be: [props.id, props.services]",{"range":"3893","text":"3894"},"Update the dependencies array to be: [props.id, props.operators]",{"range":"3895","text":"3896"},{"range":"3897","text":"3888"},"Update the dependencies array to be: [props.admin, props.id]",{"range":"3898","text":"3899"},"Update the dependencies array to be: [props.groups, props.id]",{"range":"3900","text":"3901"},"Update the dependencies array to be: [props.id, props.subscriptions]",{"range":"3902","text":"3903"},"Update the dependencies array to be: [props.zoomLevel, props.longitude, props.latitude, viewport]",{"range":"3904","text":"3905"},"Update the dependencies array to be: [handleCusts, props.Fcustomers]",{"range":"3906","text":"3907"},"Update the dependencies array to be: [handleNewPanic, props.panics]",{"range":"3908","text":"3909"},{"range":"3910","text":"3888"},{"range":"3911","text":"3894"},{"range":"3912","text":"3892"},{"range":"3913","text":"3894"},{"range":"3914","text":"3892"},{"range":"3915","text":"3901"},{"range":"3916","text":"3903"},{"range":"3917","text":"3892"},{"range":"3918","text":"3892"},{"range":"3919","text":"3905"},{"range":"3920","text":"3907"},{"range":"3921","text":"3909"},{"range":"3922","text":"3890"},{"range":"3923","text":"3896"},{"range":"3924","text":"3899"},{"range":"3925","text":"3890"},{"range":"3926","text":"3888"},{"range":"3927","text":"3894"},{"range":"3928","text":"3901"},{"range":"3929","text":"3903"},{"range":"3930","text":"3892"},{"range":"3931","text":"3892"},{"range":"3932","text":"3905"},{"range":"3933","text":"3907"},{"range":"3934","text":"3909"},{"range":"3935","text":"3899"},{"range":"3936","text":"3896"},{"range":"3937","text":"3892"},{"range":"3938","text":"3903"},{"range":"3939","text":"3901"},{"range":"3940","text":"3905"},{"range":"3941","text":"3907"},{"range":"3942","text":"3909"},{"range":"3943","text":"3892"},{"range":"3944","text":"3896"},{"range":"3945","text":"3894"},{"range":"3946","text":"3899"},{"range":"3947","text":"3890"},{"range":"3948","text":"3874"},{"range":"3949","text":"3876"},{"range":"3950","text":"3874"},{"range":"3951","text":"3872"},{"range":"3952","text":"3876"},{"range":"3953","text":"3905"},{"range":"3954","text":"3907"},{"range":"3955","text":"3909"},{"range":"3956","text":"3890"},{"range":"3957","text":"3896"},{"range":"3958","text":"3903"},{"range":"3959","text":"3901"},{"range":"3960","text":"3899"},{"range":"3961","text":"3896"},{"range":"3962","text":"3890"},{"range":"3963","text":"3888"},{"range":"3964","text":"3899"},{"range":"3965","text":"3905"},{"range":"3966","text":"3909"},{"range":"3967","text":"3894"},{"range":"3968","text":"3892"},{"range":"3969","text":"3892"},{"range":"3970","text":"3901"},{"range":"3971","text":"3903"},{"range":"3972","text":"3892"},[1076,1078],"[loadData]",[1143,1145],"[init]",[520,522],"[props]",[1679,1703],"[props.geoLat, props.geoLng, props.traccarGeofences]",[498,500],[520,522],[523,525],[1679,1703],[520,522],[1679,1703],[498,500],[520,522],[523,525],[1679,1703],[1616,1618],"[props.id, props.traccarResponders]",[957,976],"[props.id, props.supervisors]",[732,734],"[props.id, props.natures]",[731,733],"[props.id, props.services]",[951,953],"[props.id, props.operators]",[1698,1700],[941,943],"[props.admin, props.id]",[985,987],"[props.groups, props.id]",[1202,1204],"[props.id, props.subscriptions]",[2275,2325],"[props.zoomLevel, props.longitude, props.latitude, viewport]",[4789,4807],"[handleCusts, props.Fcustomers]",[4892,4906],"[handleNewPanic, props.panics]",[1616,1618],[731,733],[732,734],[731,733],[735,737],[678,680],[1202,1204],[732,734],[735,737],[2022,2072],[4533,4551],[4636,4650],[957,976],[951,953],[941,943],[957,976],[1698,1700],[731,733],[985,987],[1202,1204],[735,737],[732,734],[2022,2072],[4533,4551],[4636,4650],[941,943],[951,953],[735,737],[1202,1204],[678,680],[2263,2313],[4777,4795],[4880,4894],[732,734],[951,953],[731,733],[941,943],[957,976],[520,522],[1577,1601],[520,522],[498,500],[1679,1703],[2022,2072],[4533,4551],[4636,4650],[957,976],[951,953],[1202,1204],[626,628],[941,943],[951,953],[957,976],[1616,1618],[941,943],[1942,1992],[4167,4181],[731,733],[732,734],[735,737],[678,680],[1202,1204],[735,737]]